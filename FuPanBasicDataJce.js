// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 8.0.9_20200904091838 by TAF Team.
// Generated from `/data/user/xuzhengwei/upload/FuPanBasicData.jce'
// **********************************************************************

/* eslint-disable */

var assert    = require('assert');
var TafStream = require('@taf/taf-stream');

if (TafStream.JceStruct == undefined) {
    TafStream.JceStruct = function() {
        this._jce_double_precision_ = -1;
    }
    TafStream.JceStruct.prototype.setPrecision = function(d) {
        if ((d == -1) || (d >= 0 && d <= 15)) {
            this._jce_double_precision_ = d;
            return true;
        }
        return false;
    }
    TafStream.JceStruct.prototype.resetPrecision = function() { this._jce_double_precision_ = -1;}
    TafStream.JceStruct.prototype.hasSetPrecision = function() { return (this._jce_double_precision_ >= 0 && this._jce_double_precision_ <= 15);}
    TafStream.JceStruct.prototype.getPrecision = function() { return this._jce_double_precision_; }
}



var FuPan = FuPan || {};
module.exports.FuPan = FuPan;

FuPan.E_STOCK_FILTER_TYPE = {
    E_STOCK_ALL : 0,
    E_STOCK_FILTER_ST : 1,
    E_STOCK_FILTER_NEWSTOCK : 2,
    E_STOCK_FILTER_ST_NEWSTOCK : 3
};

FuPan.E_STOCK_FILTER_TYPE.etos = function(enm) {
    switch(enm){
        case 0 : return 'E_STOCK_ALL';
        case 1 : return 'E_STOCK_FILTER_ST';
        case 2 : return 'E_STOCK_FILTER_NEWSTOCK';
        case 3 : return 'E_STOCK_FILTER_ST_NEWSTOCK';
    }
    return undefined;
};

FuPan.E_STOCK_FILTER_TYPE.stoe = function(enm) {
    switch(enm){
        case 'E_STOCK_ALL' : return 0;
        case 'E_STOCK_FILTER_ST' : return 1;
        case 'E_STOCK_FILTER_NEWSTOCK' : return 2;
        case 'E_STOCK_FILTER_ST_NEWSTOCK' : return 3;
    }
    return undefined;
};

FuPan.E_STOCK_FILTER_TYPE._write = function(os, tag, val) { return os.writeInt32(tag, val); }
FuPan.E_STOCK_FILTER_TYPE._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }

FuPan.E_STOCK_POOL_TYPE = {
    E_STOCK_ZT_POOL : 1,
    E_STOCK_ONE_POOL : 2,
    E_STOCK_T_POOL : 3,
    E_STOCK_CHANGE_POOL : 4,
    E_STOCK_OPEN_POOL : 5,
    E_STOCK_STRONG_POOL : 6,
    E_STOCK_COMP_POOL : 7,
    E_STOCK_LASTZT_POOL : 8,
    E_STOCK_DT_POOL : 9,
    E_STOCK_DT_OPEN_POOL : 10,
    E_STOCK_FANBAO_ZT_POOL : 11,
    E_STOCK_HIT_BOARD_POOL : 12,
    E_STOCK_BARGAIN_HUNTING_POOL : 13,
    E_STOCK_POOL_TYPE_END : 14
};

FuPan.E_STOCK_POOL_TYPE.etos = function(enm) {
    switch(enm){
        case 1 : return 'E_STOCK_ZT_POOL';
        case 2 : return 'E_STOCK_ONE_POOL';
        case 3 : return 'E_STOCK_T_POOL';
        case 4 : return 'E_STOCK_CHANGE_POOL';
        case 5 : return 'E_STOCK_OPEN_POOL';
        case 6 : return 'E_STOCK_STRONG_POOL';
        case 7 : return 'E_STOCK_COMP_POOL';
        case 8 : return 'E_STOCK_LASTZT_POOL';
        case 9 : return 'E_STOCK_DT_POOL';
        case 10 : return 'E_STOCK_DT_OPEN_POOL';
        case 11 : return 'E_STOCK_FANBAO_ZT_POOL';
        case 12 : return 'E_STOCK_HIT_BOARD_POOL';
        case 13 : return 'E_STOCK_BARGAIN_HUNTING_POOL';
        case 14 : return 'E_STOCK_POOL_TYPE_END';
    }
    return undefined;
};

FuPan.E_STOCK_POOL_TYPE.stoe = function(enm) {
    switch(enm){
        case 'E_STOCK_ZT_POOL' : return 1;
        case 'E_STOCK_ONE_POOL' : return 2;
        case 'E_STOCK_T_POOL' : return 3;
        case 'E_STOCK_CHANGE_POOL' : return 4;
        case 'E_STOCK_OPEN_POOL' : return 5;
        case 'E_STOCK_STRONG_POOL' : return 6;
        case 'E_STOCK_COMP_POOL' : return 7;
        case 'E_STOCK_LASTZT_POOL' : return 8;
        case 'E_STOCK_DT_POOL' : return 9;
        case 'E_STOCK_DT_OPEN_POOL' : return 10;
        case 'E_STOCK_FANBAO_ZT_POOL' : return 11;
        case 'E_STOCK_HIT_BOARD_POOL' : return 12;
        case 'E_STOCK_BARGAIN_HUNTING_POOL' : return 13;
        case 'E_STOCK_POOL_TYPE_END' : return 14;
    }
    return undefined;
};

FuPan.E_STOCK_POOL_TYPE._write = function(os, tag, val) { return os.writeInt32(tag, val); }
FuPan.E_STOCK_POOL_TYPE._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }

FuPan.E_STOCK_ZT_TYPE = {
    E_STOCK_ZT_UNKNOWN : 0,
    E_STOCK_COMP_ZT : 1,
    E_STOCK_ONE_BOARD : 2,
    E_STOCK_T_BOARD : 3,
    E_STOCK_CHANGE_BOARD : 4,
    E_STOCK_OPEN_BOARD : 5
};

FuPan.E_STOCK_ZT_TYPE.etos = function(enm) {
    switch(enm){
        case 0 : return 'E_STOCK_ZT_UNKNOWN';
        case 1 : return 'E_STOCK_COMP_ZT';
        case 2 : return 'E_STOCK_ONE_BOARD';
        case 3 : return 'E_STOCK_T_BOARD';
        case 4 : return 'E_STOCK_CHANGE_BOARD';
        case 5 : return 'E_STOCK_OPEN_BOARD';
    }
    return undefined;
};

FuPan.E_STOCK_ZT_TYPE.stoe = function(enm) {
    switch(enm){
        case 'E_STOCK_ZT_UNKNOWN' : return 0;
        case 'E_STOCK_COMP_ZT' : return 1;
        case 'E_STOCK_ONE_BOARD' : return 2;
        case 'E_STOCK_T_BOARD' : return 3;
        case 'E_STOCK_CHANGE_BOARD' : return 4;
        case 'E_STOCK_OPEN_BOARD' : return 5;
    }
    return undefined;
};

FuPan.E_STOCK_ZT_TYPE._write = function(os, tag, val) { return os.writeInt32(tag, val); }
FuPan.E_STOCK_ZT_TYPE._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }

FuPan.E_BLOCK_CLASS_TYPE = {
    E_BLOCK_INDUSTRY : 0,
    E_BLOCK_AREA : 1,
    E_BLOCK_CONCEPT : 2,
    E_BLOCK_OTHER : 3
};

FuPan.E_BLOCK_CLASS_TYPE.etos = function(enm) {
    switch(enm){
        case 0 : return 'E_BLOCK_INDUSTRY';
        case 1 : return 'E_BLOCK_AREA';
        case 2 : return 'E_BLOCK_CONCEPT';
        case 3 : return 'E_BLOCK_OTHER';
    }
    return undefined;
};

FuPan.E_BLOCK_CLASS_TYPE.stoe = function(enm) {
    switch(enm){
        case 'E_BLOCK_INDUSTRY' : return 0;
        case 'E_BLOCK_AREA' : return 1;
        case 'E_BLOCK_CONCEPT' : return 2;
        case 'E_BLOCK_OTHER' : return 3;
    }
    return undefined;
};

FuPan.E_BLOCK_CLASS_TYPE._write = function(os, tag, val) { return os.writeInt32(tag, val); }
FuPan.E_BLOCK_CLASS_TYPE._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }


FuPan.StockInfo = function() {
    this.shtSetcode = 0;
    this.sCode = "";
    this._classname = "FuPan.StockInfo";
};
FuPan.StockInfo.prototype = new TafStream.JceStruct();
FuPan.StockInfo._classname = "FuPan.StockInfo";

FuPan.StockInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.StockInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.StockInfo._readFrom = function (is) {
    if (is.readResumePrecision == undefined) {
        is.readResumePrecision = function() {
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.StockInfo();
    tmp.shtSetcode = is.readInt16(1, false, 0);
    tmp.sCode = is.readString(2, false, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.StockInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.shtSetcode != undefined && this.shtSetcode != 0) {
        os.writeInt16(1, this.shtSetcode);
    }
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(2, this.sCode);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.StockInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.StockInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.StockInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.shtSetcode = this.shtSetcode;
    tmp.sCode = this.sCode;
    
    return tmp;
}
FuPan.StockInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("shtSetcode") || (this.shtSetcode = json.shtSetcode);
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
}
FuPan.StockInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.StockInfo.new = function () {
    return new FuPan.StockInfo();
}
FuPan.StockInfo.create = function (is) {
    return FuPan.StockInfo._readFrom(is);
}
FuPan.StkSimpInfo = function() {
    this.iMarket = 0;
    this.sCode = "";
    this.sName = "";
    this._classname = "FuPan.StkSimpInfo";
};
FuPan.StkSimpInfo.prototype = new TafStream.JceStruct();
FuPan.StkSimpInfo._classname = "FuPan.StkSimpInfo";

FuPan.StkSimpInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.StkSimpInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.StkSimpInfo._readFrom = function (is) {
    if (is.readResumePrecision == undefined) {
        is.readResumePrecision = function() {
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.StkSimpInfo();
    tmp.iMarket = is.readInt32(0, false, 0);
    tmp.sCode = is.readString(1, false, "");
    tmp.sName = is.readString(2, false, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.StkSimpInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iMarket != undefined && this.iMarket != 0) {
        os.writeInt32(0, this.iMarket);
    }
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    if (this.sName != undefined && this.sName != "") {
        os.writeString(2, this.sName);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.StkSimpInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.StkSimpInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.StkSimpInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.iMarket = this.iMarket;
    tmp.sCode = this.sCode;
    tmp.sName = this.sName;
    
    return tmp;
}
FuPan.StkSimpInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iMarket") || (this.iMarket = json.iMarket);
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("sName") || (this.sName = json.sName);
}
FuPan.StkSimpInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.StkSimpInfo.new = function () {
    return new FuPan.StkSimpInfo();
}
FuPan.StkSimpInfo.create = function (is) {
    return FuPan.StkSimpInfo._readFrom(is);
}
FuPan.FBlockSimpleInfo = function() {
    this.iMarket = 0;
    this.sCode = "";
    this.eType = FuPan.E_BLOCK_CLASS_TYPE.E_BLOCK_OTHER;
    this.sName = "";
    this._classname = "FuPan.FBlockSimpleInfo";
};
FuPan.FBlockSimpleInfo.prototype = new TafStream.JceStruct();
FuPan.FBlockSimpleInfo._classname = "FuPan.FBlockSimpleInfo";

FuPan.FBlockSimpleInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockSimpleInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockSimpleInfo._readFrom = function (is) {
    if (is.readResumePrecision == undefined) {
        is.readResumePrecision = function() {
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockSimpleInfo();
    tmp.iMarket = is.readInt32(0, false, 0);
    tmp.sCode = is.readString(1, false, "");
    tmp.eType = is.readInt32(2, false, FuPan.E_BLOCK_CLASS_TYPE.E_BLOCK_OTHER);
    tmp.sName = is.readString(3, false, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockSimpleInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iMarket != undefined && this.iMarket != 0) {
        os.writeInt32(0, this.iMarket);
    }
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    if (this.eType != undefined) {
        os.writeInt32(2, this.eType);
    }
    if (this.sName != undefined && this.sName != "") {
        os.writeString(3, this.sName);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockSimpleInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockSimpleInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockSimpleInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.iMarket = this.iMarket;
    tmp.sCode = this.sCode;
    tmp.eType = this.eType;
    tmp.sName = this.sName;
    
    return tmp;
}
FuPan.FBlockSimpleInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iMarket") || (this.iMarket = json.iMarket);
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("eType") || (this.eType = json.eType);
    !json.hasOwnProperty("sName") || (this.sName = json.sName);
}
FuPan.FBlockSimpleInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockSimpleInfo.new = function () {
    return new FuPan.FBlockSimpleInfo();
}
FuPan.FBlockSimpleInfo.create = function (is) {
    return FuPan.FBlockSimpleInfo._readFrom(is);
}
FuPan.FOpenBoardDetail = function() {
    this.iZDTTime = 0;
    this.iZDTOpenTime = 0;
    this.dLowRatio = 0;
    this.lFirstZDTVol = 0;
    this.dFirstZDTRatio = 0;
    this.lLastZDTVol = 0;
    this.dLastZDTRatio = 0;
    this.lHighZDTVol = 0;
    this.dHighZDTRatio = 0;
    this._classname = "FuPan.FOpenBoardDetail";
};
FuPan.FOpenBoardDetail.prototype = new TafStream.JceStruct();
FuPan.FOpenBoardDetail._classname = "FuPan.FOpenBoardDetail";

FuPan.FOpenBoardDetail._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FOpenBoardDetail._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FOpenBoardDetail._readFrom = function (is) {
    if (is.readResumePrecision == undefined) {
        is.readResumePrecision = function() {
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FOpenBoardDetail();
    tmp.iZDTTime = is.readInt32(0, false, 0);
    tmp.iZDTOpenTime = is.readInt32(1, false, 0);
    tmp.dLowRatio = is.readDouble(2, false, 0);
    tmp.lFirstZDTVol = is.readInt64(3, false, 0);
    tmp.dFirstZDTRatio = is.readDouble(4, false, 0);
    tmp.lLastZDTVol = is.readInt64(5, false, 0);
    tmp.dLastZDTRatio = is.readDouble(6, false, 0);
    tmp.lHighZDTVol = is.readInt64(7, false, 0);
    tmp.dHighZDTRatio = is.readDouble(8, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FOpenBoardDetail.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iZDTTime != undefined && this.iZDTTime != 0) {
        os.writeInt32(0, this.iZDTTime);
    }
    if (this.iZDTOpenTime != undefined && this.iZDTOpenTime != 0) {
        os.writeInt32(1, this.iZDTOpenTime);
    }
    if (this.dLowRatio != undefined && this.dLowRatio != 0) {
        os.writeDouble(2, this.dLowRatio);
    }
    if (this.lFirstZDTVol != undefined && this.lFirstZDTVol != 0) {
        os.writeInt64(3, this.lFirstZDTVol);
    }
    if (this.dFirstZDTRatio != undefined && this.dFirstZDTRatio != 0) {
        os.writeDouble(4, this.dFirstZDTRatio);
    }
    if (this.lLastZDTVol != undefined && this.lLastZDTVol != 0) {
        os.writeInt64(5, this.lLastZDTVol);
    }
    if (this.dLastZDTRatio != undefined && this.dLastZDTRatio != 0) {
        os.writeDouble(6, this.dLastZDTRatio);
    }
    if (this.lHighZDTVol != undefined && this.lHighZDTVol != 0) {
        os.writeInt64(7, this.lHighZDTVol);
    }
    if (this.dHighZDTRatio != undefined && this.dHighZDTRatio != 0) {
        os.writeDouble(8, this.dHighZDTRatio);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FOpenBoardDetail.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FOpenBoardDetail.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FOpenBoardDetail.prototype.toObject = function() { 
    var tmp = {};

    tmp.iZDTTime = this.iZDTTime;
    tmp.iZDTOpenTime = this.iZDTOpenTime;
    tmp.dLowRatio = this.dLowRatio;
    tmp.lFirstZDTVol = this.lFirstZDTVol;
    tmp.dFirstZDTRatio = this.dFirstZDTRatio;
    tmp.lLastZDTVol = this.lLastZDTVol;
    tmp.dLastZDTRatio = this.dLastZDTRatio;
    tmp.lHighZDTVol = this.lHighZDTVol;
    tmp.dHighZDTRatio = this.dHighZDTRatio;
    
    return tmp;
}
FuPan.FOpenBoardDetail.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iZDTTime") || (this.iZDTTime = json.iZDTTime);
    !json.hasOwnProperty("iZDTOpenTime") || (this.iZDTOpenTime = json.iZDTOpenTime);
    !json.hasOwnProperty("dLowRatio") || (this.dLowRatio = json.dLowRatio);
    !json.hasOwnProperty("lFirstZDTVol") || (this.lFirstZDTVol = json.lFirstZDTVol);
    !json.hasOwnProperty("dFirstZDTRatio") || (this.dFirstZDTRatio = json.dFirstZDTRatio);
    !json.hasOwnProperty("lLastZDTVol") || (this.lLastZDTVol = json.lLastZDTVol);
    !json.hasOwnProperty("dLastZDTRatio") || (this.dLastZDTRatio = json.dLastZDTRatio);
    !json.hasOwnProperty("lHighZDTVol") || (this.lHighZDTVol = json.lHighZDTVol);
    !json.hasOwnProperty("dHighZDTRatio") || (this.dHighZDTRatio = json.dHighZDTRatio);
}
FuPan.FOpenBoardDetail.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FOpenBoardDetail.new = function () {
    return new FuPan.FOpenBoardDetail();
}
FuPan.FOpenBoardDetail.create = function (is) {
    return FuPan.FOpenBoardDetail._readFrom(is);
}
FuPan.FBoardPeriod = function() {
    this.iStrongWeakNum = 0;
    this.iZDTNum = 0;
    this.iOneNum = 0;
    this._classname = "FuPan.FBoardPeriod";
};
FuPan.FBoardPeriod.prototype = new TafStream.JceStruct();
FuPan.FBoardPeriod._classname = "FuPan.FBoardPeriod";

FuPan.FBoardPeriod._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBoardPeriod._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBoardPeriod._readFrom = function (is) {
    if (is.readResumePrecision == undefined) {
        is.readResumePrecision = function() {
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBoardPeriod();
    tmp.iStrongWeakNum = is.readInt32(0, false, 0);
    tmp.iZDTNum = is.readInt32(1, false, 0);
    tmp.iOneNum = is.readInt32(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBoardPeriod.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iStrongWeakNum != undefined && this.iStrongWeakNum != 0) {
        os.writeInt32(0, this.iStrongWeakNum);
    }
    if (this.iZDTNum != undefined && this.iZDTNum != 0) {
        os.writeInt32(1, this.iZDTNum);
    }
    if (this.iOneNum != undefined && this.iOneNum != 0) {
        os.writeInt32(2, this.iOneNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBoardPeriod.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBoardPeriod.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBoardPeriod.prototype.toObject = function() { 
    var tmp = {};

    tmp.iStrongWeakNum = this.iStrongWeakNum;
    tmp.iZDTNum = this.iZDTNum;
    tmp.iOneNum = this.iOneNum;
    
    return tmp;
}
FuPan.FBoardPeriod.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iStrongWeakNum") || (this.iStrongWeakNum = json.iStrongWeakNum);
    !json.hasOwnProperty("iZDTNum") || (this.iZDTNum = json.iZDTNum);
    !json.hasOwnProperty("iOneNum") || (this.iOneNum = json.iOneNum);
}
FuPan.FBoardPeriod.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBoardPeriod.new = function () {
    return new FuPan.FBoardPeriod();
}
FuPan.FBoardPeriod.create = function (is) {
    return FuPan.FBoardPeriod._readFrom(is);
}
FuPan.StockZDTHisDate = function() {
    this.market = 0;
    this.sCode = "";
    this.setZtDays = new TafStream.List(TafStream.Int32);
    this.setOneZtDays = new TafStream.List(TafStream.Int32);
    this.setDtDays = new TafStream.List(TafStream.Int32);
    this.setOneDtDays = new TafStream.List(TafStream.Int32);
    this._classname = "FuPan.StockZDTHisDate";
};
FuPan.StockZDTHisDate.prototype = new TafStream.JceStruct();
FuPan.StockZDTHisDate._classname = "FuPan.StockZDTHisDate";

FuPan.StockZDTHisDate._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.StockZDTHisDate._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.StockZDTHisDate._readFrom = function (is) {
    if (is.readResumePrecision == undefined) {
        is.readResumePrecision = function() {
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.StockZDTHisDate();
    tmp.market = is.readInt32(0, false, 0);
    tmp.sCode = is.readString(1, false, "");
    tmp.setZtDays = is.readList(2, false, TafStream.List(TafStream.Int32));
    tmp.setOneZtDays = is.readList(3, false, TafStream.List(TafStream.Int32));
    tmp.setDtDays = is.readList(4, false, TafStream.List(TafStream.Int32));
    tmp.setOneDtDays = is.readList(5, false, TafStream.List(TafStream.Int32));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.StockZDTHisDate.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.market != undefined && this.market != 0) {
        os.writeInt32(0, this.market);
    }
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    if (this.setZtDays != undefined) {
        os.writeList(2, this.setZtDays);
    }
    if (this.setOneZtDays != undefined) {
        os.writeList(3, this.setOneZtDays);
    }
    if (this.setDtDays != undefined) {
        os.writeList(4, this.setDtDays);
    }
    if (this.setOneDtDays != undefined) {
        os.writeList(5, this.setOneDtDays);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.StockZDTHisDate.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.StockZDTHisDate.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.StockZDTHisDate.prototype.toObject = function() { 
    var tmp = {};

    tmp.market = this.market;
    tmp.sCode = this.sCode;
    tmp.setZtDays = this.setZtDays.toObject();
    tmp.setOneZtDays = this.setOneZtDays.toObject();
    tmp.setDtDays = this.setDtDays.toObject();
    tmp.setOneDtDays = this.setOneDtDays.toObject();
    
    return tmp;
}
FuPan.StockZDTHisDate.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("market") || (this.market = json.market);
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("setZtDays") || (this.setZtDays.readFromObject(json.setZtDays));
    !json.hasOwnProperty("setOneZtDays") || (this.setOneZtDays.readFromObject(json.setOneZtDays));
    !json.hasOwnProperty("setDtDays") || (this.setDtDays.readFromObject(json.setDtDays));
    !json.hasOwnProperty("setOneDtDays") || (this.setOneDtDays.readFromObject(json.setOneDtDays));
}
FuPan.StockZDTHisDate.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.StockZDTHisDate.new = function () {
    return new FuPan.StockZDTHisDate();
}
FuPan.StockZDTHisDate.create = function (is) {
    return FuPan.StockZDTHisDate._readFrom(is);
}
FuPan.FZDStockInfo = function() {
    this.iMarket = 0;
    this.sCode = "";
    this.dNowPrice = 0;
    this.dChgRatio = 0;
    this.dTurnOver = 0;
    this.dAvgTurnOver = 0;
    this.iLastZDTime = 0;
    this.iFirstZDTime = 0;
    this.lLastZDTVol = 0;
    this.dLastZDTRatio = 0;
    this.dFloatValue = 0;
    this.iContinueBoard = 0;
    this.iDetailNum = 0;
    this.vecDetail = new TafStream.List(FuPan.FOpenBoardDetail);
    this.stBoard = new FuPan.FBoardPeriod;
    this.eType = FuPan.E_STOCK_ZT_TYPE.E_STOCK_ZT_UNKNOWN;
    this.iDate = 0;
    this.dPrevRatio = 0;
    this.bIsZt = false;
    this.bUnOpenNewStock = false;
    this.bIsST = false;
    this.bSubNewStock = false;
    this.strStockZTReason = "";
    this.vecBlk = new TafStream.List(FuPan.FBlockSimpleInfo);
    this.dTotalMarketValue = 0;
    this.bIsDt = false;
    this.nStockZTReasonUpdateTime = 0;
    this.vRelatedPlates = new TafStream.List(TafStream.String);
    this.dHighPrice = 0;
    this.dLowPrice = 0;
    this._classname = "FuPan.FZDStockInfo";
};
FuPan.FZDStockInfo.prototype = new TafStream.JceStruct();
FuPan.FZDStockInfo._classname = "FuPan.FZDStockInfo";

FuPan.FZDStockInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZDStockInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZDStockInfo._readFrom = function (is) {
    if (is.readResumePrecision == undefined) {
        is.readResumePrecision = function() {
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZDStockInfo();
    tmp.iMarket = is.readInt32(0, false, 0);
    tmp.sCode = is.readString(1, false, "");
    tmp.dNowPrice = is.readDouble(2, false, 0);
    tmp.dChgRatio = is.readDouble(3, false, 0);
    tmp.dTurnOver = is.readDouble(4, false, 0);
    tmp.dAvgTurnOver = is.readDouble(5, false, 0);
    tmp.iLastZDTime = is.readInt32(6, false, 0);
    tmp.iFirstZDTime = is.readInt32(7, false, 0);
    tmp.lLastZDTVol = is.readInt64(8, false, 0);
    tmp.dLastZDTRatio = is.readDouble(9, false, 0);
    tmp.dFloatValue = is.readDouble(10, false, 0);
    tmp.iContinueBoard = is.readInt32(11, false, 0);
    tmp.iDetailNum = is.readInt32(12, false, 0);
    tmp.vecDetail = is.readList(13, false, TafStream.List(FuPan.FOpenBoardDetail));
    tmp.stBoard = is.readStruct(14, false, FuPan.FBoardPeriod);
    tmp.eType = is.readInt32(15, false, FuPan.E_STOCK_ZT_TYPE.E_STOCK_ZT_UNKNOWN);
    tmp.iDate = is.readInt32(16, false, 0);
    tmp.dPrevRatio = is.readDouble(17, false, 0);
    tmp.bIsZt = is.readBoolean(18, false, false);
    tmp.bUnOpenNewStock = is.readBoolean(19, false, false);
    tmp.bIsST = is.readBoolean(20, false, false);
    tmp.bSubNewStock = is.readBoolean(21, false, false);
    tmp.strStockZTReason = is.readString(22, false, "");
    tmp.vecBlk = is.readList(23, false, TafStream.List(FuPan.FBlockSimpleInfo));
    tmp.dTotalMarketValue = is.readDouble(24, false, 0);
    tmp.bIsDt = is.readBoolean(25, false, false);
    tmp.nStockZTReasonUpdateTime = is.readInt32(26, false, 0);
    tmp.vRelatedPlates = is.readList(27, false, TafStream.List(TafStream.String));
    tmp.dHighPrice = is.readDouble(28, false, 0);
    tmp.dLowPrice = is.readDouble(29, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZDStockInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iMarket != undefined && this.iMarket != 0) {
        os.writeInt32(0, this.iMarket);
    }
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    if (this.dNowPrice != undefined && this.dNowPrice != 0) {
        os.writeDouble(2, this.dNowPrice);
    }
    if (this.dChgRatio != undefined && this.dChgRatio != 0) {
        os.writeDouble(3, this.dChgRatio);
    }
    if (this.dTurnOver != undefined && this.dTurnOver != 0) {
        os.writeDouble(4, this.dTurnOver);
    }
    if (this.dAvgTurnOver != undefined && this.dAvgTurnOver != 0) {
        os.writeDouble(5, this.dAvgTurnOver);
    }
    if (this.iLastZDTime != undefined && this.iLastZDTime != 0) {
        os.writeInt32(6, this.iLastZDTime);
    }
    if (this.iFirstZDTime != undefined && this.iFirstZDTime != 0) {
        os.writeInt32(7, this.iFirstZDTime);
    }
    if (this.lLastZDTVol != undefined && this.lLastZDTVol != 0) {
        os.writeInt64(8, this.lLastZDTVol);
    }
    if (this.dLastZDTRatio != undefined && this.dLastZDTRatio != 0) {
        os.writeDouble(9, this.dLastZDTRatio);
    }
    if (this.dFloatValue != undefined && this.dFloatValue != 0) {
        os.writeDouble(10, this.dFloatValue);
    }
    if (this.iContinueBoard != undefined && this.iContinueBoard != 0) {
        os.writeInt32(11, this.iContinueBoard);
    }
    if (this.iDetailNum != undefined && this.iDetailNum != 0) {
        os.writeInt32(12, this.iDetailNum);
    }
    if (this.vecDetail != undefined) {
        os.writeList(13, this.vecDetail);
    }
    os.writeStruct(14, this.stBoard);
    if (this.eType != undefined) {
        os.writeInt32(15, this.eType);
    }
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(16, this.iDate);
    }
    if (this.dPrevRatio != undefined && this.dPrevRatio != 0) {
        os.writeDouble(17, this.dPrevRatio);
    }
    if (this.bIsZt != undefined && this.bIsZt != false) {
        os.writeBoolean(18, this.bIsZt);
    }
    if (this.bUnOpenNewStock != undefined && this.bUnOpenNewStock != false) {
        os.writeBoolean(19, this.bUnOpenNewStock);
    }
    if (this.bIsST != undefined && this.bIsST != false) {
        os.writeBoolean(20, this.bIsST);
    }
    if (this.bSubNewStock != undefined && this.bSubNewStock != false) {
        os.writeBoolean(21, this.bSubNewStock);
    }
    if (this.strStockZTReason != undefined && this.strStockZTReason != "") {
        os.writeString(22, this.strStockZTReason);
    }
    if (this.vecBlk != undefined) {
        os.writeList(23, this.vecBlk);
    }
    if (this.dTotalMarketValue != undefined && this.dTotalMarketValue != 0) {
        os.writeDouble(24, this.dTotalMarketValue);
    }
    if (this.bIsDt != undefined && this.bIsDt != false) {
        os.writeBoolean(25, this.bIsDt);
    }
    if (this.nStockZTReasonUpdateTime != undefined && this.nStockZTReasonUpdateTime != 0) {
        os.writeInt32(26, this.nStockZTReasonUpdateTime);
    }
    if (this.vRelatedPlates != undefined) {
        os.writeList(27, this.vRelatedPlates);
    }
    if (this.dHighPrice != undefined && this.dHighPrice != 0) {
        os.writeDouble(28, this.dHighPrice);
    }
    if (this.dLowPrice != undefined && this.dLowPrice != 0) {
        os.writeDouble(29, this.dLowPrice);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZDStockInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZDStockInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZDStockInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.iMarket = this.iMarket;
    tmp.sCode = this.sCode;
    tmp.dNowPrice = this.dNowPrice;
    tmp.dChgRatio = this.dChgRatio;
    tmp.dTurnOver = this.dTurnOver;
    tmp.dAvgTurnOver = this.dAvgTurnOver;
    tmp.iLastZDTime = this.iLastZDTime;
    tmp.iFirstZDTime = this.iFirstZDTime;
    tmp.lLastZDTVol = this.lLastZDTVol;
    tmp.dLastZDTRatio = this.dLastZDTRatio;
    tmp.dFloatValue = this.dFloatValue;
    tmp.iContinueBoard = this.iContinueBoard;
    tmp.iDetailNum = this.iDetailNum;
    tmp.vecDetail = this.vecDetail.toObject();
    tmp.stBoard = this.stBoard.toObject();
    tmp.eType = this.eType;
    tmp.iDate = this.iDate;
    tmp.dPrevRatio = this.dPrevRatio;
    tmp.bIsZt = this.bIsZt;
    tmp.bUnOpenNewStock = this.bUnOpenNewStock;
    tmp.bIsST = this.bIsST;
    tmp.bSubNewStock = this.bSubNewStock;
    tmp.strStockZTReason = this.strStockZTReason;
    tmp.vecBlk = this.vecBlk.toObject();
    tmp.dTotalMarketValue = this.dTotalMarketValue;
    tmp.bIsDt = this.bIsDt;
    tmp.nStockZTReasonUpdateTime = this.nStockZTReasonUpdateTime;
    tmp.vRelatedPlates = this.vRelatedPlates.toObject();
    tmp.dHighPrice = this.dHighPrice;
    tmp.dLowPrice = this.dLowPrice;
    
    return tmp;
}
FuPan.FZDStockInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iMarket") || (this.iMarket = json.iMarket);
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("dNowPrice") || (this.dNowPrice = json.dNowPrice);
    !json.hasOwnProperty("dChgRatio") || (this.dChgRatio = json.dChgRatio);
    !json.hasOwnProperty("dTurnOver") || (this.dTurnOver = json.dTurnOver);
    !json.hasOwnProperty("dAvgTurnOver") || (this.dAvgTurnOver = json.dAvgTurnOver);
    !json.hasOwnProperty("iLastZDTime") || (this.iLastZDTime = json.iLastZDTime);
    !json.hasOwnProperty("iFirstZDTime") || (this.iFirstZDTime = json.iFirstZDTime);
    !json.hasOwnProperty("lLastZDTVol") || (this.lLastZDTVol = json.lLastZDTVol);
    !json.hasOwnProperty("dLastZDTRatio") || (this.dLastZDTRatio = json.dLastZDTRatio);
    !json.hasOwnProperty("dFloatValue") || (this.dFloatValue = json.dFloatValue);
    !json.hasOwnProperty("iContinueBoard") || (this.iContinueBoard = json.iContinueBoard);
    !json.hasOwnProperty("iDetailNum") || (this.iDetailNum = json.iDetailNum);
    !json.hasOwnProperty("vecDetail") || (this.vecDetail.readFromObject(json.vecDetail));
    !json.hasOwnProperty("stBoard") || (this.stBoard.readFromObject(json.stBoard));
    !json.hasOwnProperty("eType") || (this.eType = json.eType);
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("dPrevRatio") || (this.dPrevRatio = json.dPrevRatio);
    !json.hasOwnProperty("bIsZt") || (this.bIsZt = json.bIsZt);
    !json.hasOwnProperty("bUnOpenNewStock") || (this.bUnOpenNewStock = json.bUnOpenNewStock);
    !json.hasOwnProperty("bIsST") || (this.bIsST = json.bIsST);
    !json.hasOwnProperty("bSubNewStock") || (this.bSubNewStock = json.bSubNewStock);
    !json.hasOwnProperty("strStockZTReason") || (this.strStockZTReason = json.strStockZTReason);
    !json.hasOwnProperty("vecBlk") || (this.vecBlk.readFromObject(json.vecBlk));
    !json.hasOwnProperty("dTotalMarketValue") || (this.dTotalMarketValue = json.dTotalMarketValue);
    !json.hasOwnProperty("bIsDt") || (this.bIsDt = json.bIsDt);
    !json.hasOwnProperty("nStockZTReasonUpdateTime") || (this.nStockZTReasonUpdateTime = json.nStockZTReasonUpdateTime);
    !json.hasOwnProperty("vRelatedPlates") || (this.vRelatedPlates.readFromObject(json.vRelatedPlates));
    !json.hasOwnProperty("dHighPrice") || (this.dHighPrice = json.dHighPrice);
    !json.hasOwnProperty("dLowPrice") || (this.dLowPrice = json.dLowPrice);
}
FuPan.FZDStockInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZDStockInfo.new = function () {
    return new FuPan.FZDStockInfo();
}
FuPan.FZDStockInfo.create = function (is) {
    return FuPan.FZDStockInfo._readFrom(is);
}
FuPan.FPoolMapInfo = function() {
    this.stockMap = new TafStream.Map(TafStream.String, FuPan.FZDStockInfo);
    this.lRefreshTime = 0;
    this._classname = "FuPan.FPoolMapInfo";
};
FuPan.FPoolMapInfo.prototype = new TafStream.JceStruct();
FuPan.FPoolMapInfo._classname = "FuPan.FPoolMapInfo";

FuPan.FPoolMapInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FPoolMapInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FPoolMapInfo._readFrom = function (is) {
    if (is.readResumePrecision == undefined) {
        is.readResumePrecision = function() {
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FPoolMapInfo();
    tmp.stockMap = is.readMap(0, false, TafStream.Map(TafStream.String, FuPan.FZDStockInfo));
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FPoolMapInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.stockMap != undefined) {
        os.writeMap(0, this.stockMap);
    }
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FPoolMapInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FPoolMapInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FPoolMapInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.stockMap = this.stockMap.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FPoolMapInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stockMap") || (this.stockMap.readFromObject(json.stockMap));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FPoolMapInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FPoolMapInfo.new = function () {
    return new FuPan.FPoolMapInfo();
}
FuPan.FPoolMapInfo.create = function (is) {
    return FuPan.FPoolMapInfo._readFrom(is);
}
FuPan.FStockZTData = function() {
    this.dZTPrice = 0;
    this.dDTPrice = 0;
    this.dTurnover = 0;
    this.dZdf = 0;
    this._classname = "FuPan.FStockZTData";
};
FuPan.FStockZTData.prototype = new TafStream.JceStruct();
FuPan.FStockZTData._classname = "FuPan.FStockZTData";

FuPan.FStockZTData._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FStockZTData._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FStockZTData._readFrom = function (is) {
    if (is.readResumePrecision == undefined) {
        is.readResumePrecision = function() {
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FStockZTData();
    tmp.dZTPrice = is.readDouble(0, false, 0);
    tmp.dDTPrice = is.readDouble(1, false, 0);
    tmp.dTurnover = is.readDouble(2, false, 0);
    tmp.dZdf = is.readDouble(3, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FStockZTData.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.dZTPrice != undefined && this.dZTPrice != 0) {
        os.writeDouble(0, this.dZTPrice);
    }
    if (this.dDTPrice != undefined && this.dDTPrice != 0) {
        os.writeDouble(1, this.dDTPrice);
    }
    if (this.dTurnover != undefined && this.dTurnover != 0) {
        os.writeDouble(2, this.dTurnover);
    }
    if (this.dZdf != undefined && this.dZdf != 0) {
        os.writeDouble(3, this.dZdf);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FStockZTData.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FStockZTData.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FStockZTData.prototype.toObject = function() { 
    var tmp = {};

    tmp.dZTPrice = this.dZTPrice;
    tmp.dDTPrice = this.dDTPrice;
    tmp.dTurnover = this.dTurnover;
    tmp.dZdf = this.dZdf;
    
    return tmp;
}
FuPan.FStockZTData.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("dZTPrice") || (this.dZTPrice = json.dZTPrice);
    !json.hasOwnProperty("dDTPrice") || (this.dDTPrice = json.dDTPrice);
    !json.hasOwnProperty("dTurnover") || (this.dTurnover = json.dTurnover);
    !json.hasOwnProperty("dZdf") || (this.dZdf = json.dZdf);
}
FuPan.FStockZTData.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FStockZTData.new = function () {
    return new FuPan.FStockZTData();
}
FuPan.FStockZTData.create = function (is) {
    return FuPan.FStockZTData._readFrom(is);
}
FuPan.FupanZTStockLabelInfo = function() {
    this.iMarket = 0;
    this.sCode = "";
    this.iContinueBoard = 0;
    this.stBoard = new FuPan.FBoardPeriod;
    this.iDate = 0;
    this.bIsZt = false;
    this.bUnOpenNewStock = false;
    this.bIsDt = false;
    this.iFirstZDTime = 0;
    this.eType = FuPan.E_STOCK_ZT_TYPE.E_STOCK_ZT_UNKNOWN;
    this._classname = "FuPan.FupanZTStockLabelInfo";
};
FuPan.FupanZTStockLabelInfo.prototype = new TafStream.JceStruct();
FuPan.FupanZTStockLabelInfo._classname = "FuPan.FupanZTStockLabelInfo";

FuPan.FupanZTStockLabelInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FupanZTStockLabelInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FupanZTStockLabelInfo._readFrom = function (is) {
    if (is.readResumePrecision == undefined) {
        is.readResumePrecision = function() {
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FupanZTStockLabelInfo();
    tmp.iMarket = is.readInt32(0, false, 0);
    tmp.sCode = is.readString(1, false, "");
    tmp.iContinueBoard = is.readInt32(2, false, 0);
    tmp.stBoard = is.readStruct(3, false, FuPan.FBoardPeriod);
    tmp.iDate = is.readInt32(4, false, 0);
    tmp.bIsZt = is.readBoolean(5, false, false);
    tmp.bUnOpenNewStock = is.readBoolean(6, false, false);
    tmp.bIsDt = is.readBoolean(7, false, false);
    tmp.iFirstZDTime = is.readInt32(8, false, 0);
    tmp.eType = is.readInt32(9, false, FuPan.E_STOCK_ZT_TYPE.E_STOCK_ZT_UNKNOWN);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FupanZTStockLabelInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iMarket != undefined && this.iMarket != 0) {
        os.writeInt32(0, this.iMarket);
    }
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    if (this.iContinueBoard != undefined && this.iContinueBoard != 0) {
        os.writeInt32(2, this.iContinueBoard);
    }
    os.writeStruct(3, this.stBoard);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(4, this.iDate);
    }
    if (this.bIsZt != undefined && this.bIsZt != false) {
        os.writeBoolean(5, this.bIsZt);
    }
    if (this.bUnOpenNewStock != undefined && this.bUnOpenNewStock != false) {
        os.writeBoolean(6, this.bUnOpenNewStock);
    }
    if (this.bIsDt != undefined && this.bIsDt != false) {
        os.writeBoolean(7, this.bIsDt);
    }
    if (this.iFirstZDTime != undefined && this.iFirstZDTime != 0) {
        os.writeInt32(8, this.iFirstZDTime);
    }
    if (this.eType != undefined) {
        os.writeInt32(9, this.eType);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FupanZTStockLabelInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FupanZTStockLabelInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FupanZTStockLabelInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.iMarket = this.iMarket;
    tmp.sCode = this.sCode;
    tmp.iContinueBoard = this.iContinueBoard;
    tmp.stBoard = this.stBoard.toObject();
    tmp.iDate = this.iDate;
    tmp.bIsZt = this.bIsZt;
    tmp.bUnOpenNewStock = this.bUnOpenNewStock;
    tmp.bIsDt = this.bIsDt;
    tmp.iFirstZDTime = this.iFirstZDTime;
    tmp.eType = this.eType;
    
    return tmp;
}
FuPan.FupanZTStockLabelInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iMarket") || (this.iMarket = json.iMarket);
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("iContinueBoard") || (this.iContinueBoard = json.iContinueBoard);
    !json.hasOwnProperty("stBoard") || (this.stBoard.readFromObject(json.stBoard));
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("bIsZt") || (this.bIsZt = json.bIsZt);
    !json.hasOwnProperty("bUnOpenNewStock") || (this.bUnOpenNewStock = json.bUnOpenNewStock);
    !json.hasOwnProperty("bIsDt") || (this.bIsDt = json.bIsDt);
    !json.hasOwnProperty("iFirstZDTime") || (this.iFirstZDTime = json.iFirstZDTime);
    !json.hasOwnProperty("eType") || (this.eType = json.eType);
}
FuPan.FupanZTStockLabelInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FupanZTStockLabelInfo.new = function () {
    return new FuPan.FupanZTStockLabelInfo();
}
FuPan.FupanZTStockLabelInfo.create = function (is) {
    return FuPan.FupanZTStockLabelInfo._readFrom(is);
}
FuPan.FZTLabelPoolMapInfo = function() {
    this.stockMap = new TafStream.Map(TafStream.String, FuPan.FupanZTStockLabelInfo);
    this.lRefreshTime = 0;
    this._classname = "FuPan.FZTLabelPoolMapInfo";
};
FuPan.FZTLabelPoolMapInfo.prototype = new TafStream.JceStruct();
FuPan.FZTLabelPoolMapInfo._classname = "FuPan.FZTLabelPoolMapInfo";

FuPan.FZTLabelPoolMapInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZTLabelPoolMapInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZTLabelPoolMapInfo._readFrom = function (is) {
    if (is.readResumePrecision == undefined) {
        is.readResumePrecision = function() {
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZTLabelPoolMapInfo();
    tmp.stockMap = is.readMap(0, false, TafStream.Map(TafStream.String, FuPan.FupanZTStockLabelInfo));
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZTLabelPoolMapInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.stockMap != undefined) {
        os.writeMap(0, this.stockMap);
    }
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZTLabelPoolMapInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZTLabelPoolMapInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZTLabelPoolMapInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.stockMap = this.stockMap.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FZTLabelPoolMapInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stockMap") || (this.stockMap.readFromObject(json.stockMap));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FZTLabelPoolMapInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZTLabelPoolMapInfo.new = function () {
    return new FuPan.FZTLabelPoolMapInfo();
}
FuPan.FZTLabelPoolMapInfo.create = function (is) {
    return FuPan.FZTLabelPoolMapInfo._readFrom(is);
}
FuPan.FupanZTLabelHisData = function() {
    this.iLastDate = 0;
    this.mapZDtHisDate = new TafStream.Map(TafStream.String, FuPan.StockZDTHisDate);
    this.vecPreZTStock = new TafStream.List(FuPan.FupanZTStockLabelInfo);
    this.mapHisStockInfo = new TafStream.Map(TafStream.String, TafStream.Map(TafStream.Int32, FuPan.FStockZTData));
    this._classname = "FuPan.FupanZTLabelHisData";
};
FuPan.FupanZTLabelHisData.prototype = new TafStream.JceStruct();
FuPan.FupanZTLabelHisData._classname = "FuPan.FupanZTLabelHisData";

FuPan.FupanZTLabelHisData._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FupanZTLabelHisData._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FupanZTLabelHisData._readFrom = function (is) {
    if (is.readResumePrecision == undefined) {
        is.readResumePrecision = function() {
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FupanZTLabelHisData();
    tmp.iLastDate = is.readInt32(0, false, 0);
    tmp.mapZDtHisDate = is.readMap(1, false, TafStream.Map(TafStream.String, FuPan.StockZDTHisDate));
    tmp.vecPreZTStock = is.readList(2, false, TafStream.List(FuPan.FupanZTStockLabelInfo));
    tmp.mapHisStockInfo = is.readMap(3, false, TafStream.Map(TafStream.String, TafStream.Map(TafStream.Int32, FuPan.FStockZTData)));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FupanZTLabelHisData.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iLastDate != undefined && this.iLastDate != 0) {
        os.writeInt32(0, this.iLastDate);
    }
    if (this.mapZDtHisDate != undefined) {
        os.writeMap(1, this.mapZDtHisDate);
    }
    if (this.vecPreZTStock != undefined) {
        os.writeList(2, this.vecPreZTStock);
    }
    if (this.mapHisStockInfo != undefined) {
        os.writeMap(3, this.mapHisStockInfo);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FupanZTLabelHisData.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FupanZTLabelHisData.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FupanZTLabelHisData.prototype.toObject = function() { 
    var tmp = {};

    tmp.iLastDate = this.iLastDate;
    tmp.mapZDtHisDate = this.mapZDtHisDate.toObject();
    tmp.vecPreZTStock = this.vecPreZTStock.toObject();
    tmp.mapHisStockInfo = this.mapHisStockInfo.toObject();
    
    return tmp;
}
FuPan.FupanZTLabelHisData.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iLastDate") || (this.iLastDate = json.iLastDate);
    !json.hasOwnProperty("mapZDtHisDate") || (this.mapZDtHisDate.readFromObject(json.mapZDtHisDate));
    !json.hasOwnProperty("vecPreZTStock") || (this.vecPreZTStock.readFromObject(json.vecPreZTStock));
    !json.hasOwnProperty("mapHisStockInfo") || (this.mapHisStockInfo.readFromObject(json.mapHisStockInfo));
}
FuPan.FupanZTLabelHisData.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FupanZTLabelHisData.new = function () {
    return new FuPan.FupanZTLabelHisData();
}
FuPan.FupanZTLabelHisData.create = function (is) {
    return FuPan.FupanZTLabelHisData._readFrom(is);
}


