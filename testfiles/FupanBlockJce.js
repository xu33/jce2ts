// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 5.3.1 by TAF Team.
// Generated from `./CommonData.jce'
// **********************************************************************

var TafStream = require('@taf/taf-stream');
var TafError  = require('@taf/taf-rpc').error;

if(TafStream.JceStruct == undefined){
TafStream.JceStruct = function() {
this._jce_double_precision_ = -1;
}
TafStream.JceStruct.prototype.setPrecision = function(d) {
if ((d == -1) || (d >= 0 && d <= 15)) {
this._jce_double_precision_ = d;
return true;
}
return false;
}
TafStream.JceStruct.prototype.resetPrecision = function() { this._jce_double_precision_ = -1;}
TafStream.JceStruct.prototype.hasSetPrecision = function() { return (this._jce_double_precision_ >= 0 && this._jce_double_precision_ <= 15);}
TafStream.JceStruct.prototype.getPrecision = function() { return this._jce_double_precision_; }
}
var _TAF_MODULE_D_ = require('./BasicDataJce.js');
var _TAF_MODULE_F_ = require('./CommonDataJce.js');
var _TAF_MODULE_B_ = require('./FuPanBasicDataJce.js');
var _TAF_MODULE_C_ = require('./FuPanCommonJce.js');
var _TAF_MODULE_A_ = require('./FupanHisFactorJce.js');
var _TAF_MODULE_E_ = require('./RadarDataJce.js');

var FuPan = FuPan || {};
module.exports.FuPan = FuPan;


FuPan.E_BLOCK_DATA_TYPE = {
    E_BLOCK_BASIC_DATA : 0,
    E_BLOCK_DRAGON_HEAD : 1,
    E_BLOCK_HIS_ZT_TRAIL : 2,
    E_BLOCK_ZT_STATIC : 3,
    E_BLOCK_ZT_NUM : 4,
    E_BLOCK_ZT_NUM_TS : 5,
    E_BLOCK_STORM_EYE : 6,
    E_BLOCK_STORM_EYE_IDX : 7,
    E_BLOCK_DATA_TYPE_END : 8
};

FuPan.E_BLOCK_DATA_TYPE.etos = function(enm) {
    switch(enm){
        case 0 : return 'E_BLOCK_BASIC_DATA';
        case 1 : return 'E_BLOCK_DRAGON_HEAD';
        case 2 : return 'E_BLOCK_HIS_ZT_TRAIL';
        case 3 : return 'E_BLOCK_ZT_STATIC';
        case 4 : return 'E_BLOCK_ZT_NUM';
        case 5 : return 'E_BLOCK_ZT_NUM_TS';
        case 6 : return 'E_BLOCK_STORM_EYE';
        case 7 : return 'E_BLOCK_STORM_EYE_IDX';
        case 8 : return 'E_BLOCK_DATA_TYPE_END';
    }
    return undefined;
};

FuPan.E_BLOCK_DATA_TYPE.stoe = function(enm) {
    switch(enm){
        case 'E_BLOCK_BASIC_DATA' : return 0;
        case 'E_BLOCK_DRAGON_HEAD' : return 1;
        case 'E_BLOCK_HIS_ZT_TRAIL' : return 2;
        case 'E_BLOCK_ZT_STATIC' : return 3;
        case 'E_BLOCK_ZT_NUM' : return 4;
        case 'E_BLOCK_ZT_NUM_TS' : return 5;
        case 'E_BLOCK_STORM_EYE' : return 6;
        case 'E_BLOCK_STORM_EYE_IDX' : return 7;
        case 'E_BLOCK_DATA_TYPE_END' : return 8;
    }
    return undefined;
};

FuPan.E_BLOCK_DATA_TYPE._write = function(os, tag, val) { return os.writeInt32(tag, val); }
FuPan.E_BLOCK_DATA_TYPE._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }
FuPan.E_BLK_BASIC_DATA_TYPE = {
    E_BLK_BASIC_DATA_TYPE_BASIC : 0,
    E_BLK_BASIC_DATA_TYPE_ZTSTK : 1,
    E_BLK_BASIC_DATA_TYPE_UNZTSTK : 2,
    E_BLK_BASIC_DATA_TYPE_ALLSTK : 3,
    E_BLK_BASIC_DATA_TYPE_ALL : 4
};

FuPan.E_BLK_BASIC_DATA_TYPE.etos = function(enm) {
    switch(enm){
        case 0 : return 'E_BLK_BASIC_DATA_TYPE_BASIC';
        case 1 : return 'E_BLK_BASIC_DATA_TYPE_ZTSTK';
        case 2 : return 'E_BLK_BASIC_DATA_TYPE_UNZTSTK';
        case 3 : return 'E_BLK_BASIC_DATA_TYPE_ALLSTK';
        case 4 : return 'E_BLK_BASIC_DATA_TYPE_ALL';
    }
    return undefined;
};

FuPan.E_BLK_BASIC_DATA_TYPE.stoe = function(enm) {
    switch(enm){
        case 'E_BLK_BASIC_DATA_TYPE_BASIC' : return 0;
        case 'E_BLK_BASIC_DATA_TYPE_ZTSTK' : return 1;
        case 'E_BLK_BASIC_DATA_TYPE_UNZTSTK' : return 2;
        case 'E_BLK_BASIC_DATA_TYPE_ALLSTK' : return 3;
        case 'E_BLK_BASIC_DATA_TYPE_ALL' : return 4;
    }
    return undefined;
};

FuPan.E_BLK_BASIC_DATA_TYPE._write = function(os, tag, val) { return os.writeInt32(tag, val); }
FuPan.E_BLK_BASIC_DATA_TYPE._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }
FuPan.E_BLK_STK_ZD_STATE = {
    E_BLK_STK_RISE : 0,
    E_BLK_STK_FALL : 1,
    E_BLK_STK_STATIC : 2,
    E_BLK_STK_ZT : 3,
    E_BLK_STK_DT : 4
};

FuPan.E_BLK_STK_ZD_STATE.etos = function(enm) {
    switch(enm){
        case 0 : return 'E_BLK_STK_RISE';
        case 1 : return 'E_BLK_STK_FALL';
        case 2 : return 'E_BLK_STK_STATIC';
        case 3 : return 'E_BLK_STK_ZT';
        case 4 : return 'E_BLK_STK_DT';
    }
    return undefined;
};

FuPan.E_BLK_STK_ZD_STATE.stoe = function(enm) {
    switch(enm){
        case 'E_BLK_STK_RISE' : return 0;
        case 'E_BLK_STK_FALL' : return 1;
        case 'E_BLK_STK_STATIC' : return 2;
        case 'E_BLK_STK_ZT' : return 3;
        case 'E_BLK_STK_DT' : return 4;
    }
    return undefined;
};

FuPan.E_BLK_STK_ZD_STATE._write = function(os, tag, val) { return os.writeInt32(tag, val); }
FuPan.E_BLK_STK_ZD_STATE._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }
FuPan.E_BLK_STK_STNEW_TYPE = {
    E_BLK_STK_NORMAL : 0,
    E_BLK_STK_NEW : 1,
    E_BLK_STK_ST : 2
};

FuPan.E_BLK_STK_STNEW_TYPE.etos = function(enm) {
    switch(enm){
        case 0 : return 'E_BLK_STK_NORMAL';
        case 1 : return 'E_BLK_STK_NEW';
        case 2 : return 'E_BLK_STK_ST';
    }
    return undefined;
};

FuPan.E_BLK_STK_STNEW_TYPE.stoe = function(enm) {
    switch(enm){
        case 'E_BLK_STK_NORMAL' : return 0;
        case 'E_BLK_STK_NEW' : return 1;
        case 'E_BLK_STK_ST' : return 2;
    }
    return undefined;
};

FuPan.E_BLK_STK_STNEW_TYPE._write = function(os, tag, val) { return os.writeInt32(tag, val); }
FuPan.E_BLK_STK_STNEW_TYPE._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }

FuPan.FBlockInfo = function() {
    this.block = new _TAF_MODULE_B_.FuPan.FBlockSimpleInfo();
    this.dHot = 0;
    this.dChgRatio = 0;
    this._classname = "FuPan.FBlockInfo";
};
FuPan.FBlockInfo.prototype = new TafStream.JceStruct();
FuPan.FBlockInfo._classname = "FuPan.FBlockInfo";

FuPan.FBlockInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockInfo();
    tmp.block = is.readStruct(0, false, _TAF_MODULE_B_.FuPan.FBlockSimpleInfo);
    tmp.dHot = is.readDouble(1, false, 0);
    tmp.dChgRatio = is.readDouble(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.block);
    if (this.dHot != undefined && this.dHot != 0) {
        os.writeDouble(1, this.dHot);
    }
    if (this.dChgRatio != undefined && this.dChgRatio != 0) {
        os.writeDouble(2, this.dChgRatio);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.block = this.block.toObject();
    tmp.dHot = this.dHot;
    tmp.dChgRatio = this.dChgRatio;
    
    return tmp;
}
FuPan.FBlockInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("block") || (this.block.readFromObject(json.block));
    !json.hasOwnProperty("dHot") || (this.dHot = json.dHot);
    !json.hasOwnProperty("dChgRatio") || (this.dChgRatio = json.dChgRatio);
}
FuPan.FBlockInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockInfo.new = function () {
    return new FuPan.FBlockInfo();
}
FuPan.FBlockInfo.create = function (is) {
    return FuPan.FBlockInfo._readFrom(is);
}
FuPan.FBlockStockInfo = function() {
    this.iMarket = 0;
    this.sCode = "";
    this.dNowPrice = 0;
    this.dChgRatio = 0;
    this.dTurnOver = 0;
    this.eZdState = FuPan.E_BLK_STK_ZD_STATE.E_BLK_STK_RISE;
    this.iContinueBoard = 0;
    this.iDetailNum = 0;
    this.stBoard = new _TAF_MODULE_B_.FuPan.FBoardPeriod();
    this.eType = _TAF_MODULE_B_.FuPan.E_STOCK_ZT_TYPE.E_STOCK_ZT_UNKNOWN;
    this.iFirstZTime = 0;
    this.iLastZTime = 0;
    this.lLastZTVol = 0;
    this.dLastZTRatio = 0;
    this.eSTNew = FuPan.E_BLK_STK_STNEW_TYPE.E_BLK_STK_NORMAL;
    this.dFloatValue = 0;
    this.dTotalMarketValue = 0;
    this.dAmount = 0;
    this.vecBlk = new TafStream.List(FuPan.FBlockInfo);
    this.dUpSpeed = 0;
    this.dVolume = 0;
    this._classname = "FuPan.FBlockStockInfo";
};
FuPan.FBlockStockInfo.prototype = new TafStream.JceStruct();
FuPan.FBlockStockInfo._classname = "FuPan.FBlockStockInfo";

FuPan.FBlockStockInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockStockInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockStockInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockStockInfo();
    tmp.iMarket = is.readInt32(0, false, 0);
    tmp.sCode = is.readString(1, false, "");
    tmp.dNowPrice = is.readDouble(2, false, 0);
    tmp.dChgRatio = is.readDouble(3, false, 0);
    tmp.dTurnOver = is.readDouble(4, false, 0);
    tmp.eZdState = is.readInt32(5, false, FuPan.E_BLK_STK_ZD_STATE.E_BLK_STK_RISE);
    tmp.iContinueBoard = is.readInt32(6, false, 0);
    tmp.iDetailNum = is.readInt32(7, false, 0);
    tmp.stBoard = is.readStruct(8, false, _TAF_MODULE_B_.FuPan.FBoardPeriod);
    tmp.eType = is.readInt32(9, false, _TAF_MODULE_B_.FuPan.E_STOCK_ZT_TYPE.E_STOCK_ZT_UNKNOWN);
    tmp.iFirstZTime = is.readInt32(10, false, 0);
    tmp.iLastZTime = is.readInt32(11, false, 0);
    tmp.lLastZTVol = is.readInt64(12, false, 0);
    tmp.dLastZTRatio = is.readDouble(13, false, 0);
    tmp.eSTNew = is.readInt32(14, false, FuPan.E_BLK_STK_STNEW_TYPE.E_BLK_STK_NORMAL);
    tmp.dFloatValue = is.readDouble(15, false, 0);
    tmp.dTotalMarketValue = is.readDouble(16, false, 0);
    tmp.dAmount = is.readDouble(17, false, 0);
    tmp.vecBlk = is.readList(18, false, TafStream.List(FuPan.FBlockInfo));
    tmp.dUpSpeed = is.readDouble(19, false, 0);
    tmp.dVolume = is.readDouble(20, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockStockInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iMarket != undefined && this.iMarket != 0) {
        os.writeInt32(0, this.iMarket);
    }
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    if (this.dNowPrice != undefined && this.dNowPrice != 0) {
        os.writeDouble(2, this.dNowPrice);
    }
    if (this.dChgRatio != undefined && this.dChgRatio != 0) {
        os.writeDouble(3, this.dChgRatio);
    }
    if (this.dTurnOver != undefined && this.dTurnOver != 0) {
        os.writeDouble(4, this.dTurnOver);
    }
    if (this.eZdState != undefined) {
        os.writeInt32(5, this.eZdState);
    }
    if (this.iContinueBoard != undefined && this.iContinueBoard != 0) {
        os.writeInt32(6, this.iContinueBoard);
    }
    if (this.iDetailNum != undefined && this.iDetailNum != 0) {
        os.writeInt32(7, this.iDetailNum);
    }
    os.writeStruct(8, this.stBoard);
    if (this.eType != undefined) {
        os.writeInt32(9, this.eType);
    }
    if (this.iFirstZTime != undefined && this.iFirstZTime != 0) {
        os.writeInt32(10, this.iFirstZTime);
    }
    if (this.iLastZTime != undefined && this.iLastZTime != 0) {
        os.writeInt32(11, this.iLastZTime);
    }
    if (this.lLastZTVol != undefined && this.lLastZTVol != 0) {
        os.writeInt64(12, this.lLastZTVol);
    }
    if (this.dLastZTRatio != undefined && this.dLastZTRatio != 0) {
        os.writeDouble(13, this.dLastZTRatio);
    }
    if (this.eSTNew != undefined) {
        os.writeInt32(14, this.eSTNew);
    }
    if (this.dFloatValue != undefined && this.dFloatValue != 0) {
        os.writeDouble(15, this.dFloatValue);
    }
    if (this.dTotalMarketValue != undefined && this.dTotalMarketValue != 0) {
        os.writeDouble(16, this.dTotalMarketValue);
    }
    if (this.dAmount != undefined && this.dAmount != 0) {
        os.writeDouble(17, this.dAmount);
    }
    if (this.vecBlk != undefined) {
        os.writeList(18, this.vecBlk);
    }
    if (this.dUpSpeed != undefined && this.dUpSpeed != 0) {
        os.writeDouble(19, this.dUpSpeed);
    }
    if (this.dVolume != undefined && this.dVolume != 0) {
        os.writeDouble(20, this.dVolume);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockStockInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockStockInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockStockInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.iMarket = this.iMarket;
    tmp.sCode = this.sCode;
    tmp.dNowPrice = this.dNowPrice;
    tmp.dChgRatio = this.dChgRatio;
    tmp.dTurnOver = this.dTurnOver;
    tmp.eZdState = this.eZdState;
    tmp.iContinueBoard = this.iContinueBoard;
    tmp.iDetailNum = this.iDetailNum;
    tmp.stBoard = this.stBoard.toObject();
    tmp.eType = this.eType;
    tmp.iFirstZTime = this.iFirstZTime;
    tmp.iLastZTime = this.iLastZTime;
    tmp.lLastZTVol = this.lLastZTVol;
    tmp.dLastZTRatio = this.dLastZTRatio;
    tmp.eSTNew = this.eSTNew;
    tmp.dFloatValue = this.dFloatValue;
    tmp.dTotalMarketValue = this.dTotalMarketValue;
    tmp.dAmount = this.dAmount;
    tmp.vecBlk = this.vecBlk.toObject();
    tmp.dUpSpeed = this.dUpSpeed;
    tmp.dVolume = this.dVolume;
    
    return tmp;
}
FuPan.FBlockStockInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iMarket") || (this.iMarket = json.iMarket);
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("dNowPrice") || (this.dNowPrice = json.dNowPrice);
    !json.hasOwnProperty("dChgRatio") || (this.dChgRatio = json.dChgRatio);
    !json.hasOwnProperty("dTurnOver") || (this.dTurnOver = json.dTurnOver);
    !json.hasOwnProperty("eZdState") || (this.eZdState = json.eZdState);
    !json.hasOwnProperty("iContinueBoard") || (this.iContinueBoard = json.iContinueBoard);
    !json.hasOwnProperty("iDetailNum") || (this.iDetailNum = json.iDetailNum);
    !json.hasOwnProperty("stBoard") || (this.stBoard.readFromObject(json.stBoard));
    !json.hasOwnProperty("eType") || (this.eType = json.eType);
    !json.hasOwnProperty("iFirstZTime") || (this.iFirstZTime = json.iFirstZTime);
    !json.hasOwnProperty("iLastZTime") || (this.iLastZTime = json.iLastZTime);
    !json.hasOwnProperty("lLastZTVol") || (this.lLastZTVol = json.lLastZTVol);
    !json.hasOwnProperty("dLastZTRatio") || (this.dLastZTRatio = json.dLastZTRatio);
    !json.hasOwnProperty("eSTNew") || (this.eSTNew = json.eSTNew);
    !json.hasOwnProperty("dFloatValue") || (this.dFloatValue = json.dFloatValue);
    !json.hasOwnProperty("dTotalMarketValue") || (this.dTotalMarketValue = json.dTotalMarketValue);
    !json.hasOwnProperty("dAmount") || (this.dAmount = json.dAmount);
    !json.hasOwnProperty("vecBlk") || (this.vecBlk.readFromObject(json.vecBlk));
    !json.hasOwnProperty("dUpSpeed") || (this.dUpSpeed = json.dUpSpeed);
    !json.hasOwnProperty("dVolume") || (this.dVolume = json.dVolume);
}
FuPan.FBlockStockInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockStockInfo.new = function () {
    return new FuPan.FBlockStockInfo();
}
FuPan.FBlockStockInfo.create = function (is) {
    return FuPan.FBlockStockInfo._readFrom(is);
}
FuPan.FBlockBasicInfo = function() {
    this.blk = new _TAF_MODULE_B_.FuPan.FBlockSimpleInfo();
    this.dChgRatio = 0;
    this.dDayMainMoneyInflow = 0;
    this.dDayMainMoneyRatio = 0;
    this.dAmount = 0;
    this.dLiangBi = 0;
    this.dHot = 0;
    this.vecZDFenBu = new TafStream.List(TafStream.Int32);
    this.vecZDFenBuFiltSTNew = new TafStream.List(TafStream.Int32);
    this._classname = "FuPan.FBlockBasicInfo";
};
FuPan.FBlockBasicInfo.prototype = new TafStream.JceStruct();
FuPan.FBlockBasicInfo._classname = "FuPan.FBlockBasicInfo";

FuPan.FBlockBasicInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockBasicInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockBasicInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockBasicInfo();
    tmp.blk = is.readStruct(0, false, _TAF_MODULE_B_.FuPan.FBlockSimpleInfo);
    tmp.dChgRatio = is.readDouble(1, false, 0);
    tmp.dDayMainMoneyInflow = is.readDouble(2, false, 0);
    tmp.dDayMainMoneyRatio = is.readDouble(3, false, 0);
    tmp.dAmount = is.readDouble(4, false, 0);
    tmp.dLiangBi = is.readDouble(5, false, 0);
    tmp.dHot = is.readDouble(6, false, 0);
    tmp.vecZDFenBu = is.readList(7, false, TafStream.List(TafStream.Int32));
    tmp.vecZDFenBuFiltSTNew = is.readList(8, false, TafStream.List(TafStream.Int32));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockBasicInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.blk);
    if (this.dChgRatio != undefined && this.dChgRatio != 0) {
        os.writeDouble(1, this.dChgRatio);
    }
    if (this.dDayMainMoneyInflow != undefined && this.dDayMainMoneyInflow != 0) {
        os.writeDouble(2, this.dDayMainMoneyInflow);
    }
    if (this.dDayMainMoneyRatio != undefined && this.dDayMainMoneyRatio != 0) {
        os.writeDouble(3, this.dDayMainMoneyRatio);
    }
    if (this.dAmount != undefined && this.dAmount != 0) {
        os.writeDouble(4, this.dAmount);
    }
    if (this.dLiangBi != undefined && this.dLiangBi != 0) {
        os.writeDouble(5, this.dLiangBi);
    }
    if (this.dHot != undefined && this.dHot != 0) {
        os.writeDouble(6, this.dHot);
    }
    if (this.vecZDFenBu != undefined) {
        os.writeList(7, this.vecZDFenBu);
    }
    if (this.vecZDFenBuFiltSTNew != undefined) {
        os.writeList(8, this.vecZDFenBuFiltSTNew);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockBasicInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockBasicInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockBasicInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.blk = this.blk.toObject();
    tmp.dChgRatio = this.dChgRatio;
    tmp.dDayMainMoneyInflow = this.dDayMainMoneyInflow;
    tmp.dDayMainMoneyRatio = this.dDayMainMoneyRatio;
    tmp.dAmount = this.dAmount;
    tmp.dLiangBi = this.dLiangBi;
    tmp.dHot = this.dHot;
    tmp.vecZDFenBu = this.vecZDFenBu.toObject();
    tmp.vecZDFenBuFiltSTNew = this.vecZDFenBuFiltSTNew.toObject();
    
    return tmp;
}
FuPan.FBlockBasicInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("blk") || (this.blk.readFromObject(json.blk));
    !json.hasOwnProperty("dChgRatio") || (this.dChgRatio = json.dChgRatio);
    !json.hasOwnProperty("dDayMainMoneyInflow") || (this.dDayMainMoneyInflow = json.dDayMainMoneyInflow);
    !json.hasOwnProperty("dDayMainMoneyRatio") || (this.dDayMainMoneyRatio = json.dDayMainMoneyRatio);
    !json.hasOwnProperty("dAmount") || (this.dAmount = json.dAmount);
    !json.hasOwnProperty("dLiangBi") || (this.dLiangBi = json.dLiangBi);
    !json.hasOwnProperty("dHot") || (this.dHot = json.dHot);
    !json.hasOwnProperty("vecZDFenBu") || (this.vecZDFenBu.readFromObject(json.vecZDFenBu));
    !json.hasOwnProperty("vecZDFenBuFiltSTNew") || (this.vecZDFenBuFiltSTNew.readFromObject(json.vecZDFenBuFiltSTNew));
}
FuPan.FBlockBasicInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockBasicInfo.new = function () {
    return new FuPan.FBlockBasicInfo();
}
FuPan.FBlockBasicInfo.create = function (is) {
    return FuPan.FBlockBasicInfo._readFrom(is);
}
FuPan.FBlcokStkSimpData = function() {
    this.blk = new _TAF_MODULE_B_.FuPan.FBlockSimpleInfo();
    this.vecStk = new TafStream.List(_TAF_MODULE_B_.FuPan.StockInfo);
    this._classname = "FuPan.FBlcokStkSimpData";
};
FuPan.FBlcokStkSimpData.prototype = new TafStream.JceStruct();
FuPan.FBlcokStkSimpData._classname = "FuPan.FBlcokStkSimpData";

FuPan.FBlcokStkSimpData._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlcokStkSimpData._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlcokStkSimpData._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlcokStkSimpData();
    tmp.blk = is.readStruct(0, false, _TAF_MODULE_B_.FuPan.FBlockSimpleInfo);
    tmp.vecStk = is.readList(1, false, TafStream.List(_TAF_MODULE_B_.FuPan.StockInfo));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlcokStkSimpData.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.blk);
    if (this.vecStk != undefined) {
        os.writeList(1, this.vecStk);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlcokStkSimpData.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlcokStkSimpData.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlcokStkSimpData.prototype.toObject = function() { 
    var tmp = {};

    tmp.blk = this.blk.toObject();
    tmp.vecStk = this.vecStk.toObject();
    
    return tmp;
}
FuPan.FBlcokStkSimpData.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("blk") || (this.blk.readFromObject(json.blk));
    !json.hasOwnProperty("vecStk") || (this.vecStk.readFromObject(json.vecStk));
}
FuPan.FBlcokStkSimpData.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlcokStkSimpData.new = function () {
    return new FuPan.FBlcokStkSimpData();
}
FuPan.FBlcokStkSimpData.create = function (is) {
    return FuPan.FBlcokStkSimpData._readFrom(is);
}
FuPan.FBlockStkCompData = function() {
    this.blk = new _TAF_MODULE_B_.FuPan.FBlockSimpleInfo();
    this.vecStk = new TafStream.List(FuPan.FBlockStockInfo);
    this._classname = "FuPan.FBlockStkCompData";
};
FuPan.FBlockStkCompData.prototype = new TafStream.JceStruct();
FuPan.FBlockStkCompData._classname = "FuPan.FBlockStkCompData";

FuPan.FBlockStkCompData._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockStkCompData._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockStkCompData._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockStkCompData();
    tmp.blk = is.readStruct(0, false, _TAF_MODULE_B_.FuPan.FBlockSimpleInfo);
    tmp.vecStk = is.readList(1, false, TafStream.List(FuPan.FBlockStockInfo));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockStkCompData.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.blk);
    if (this.vecStk != undefined) {
        os.writeList(1, this.vecStk);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockStkCompData.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockStkCompData.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockStkCompData.prototype.toObject = function() { 
    var tmp = {};

    tmp.blk = this.blk.toObject();
    tmp.vecStk = this.vecStk.toObject();
    
    return tmp;
}
FuPan.FBlockStkCompData.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("blk") || (this.blk.readFromObject(json.blk));
    !json.hasOwnProperty("vecStk") || (this.vecStk.readFromObject(json.vecStk));
}
FuPan.FBlockStkCompData.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockStkCompData.new = function () {
    return new FuPan.FBlockStkCompData();
}
FuPan.FBlockStkCompData.create = function (is) {
    return FuPan.FBlockStkCompData._readFrom(is);
}
FuPan.FBlockBasicData = function() {
    this.stBlkBasic = new FuPan.FBlockBasicInfo();
    this.stZtStk = new FuPan.FBlcokStkSimpData();
    this.stUnZtStk = new FuPan.FBlcokStkSimpData();
    this._classname = "FuPan.FBlockBasicData";
};
FuPan.FBlockBasicData.prototype = new TafStream.JceStruct();
FuPan.FBlockBasicData._classname = "FuPan.FBlockBasicData";

FuPan.FBlockBasicData._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockBasicData._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockBasicData._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockBasicData();
    tmp.stBlkBasic = is.readStruct(0, false, FuPan.FBlockBasicInfo);
    tmp.stZtStk = is.readStruct(1, false, FuPan.FBlcokStkSimpData);
    tmp.stUnZtStk = is.readStruct(2, false, FuPan.FBlcokStkSimpData);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockBasicData.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stBlkBasic);
    os.writeStruct(1, this.stZtStk);
    os.writeStruct(2, this.stUnZtStk);
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockBasicData.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockBasicData.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockBasicData.prototype.toObject = function() { 
    var tmp = {};

    tmp.stBlkBasic = this.stBlkBasic.toObject();
    tmp.stZtStk = this.stZtStk.toObject();
    tmp.stUnZtStk = this.stUnZtStk.toObject();
    
    return tmp;
}
FuPan.FBlockBasicData.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stBlkBasic") || (this.stBlkBasic.readFromObject(json.stBlkBasic));
    !json.hasOwnProperty("stZtStk") || (this.stZtStk.readFromObject(json.stZtStk));
    !json.hasOwnProperty("stUnZtStk") || (this.stUnZtStk.readFromObject(json.stUnZtStk));
}
FuPan.FBlockBasicData.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockBasicData.new = function () {
    return new FuPan.FBlockBasicData();
}
FuPan.FBlockBasicData.create = function (is) {
    return FuPan.FBlockBasicData._readFrom(is);
}
FuPan.FBlockDragonHead = function() {
    this.iDate = 0;
    this.mapDragonHeadBlk = new TafStream.Map(TafStream.String, _TAF_MODULE_C_.FuPan.FBlockZTData);
    this._classname = "FuPan.FBlockDragonHead";
};
FuPan.FBlockDragonHead.prototype = new TafStream.JceStruct();
FuPan.FBlockDragonHead._classname = "FuPan.FBlockDragonHead";

FuPan.FBlockDragonHead._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockDragonHead._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockDragonHead._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockDragonHead();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.mapDragonHeadBlk = is.readMap(1, false, TafStream.Map(TafStream.String, _TAF_MODULE_C_.FuPan.FBlockZTData));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockDragonHead.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    if (this.mapDragonHeadBlk != undefined) {
        os.writeMap(1, this.mapDragonHeadBlk);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockDragonHead.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockDragonHead.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockDragonHead.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.mapDragonHeadBlk = this.mapDragonHeadBlk.toObject();
    
    return tmp;
}
FuPan.FBlockDragonHead.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("mapDragonHeadBlk") || (this.mapDragonHeadBlk.readFromObject(json.mapDragonHeadBlk));
}
FuPan.FBlockDragonHead.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockDragonHead.new = function () {
    return new FuPan.FBlockDragonHead();
}
FuPan.FBlockDragonHead.create = function (is) {
    return FuPan.FBlockDragonHead._readFrom(is);
}
FuPan.FBlockHisZTTrail = function() {
    this.iDate = 0;
    this.ztTimeTrail = new TafStream.Map(TafStream.String, _TAF_MODULE_C_.FuPan.FBlockTimeTrail);
    this.ztStockTrail = new TafStream.Map(TafStream.String, _TAF_MODULE_C_.FuPan.FBlockStockTrail);
    this._classname = "FuPan.FBlockHisZTTrail";
};
FuPan.FBlockHisZTTrail.prototype = new TafStream.JceStruct();
FuPan.FBlockHisZTTrail._classname = "FuPan.FBlockHisZTTrail";

FuPan.FBlockHisZTTrail._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockHisZTTrail._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockHisZTTrail._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockHisZTTrail();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.ztTimeTrail = is.readMap(1, false, TafStream.Map(TafStream.String, _TAF_MODULE_C_.FuPan.FBlockTimeTrail));
    tmp.ztStockTrail = is.readMap(2, false, TafStream.Map(TafStream.String, _TAF_MODULE_C_.FuPan.FBlockStockTrail));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockHisZTTrail.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    if (this.ztTimeTrail != undefined) {
        os.writeMap(1, this.ztTimeTrail);
    }
    if (this.ztStockTrail != undefined) {
        os.writeMap(2, this.ztStockTrail);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockHisZTTrail.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockHisZTTrail.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockHisZTTrail.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.ztTimeTrail = this.ztTimeTrail.toObject();
    tmp.ztStockTrail = this.ztStockTrail.toObject();
    
    return tmp;
}
FuPan.FBlockHisZTTrail.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("ztTimeTrail") || (this.ztTimeTrail.readFromObject(json.ztTimeTrail));
    !json.hasOwnProperty("ztStockTrail") || (this.ztStockTrail.readFromObject(json.ztStockTrail));
}
FuPan.FBlockHisZTTrail.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockHisZTTrail.new = function () {
    return new FuPan.FBlockHisZTTrail();
}
FuPan.FBlockHisZTTrail.create = function (is) {
    return FuPan.FBlockHisZTTrail._readFrom(is);
}
FuPan.FBlockZTStaticData = function() {
    this.iDate = 0;
    this.ztStatic = new TafStream.Map(TafStream.String, _TAF_MODULE_C_.FuPan.FBlockZTStatic);
    this._classname = "FuPan.FBlockZTStaticData";
};
FuPan.FBlockZTStaticData.prototype = new TafStream.JceStruct();
FuPan.FBlockZTStaticData._classname = "FuPan.FBlockZTStaticData";

FuPan.FBlockZTStaticData._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockZTStaticData._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockZTStaticData._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockZTStaticData();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.ztStatic = is.readMap(1, false, TafStream.Map(TafStream.String, _TAF_MODULE_C_.FuPan.FBlockZTStatic));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockZTStaticData.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    if (this.ztStatic != undefined) {
        os.writeMap(1, this.ztStatic);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockZTStaticData.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockZTStaticData.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockZTStaticData.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.ztStatic = this.ztStatic.toObject();
    
    return tmp;
}
FuPan.FBlockZTStaticData.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("ztStatic") || (this.ztStatic.readFromObject(json.ztStatic));
}
FuPan.FBlockZTStaticData.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockZTStaticData.new = function () {
    return new FuPan.FBlockZTStaticData();
}
FuPan.FBlockZTStaticData.create = function (is) {
    return FuPan.FBlockZTStaticData._readFrom(is);
}
FuPan.FBlockZTStkNumInfo = function() {
    this.blk = new _TAF_MODULE_B_.FuPan.FBlockSimpleInfo();
    this.iZTNum = 0;
    this.iZTNumFiltSTNew = 0;
    this.mapDayZTNum = new TafStream.Map(TafStream.Int32, TafStream.Int32);
    this.mapDayZTNumFiltSTNew = new TafStream.Map(TafStream.Int32, TafStream.Int32);
    this._classname = "FuPan.FBlockZTStkNumInfo";
};
FuPan.FBlockZTStkNumInfo.prototype = new TafStream.JceStruct();
FuPan.FBlockZTStkNumInfo._classname = "FuPan.FBlockZTStkNumInfo";

FuPan.FBlockZTStkNumInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockZTStkNumInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockZTStkNumInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockZTStkNumInfo();
    tmp.blk = is.readStruct(0, false, _TAF_MODULE_B_.FuPan.FBlockSimpleInfo);
    tmp.iZTNum = is.readInt32(1, false, 0);
    tmp.iZTNumFiltSTNew = is.readInt32(2, false, 0);
    tmp.mapDayZTNum = is.readMap(3, false, TafStream.Map(TafStream.Int32, TafStream.Int32));
    tmp.mapDayZTNumFiltSTNew = is.readMap(4, false, TafStream.Map(TafStream.Int32, TafStream.Int32));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockZTStkNumInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.blk);
    if (this.iZTNum != undefined && this.iZTNum != 0) {
        os.writeInt32(1, this.iZTNum);
    }
    if (this.iZTNumFiltSTNew != undefined && this.iZTNumFiltSTNew != 0) {
        os.writeInt32(2, this.iZTNumFiltSTNew);
    }
    if (this.mapDayZTNum != undefined) {
        os.writeMap(3, this.mapDayZTNum);
    }
    if (this.mapDayZTNumFiltSTNew != undefined) {
        os.writeMap(4, this.mapDayZTNumFiltSTNew);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockZTStkNumInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockZTStkNumInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockZTStkNumInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.blk = this.blk.toObject();
    tmp.iZTNum = this.iZTNum;
    tmp.iZTNumFiltSTNew = this.iZTNumFiltSTNew;
    tmp.mapDayZTNum = this.mapDayZTNum.toObject();
    tmp.mapDayZTNumFiltSTNew = this.mapDayZTNumFiltSTNew.toObject();
    
    return tmp;
}
FuPan.FBlockZTStkNumInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("blk") || (this.blk.readFromObject(json.blk));
    !json.hasOwnProperty("iZTNum") || (this.iZTNum = json.iZTNum);
    !json.hasOwnProperty("iZTNumFiltSTNew") || (this.iZTNumFiltSTNew = json.iZTNumFiltSTNew);
    !json.hasOwnProperty("mapDayZTNum") || (this.mapDayZTNum.readFromObject(json.mapDayZTNum));
    !json.hasOwnProperty("mapDayZTNumFiltSTNew") || (this.mapDayZTNumFiltSTNew.readFromObject(json.mapDayZTNumFiltSTNew));
}
FuPan.FBlockZTStkNumInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockZTStkNumInfo.new = function () {
    return new FuPan.FBlockZTStkNumInfo();
}
FuPan.FBlockZTStkNumInfo.create = function (is) {
    return FuPan.FBlockZTStkNumInfo._readFrom(is);
}
FuPan.FBlockZTStkNum = function() {
    this.iDate = 0;
    this.mapBlkZTStkNum = new TafStream.Map(TafStream.String, FuPan.FBlockZTStkNumInfo);
    this._classname = "FuPan.FBlockZTStkNum";
};
FuPan.FBlockZTStkNum.prototype = new TafStream.JceStruct();
FuPan.FBlockZTStkNum._classname = "FuPan.FBlockZTStkNum";

FuPan.FBlockZTStkNum._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockZTStkNum._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockZTStkNum._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockZTStkNum();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.mapBlkZTStkNum = is.readMap(1, false, TafStream.Map(TafStream.String, FuPan.FBlockZTStkNumInfo));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockZTStkNum.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    if (this.mapBlkZTStkNum != undefined) {
        os.writeMap(1, this.mapBlkZTStkNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockZTStkNum.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockZTStkNum.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockZTStkNum.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.mapBlkZTStkNum = this.mapBlkZTStkNum.toObject();
    
    return tmp;
}
FuPan.FBlockZTStkNum.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("mapBlkZTStkNum") || (this.mapBlkZTStkNum.readFromObject(json.mapBlkZTStkNum));
}
FuPan.FBlockZTStkNum.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockZTStkNum.new = function () {
    return new FuPan.FBlockZTStkNum();
}
FuPan.FBlockZTStkNum.create = function (is) {
    return FuPan.FBlockZTStkNum._readFrom(is);
}
FuPan.FZTStkNumTsInfo = function() {
    this.iTime = 0;
    this.iZTStkNum = 0;
    this.iZTStkNumFiltSTNew = 0;
    this._classname = "FuPan.FZTStkNumTsInfo";
};
FuPan.FZTStkNumTsInfo.prototype = new TafStream.JceStruct();
FuPan.FZTStkNumTsInfo._classname = "FuPan.FZTStkNumTsInfo";

FuPan.FZTStkNumTsInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZTStkNumTsInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZTStkNumTsInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZTStkNumTsInfo();
    tmp.iTime = is.readInt32(0, false, 0);
    tmp.iZTStkNum = is.readInt32(1, false, 0);
    tmp.iZTStkNumFiltSTNew = is.readInt32(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZTStkNumTsInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iTime != undefined && this.iTime != 0) {
        os.writeInt32(0, this.iTime);
    }
    if (this.iZTStkNum != undefined && this.iZTStkNum != 0) {
        os.writeInt32(1, this.iZTStkNum);
    }
    if (this.iZTStkNumFiltSTNew != undefined && this.iZTStkNumFiltSTNew != 0) {
        os.writeInt32(2, this.iZTStkNumFiltSTNew);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZTStkNumTsInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZTStkNumTsInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZTStkNumTsInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.iTime = this.iTime;
    tmp.iZTStkNum = this.iZTStkNum;
    tmp.iZTStkNumFiltSTNew = this.iZTStkNumFiltSTNew;
    
    return tmp;
}
FuPan.FZTStkNumTsInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iTime") || (this.iTime = json.iTime);
    !json.hasOwnProperty("iZTStkNum") || (this.iZTStkNum = json.iZTStkNum);
    !json.hasOwnProperty("iZTStkNumFiltSTNew") || (this.iZTStkNumFiltSTNew = json.iZTStkNumFiltSTNew);
}
FuPan.FZTStkNumTsInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZTStkNumTsInfo.new = function () {
    return new FuPan.FZTStkNumTsInfo();
}
FuPan.FZTStkNumTsInfo.create = function (is) {
    return FuPan.FZTStkNumTsInfo._readFrom(is);
}
FuPan.FBlockZTStkNumTsInfo = function() {
    this.stBlkBasic = new FuPan.FBlockBasicData();
    this.stZtStkNum = new FuPan.FZTStkNumTsInfo();
    this._classname = "FuPan.FBlockZTStkNumTsInfo";
};
FuPan.FBlockZTStkNumTsInfo.prototype = new TafStream.JceStruct();
FuPan.FBlockZTStkNumTsInfo._classname = "FuPan.FBlockZTStkNumTsInfo";

FuPan.FBlockZTStkNumTsInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockZTStkNumTsInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockZTStkNumTsInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockZTStkNumTsInfo();
    tmp.stBlkBasic = is.readStruct(0, false, FuPan.FBlockBasicData);
    tmp.stZtStkNum = is.readStruct(1, false, FuPan.FZTStkNumTsInfo);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockZTStkNumTsInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stBlkBasic);
    os.writeStruct(1, this.stZtStkNum);
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockZTStkNumTsInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockZTStkNumTsInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockZTStkNumTsInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.stBlkBasic = this.stBlkBasic.toObject();
    tmp.stZtStkNum = this.stZtStkNum.toObject();
    
    return tmp;
}
FuPan.FBlockZTStkNumTsInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stBlkBasic") || (this.stBlkBasic.readFromObject(json.stBlkBasic));
    !json.hasOwnProperty("stZtStkNum") || (this.stZtStkNum.readFromObject(json.stZtStkNum));
}
FuPan.FBlockZTStkNumTsInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockZTStkNumTsInfo.new = function () {
    return new FuPan.FBlockZTStkNumTsInfo();
}
FuPan.FBlockZTStkNumTsInfo.create = function (is) {
    return FuPan.FBlockZTStkNumTsInfo._readFrom(is);
}
FuPan.FBlockZTStkNumTs = function() {
    this.iDate = 0;
    this.vecBlkZTStkNum = new TafStream.List(FuPan.FBlockZTStkNumTsInfo);
    this._classname = "FuPan.FBlockZTStkNumTs";
};
FuPan.FBlockZTStkNumTs.prototype = new TafStream.JceStruct();
FuPan.FBlockZTStkNumTs._classname = "FuPan.FBlockZTStkNumTs";

FuPan.FBlockZTStkNumTs._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockZTStkNumTs._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockZTStkNumTs._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockZTStkNumTs();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.vecBlkZTStkNum = is.readList(1, false, TafStream.List(FuPan.FBlockZTStkNumTsInfo));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockZTStkNumTs.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    if (this.vecBlkZTStkNum != undefined) {
        os.writeList(1, this.vecBlkZTStkNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockZTStkNumTs.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockZTStkNumTs.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockZTStkNumTs.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.vecBlkZTStkNum = this.vecBlkZTStkNum.toObject();
    
    return tmp;
}
FuPan.FBlockZTStkNumTs.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("vecBlkZTStkNum") || (this.vecBlkZTStkNum.readFromObject(json.vecBlkZTStkNum));
}
FuPan.FBlockZTStkNumTs.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockZTStkNumTs.new = function () {
    return new FuPan.FBlockZTStkNumTs();
}
FuPan.FBlockZTStkNumTs.create = function (is) {
    return FuPan.FBlockZTStkNumTs._readFrom(is);
}
FuPan.FBlockStormEyeStockInfo = function() {
    this.stk = new _TAF_MODULE_B_.FuPan.StockInfo();
    this.iNatureDayZTNum = 0;
    this.iNatureDayLeadNum = 0;
    this.dDayMainMoneyInflow = 0;
    this.dDayMainMoneyRatio = 0;
    this.dLiangBi = 0;
    this.bIsLeadStk = false;
    this._classname = "FuPan.FBlockStormEyeStockInfo";
};
FuPan.FBlockStormEyeStockInfo.prototype = new TafStream.JceStruct();
FuPan.FBlockStormEyeStockInfo._classname = "FuPan.FBlockStormEyeStockInfo";

FuPan.FBlockStormEyeStockInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockStormEyeStockInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockStormEyeStockInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockStormEyeStockInfo();
    tmp.stk = is.readStruct(0, false, _TAF_MODULE_B_.FuPan.StockInfo);
    tmp.iNatureDayZTNum = is.readInt32(1, false, 0);
    tmp.iNatureDayLeadNum = is.readInt32(2, false, 0);
    tmp.dDayMainMoneyInflow = is.readDouble(3, false, 0);
    tmp.dDayMainMoneyRatio = is.readDouble(4, false, 0);
    tmp.dLiangBi = is.readDouble(5, false, 0);
    tmp.bIsLeadStk = is.readBoolean(6, false, false);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockStormEyeStockInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stk);
    if (this.iNatureDayZTNum != undefined && this.iNatureDayZTNum != 0) {
        os.writeInt32(1, this.iNatureDayZTNum);
    }
    if (this.iNatureDayLeadNum != undefined && this.iNatureDayLeadNum != 0) {
        os.writeInt32(2, this.iNatureDayLeadNum);
    }
    if (this.dDayMainMoneyInflow != undefined && this.dDayMainMoneyInflow != 0) {
        os.writeDouble(3, this.dDayMainMoneyInflow);
    }
    if (this.dDayMainMoneyRatio != undefined && this.dDayMainMoneyRatio != 0) {
        os.writeDouble(4, this.dDayMainMoneyRatio);
    }
    if (this.dLiangBi != undefined && this.dLiangBi != 0) {
        os.writeDouble(5, this.dLiangBi);
    }
    if (this.bIsLeadStk != undefined && this.bIsLeadStk != false) {
        os.writeBoolean(6, this.bIsLeadStk);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockStormEyeStockInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockStormEyeStockInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockStormEyeStockInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.stk = this.stk.toObject();
    tmp.iNatureDayZTNum = this.iNatureDayZTNum;
    tmp.iNatureDayLeadNum = this.iNatureDayLeadNum;
    tmp.dDayMainMoneyInflow = this.dDayMainMoneyInflow;
    tmp.dDayMainMoneyRatio = this.dDayMainMoneyRatio;
    tmp.dLiangBi = this.dLiangBi;
    tmp.bIsLeadStk = this.bIsLeadStk;
    
    return tmp;
}
FuPan.FBlockStormEyeStockInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stk") || (this.stk.readFromObject(json.stk));
    !json.hasOwnProperty("iNatureDayZTNum") || (this.iNatureDayZTNum = json.iNatureDayZTNum);
    !json.hasOwnProperty("iNatureDayLeadNum") || (this.iNatureDayLeadNum = json.iNatureDayLeadNum);
    !json.hasOwnProperty("dDayMainMoneyInflow") || (this.dDayMainMoneyInflow = json.dDayMainMoneyInflow);
    !json.hasOwnProperty("dDayMainMoneyRatio") || (this.dDayMainMoneyRatio = json.dDayMainMoneyRatio);
    !json.hasOwnProperty("dLiangBi") || (this.dLiangBi = json.dLiangBi);
    !json.hasOwnProperty("bIsLeadStk") || (this.bIsLeadStk = json.bIsLeadStk);
}
FuPan.FBlockStormEyeStockInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockStormEyeStockInfo.new = function () {
    return new FuPan.FBlockStormEyeStockInfo();
}
FuPan.FBlockStormEyeStockInfo.create = function (is) {
    return FuPan.FBlockStormEyeStockInfo._readFrom(is);
}
FuPan.FBlockStormEyeInfo = function() {
    this.stBlkBasic = new FuPan.FBlockBasicInfo();
    this.vecStk = new TafStream.List(FuPan.FBlockStormEyeStockInfo);
    this.bIsNew = false;
    this.iContinueRiseDay = 0;
    this.iZTStkNum = 0;
    this.iNatureDayZTNum = 0;
    this.iAccZTStkNum = 0;
    this.iNatureDayUnuActNum = 0;
    this.vecZTStkNum = new TafStream.List(TafStream.Int32);
    this.vecChgRatio = new TafStream.List(TafStream.Double);
    this.vecMainRatio = new TafStream.List(TafStream.Double);
    this._classname = "FuPan.FBlockStormEyeInfo";
};
FuPan.FBlockStormEyeInfo.prototype = new TafStream.JceStruct();
FuPan.FBlockStormEyeInfo._classname = "FuPan.FBlockStormEyeInfo";

FuPan.FBlockStormEyeInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockStormEyeInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockStormEyeInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockStormEyeInfo();
    tmp.stBlkBasic = is.readStruct(0, false, FuPan.FBlockBasicInfo);
    tmp.vecStk = is.readList(1, false, TafStream.List(FuPan.FBlockStormEyeStockInfo));
    tmp.bIsNew = is.readBoolean(2, false, false);
    tmp.iContinueRiseDay = is.readInt32(3, false, 0);
    tmp.iZTStkNum = is.readInt32(4, false, 0);
    tmp.iNatureDayZTNum = is.readInt32(5, false, 0);
    tmp.iAccZTStkNum = is.readInt32(6, false, 0);
    tmp.iNatureDayUnuActNum = is.readInt32(7, false, 0);
    tmp.vecZTStkNum = is.readList(8, false, TafStream.List(TafStream.Int32));
    tmp.vecChgRatio = is.readList(9, false, TafStream.List(TafStream.Double));
    tmp.vecMainRatio = is.readList(10, false, TafStream.List(TafStream.Double));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockStormEyeInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stBlkBasic);
    if (this.vecStk != undefined) {
        os.writeList(1, this.vecStk);
    }
    if (this.bIsNew != undefined && this.bIsNew != false) {
        os.writeBoolean(2, this.bIsNew);
    }
    if (this.iContinueRiseDay != undefined && this.iContinueRiseDay != 0) {
        os.writeInt32(3, this.iContinueRiseDay);
    }
    if (this.iZTStkNum != undefined && this.iZTStkNum != 0) {
        os.writeInt32(4, this.iZTStkNum);
    }
    if (this.iNatureDayZTNum != undefined && this.iNatureDayZTNum != 0) {
        os.writeInt32(5, this.iNatureDayZTNum);
    }
    if (this.iAccZTStkNum != undefined && this.iAccZTStkNum != 0) {
        os.writeInt32(6, this.iAccZTStkNum);
    }
    if (this.iNatureDayUnuActNum != undefined && this.iNatureDayUnuActNum != 0) {
        os.writeInt32(7, this.iNatureDayUnuActNum);
    }
    if (this.vecZTStkNum != undefined) {
        os.writeList(8, this.vecZTStkNum);
    }
    if (this.vecChgRatio != undefined) {
        os.writeList(9, this.vecChgRatio);
    }
    if (this.vecMainRatio != undefined) {
        os.writeList(10, this.vecMainRatio);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockStormEyeInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockStormEyeInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockStormEyeInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.stBlkBasic = this.stBlkBasic.toObject();
    tmp.vecStk = this.vecStk.toObject();
    tmp.bIsNew = this.bIsNew;
    tmp.iContinueRiseDay = this.iContinueRiseDay;
    tmp.iZTStkNum = this.iZTStkNum;
    tmp.iNatureDayZTNum = this.iNatureDayZTNum;
    tmp.iAccZTStkNum = this.iAccZTStkNum;
    tmp.iNatureDayUnuActNum = this.iNatureDayUnuActNum;
    tmp.vecZTStkNum = this.vecZTStkNum.toObject();
    tmp.vecChgRatio = this.vecChgRatio.toObject();
    tmp.vecMainRatio = this.vecMainRatio.toObject();
    
    return tmp;
}
FuPan.FBlockStormEyeInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stBlkBasic") || (this.stBlkBasic.readFromObject(json.stBlkBasic));
    !json.hasOwnProperty("vecStk") || (this.vecStk.readFromObject(json.vecStk));
    !json.hasOwnProperty("bIsNew") || (this.bIsNew = json.bIsNew);
    !json.hasOwnProperty("iContinueRiseDay") || (this.iContinueRiseDay = json.iContinueRiseDay);
    !json.hasOwnProperty("iZTStkNum") || (this.iZTStkNum = json.iZTStkNum);
    !json.hasOwnProperty("iNatureDayZTNum") || (this.iNatureDayZTNum = json.iNatureDayZTNum);
    !json.hasOwnProperty("iAccZTStkNum") || (this.iAccZTStkNum = json.iAccZTStkNum);
    !json.hasOwnProperty("iNatureDayUnuActNum") || (this.iNatureDayUnuActNum = json.iNatureDayUnuActNum);
    !json.hasOwnProperty("vecZTStkNum") || (this.vecZTStkNum.readFromObject(json.vecZTStkNum));
    !json.hasOwnProperty("vecChgRatio") || (this.vecChgRatio.readFromObject(json.vecChgRatio));
    !json.hasOwnProperty("vecMainRatio") || (this.vecMainRatio.readFromObject(json.vecMainRatio));
}
FuPan.FBlockStormEyeInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockStormEyeInfo.new = function () {
    return new FuPan.FBlockStormEyeInfo();
}
FuPan.FBlockStormEyeInfo.create = function (is) {
    return FuPan.FBlockStormEyeInfo._readFrom(is);
}
FuPan.FBlockStormEye = function() {
    this.iDate = 0;
    this.vecBlkCoreStorm = new TafStream.List(FuPan.FBlockStormEyeInfo);
    this.vecBlkCommStorm = new TafStream.List(FuPan.FBlockStormEyeInfo);
    this._classname = "FuPan.FBlockStormEye";
};
FuPan.FBlockStormEye.prototype = new TafStream.JceStruct();
FuPan.FBlockStormEye._classname = "FuPan.FBlockStormEye";

FuPan.FBlockStormEye._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockStormEye._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockStormEye._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockStormEye();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.vecBlkCoreStorm = is.readList(1, false, TafStream.List(FuPan.FBlockStormEyeInfo));
    tmp.vecBlkCommStorm = is.readList(2, false, TafStream.List(FuPan.FBlockStormEyeInfo));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockStormEye.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    if (this.vecBlkCoreStorm != undefined) {
        os.writeList(1, this.vecBlkCoreStorm);
    }
    if (this.vecBlkCommStorm != undefined) {
        os.writeList(2, this.vecBlkCommStorm);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockStormEye.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockStormEye.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockStormEye.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.vecBlkCoreStorm = this.vecBlkCoreStorm.toObject();
    tmp.vecBlkCommStorm = this.vecBlkCommStorm.toObject();
    
    return tmp;
}
FuPan.FBlockStormEye.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("vecBlkCoreStorm") || (this.vecBlkCoreStorm.readFromObject(json.vecBlkCoreStorm));
    !json.hasOwnProperty("vecBlkCommStorm") || (this.vecBlkCommStorm.readFromObject(json.vecBlkCommStorm));
}
FuPan.FBlockStormEye.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockStormEye.new = function () {
    return new FuPan.FBlockStormEye();
}
FuPan.FBlockStormEye.create = function (is) {
    return FuPan.FBlockStormEye._readFrom(is);
}
FuPan.FBlockStormEyeExt = function() {
    this.mapBlkStkLeadNum = new TafStream.Map(TafStream.String, TafStream.Map(TafStream.Int32, TafStream.Map(TafStream.String, TafStream.Int32)));
    this.mapBlkUnuActNum = new TafStream.Map(TafStream.String, TafStream.Map(TafStream.Int32, TafStream.Boolean));
    this.mapBlkChgRatio = new TafStream.Map(TafStream.String, TafStream.Map(TafStream.Int32, TafStream.Double));
    this.mapBlkMainRatio = new TafStream.Map(TafStream.String, TafStream.Map(TafStream.Int32, TafStream.Double));
    this._classname = "FuPan.FBlockStormEyeExt";
};
FuPan.FBlockStormEyeExt.prototype = new TafStream.JceStruct();
FuPan.FBlockStormEyeExt._classname = "FuPan.FBlockStormEyeExt";

FuPan.FBlockStormEyeExt._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockStormEyeExt._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockStormEyeExt._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockStormEyeExt();
    tmp.mapBlkStkLeadNum = is.readMap(0, false, TafStream.Map(TafStream.String, TafStream.Map(TafStream.Int32, TafStream.Map(TafStream.String, TafStream.Int32))));
    tmp.mapBlkUnuActNum = is.readMap(1, false, TafStream.Map(TafStream.String, TafStream.Map(TafStream.Int32, TafStream.Boolean)));
    tmp.mapBlkChgRatio = is.readMap(2, false, TafStream.Map(TafStream.String, TafStream.Map(TafStream.Int32, TafStream.Double)));
    tmp.mapBlkMainRatio = is.readMap(3, false, TafStream.Map(TafStream.String, TafStream.Map(TafStream.Int32, TafStream.Double)));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockStormEyeExt.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.mapBlkStkLeadNum != undefined) {
        os.writeMap(0, this.mapBlkStkLeadNum);
    }
    if (this.mapBlkUnuActNum != undefined) {
        os.writeMap(1, this.mapBlkUnuActNum);
    }
    if (this.mapBlkChgRatio != undefined) {
        os.writeMap(2, this.mapBlkChgRatio);
    }
    if (this.mapBlkMainRatio != undefined) {
        os.writeMap(3, this.mapBlkMainRatio);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockStormEyeExt.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockStormEyeExt.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockStormEyeExt.prototype.toObject = function() { 
    var tmp = {};

    tmp.mapBlkStkLeadNum = this.mapBlkStkLeadNum.toObject();
    tmp.mapBlkUnuActNum = this.mapBlkUnuActNum.toObject();
    tmp.mapBlkChgRatio = this.mapBlkChgRatio.toObject();
    tmp.mapBlkMainRatio = this.mapBlkMainRatio.toObject();
    
    return tmp;
}
FuPan.FBlockStormEyeExt.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("mapBlkStkLeadNum") || (this.mapBlkStkLeadNum.readFromObject(json.mapBlkStkLeadNum));
    !json.hasOwnProperty("mapBlkUnuActNum") || (this.mapBlkUnuActNum.readFromObject(json.mapBlkUnuActNum));
    !json.hasOwnProperty("mapBlkChgRatio") || (this.mapBlkChgRatio.readFromObject(json.mapBlkChgRatio));
    !json.hasOwnProperty("mapBlkMainRatio") || (this.mapBlkMainRatio.readFromObject(json.mapBlkMainRatio));
}
FuPan.FBlockStormEyeExt.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockStormEyeExt.new = function () {
    return new FuPan.FBlockStormEyeExt();
}
FuPan.FBlockStormEyeExt.create = function (is) {
    return FuPan.FBlockStormEyeExt._readFrom(is);
}
FuPan.FBlockStormEyeDB = function() {
    this.iDate = 0;
    this.stStormEye = new FuPan.FBlockStormEye();
    this.stStormEyeExt = new FuPan.FBlockStormEyeExt();
    this._classname = "FuPan.FBlockStormEyeDB";
};
FuPan.FBlockStormEyeDB.prototype = new TafStream.JceStruct();
FuPan.FBlockStormEyeDB._classname = "FuPan.FBlockStormEyeDB";

FuPan.FBlockStormEyeDB._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockStormEyeDB._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockStormEyeDB._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockStormEyeDB();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.stStormEye = is.readStruct(1, false, FuPan.FBlockStormEye);
    tmp.stStormEyeExt = is.readStruct(2, false, FuPan.FBlockStormEyeExt);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockStormEyeDB.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    os.writeStruct(1, this.stStormEye);
    os.writeStruct(2, this.stStormEyeExt);
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockStormEyeDB.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockStormEyeDB.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockStormEyeDB.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.stStormEye = this.stStormEye.toObject();
    tmp.stStormEyeExt = this.stStormEyeExt.toObject();
    
    return tmp;
}
FuPan.FBlockStormEyeDB.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("stStormEye") || (this.stStormEye.readFromObject(json.stStormEye));
    !json.hasOwnProperty("stStormEyeExt") || (this.stStormEyeExt.readFromObject(json.stStormEyeExt));
}
FuPan.FBlockStormEyeDB.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockStormEyeDB.new = function () {
    return new FuPan.FBlockStormEyeDB();
}
FuPan.FBlockStormEyeDB.create = function (is) {
    return FuPan.FBlockStormEyeDB._readFrom(is);
}
FuPan.FBlockStormLevel = function() {
    this.blk = new _TAF_MODULE_B_.FuPan.FBlockSimpleInfo();
    this.iZTStkNum = 0;
    this.iAccZTStkNum = 0;
    this._classname = "FuPan.FBlockStormLevel";
};
FuPan.FBlockStormLevel.prototype = new TafStream.JceStruct();
FuPan.FBlockStormLevel._classname = "FuPan.FBlockStormLevel";

FuPan.FBlockStormLevel._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockStormLevel._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockStormLevel._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockStormLevel();
    tmp.blk = is.readStruct(0, false, _TAF_MODULE_B_.FuPan.FBlockSimpleInfo);
    tmp.iZTStkNum = is.readInt32(1, false, 0);
    tmp.iAccZTStkNum = is.readInt32(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockStormLevel.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.blk);
    if (this.iZTStkNum != undefined && this.iZTStkNum != 0) {
        os.writeInt32(1, this.iZTStkNum);
    }
    if (this.iAccZTStkNum != undefined && this.iAccZTStkNum != 0) {
        os.writeInt32(2, this.iAccZTStkNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockStormLevel.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockStormLevel.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockStormLevel.prototype.toObject = function() { 
    var tmp = {};

    tmp.blk = this.blk.toObject();
    tmp.iZTStkNum = this.iZTStkNum;
    tmp.iAccZTStkNum = this.iAccZTStkNum;
    
    return tmp;
}
FuPan.FBlockStormLevel.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("blk") || (this.blk.readFromObject(json.blk));
    !json.hasOwnProperty("iZTStkNum") || (this.iZTStkNum = json.iZTStkNum);
    !json.hasOwnProperty("iAccZTStkNum") || (this.iAccZTStkNum = json.iAccZTStkNum);
}
FuPan.FBlockStormLevel.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockStormLevel.new = function () {
    return new FuPan.FBlockStormLevel();
}
FuPan.FBlockStormLevel.create = function (is) {
    return FuPan.FBlockStormLevel._readFrom(is);
}
FuPan.FBlockStormNum = function() {
    this.iCoreStormNum = 0;
    this.iCommStormNum = 0;
    this._classname = "FuPan.FBlockStormNum";
};
FuPan.FBlockStormNum.prototype = new TafStream.JceStruct();
FuPan.FBlockStormNum._classname = "FuPan.FBlockStormNum";

FuPan.FBlockStormNum._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockStormNum._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockStormNum._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockStormNum();
    tmp.iCoreStormNum = is.readInt32(0, false, 0);
    tmp.iCommStormNum = is.readInt32(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockStormNum.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iCoreStormNum != undefined && this.iCoreStormNum != 0) {
        os.writeInt32(0, this.iCoreStormNum);
    }
    if (this.iCommStormNum != undefined && this.iCommStormNum != 0) {
        os.writeInt32(1, this.iCommStormNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockStormNum.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockStormNum.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockStormNum.prototype.toObject = function() { 
    var tmp = {};

    tmp.iCoreStormNum = this.iCoreStormNum;
    tmp.iCommStormNum = this.iCommStormNum;
    
    return tmp;
}
FuPan.FBlockStormNum.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iCoreStormNum") || (this.iCoreStormNum = json.iCoreStormNum);
    !json.hasOwnProperty("iCommStormNum") || (this.iCommStormNum = json.iCommStormNum);
}
FuPan.FBlockStormNum.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockStormNum.new = function () {
    return new FuPan.FBlockStormNum();
}
FuPan.FBlockStormNum.create = function (is) {
    return FuPan.FBlockStormNum._readFrom(is);
}
FuPan.FBlockStormEyeIdx = function() {
    this.iDate = 0;
    this.stStormNum = new FuPan.FBlockStormNum();
    this.mapStormLv = new TafStream.Map(TafStream.String, FuPan.FBlockStormLevel);
    this._classname = "FuPan.FBlockStormEyeIdx";
};
FuPan.FBlockStormEyeIdx.prototype = new TafStream.JceStruct();
FuPan.FBlockStormEyeIdx._classname = "FuPan.FBlockStormEyeIdx";

FuPan.FBlockStormEyeIdx._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockStormEyeIdx._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockStormEyeIdx._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockStormEyeIdx();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.stStormNum = is.readStruct(1, false, FuPan.FBlockStormNum);
    tmp.mapStormLv = is.readMap(2, false, TafStream.Map(TafStream.String, FuPan.FBlockStormLevel));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockStormEyeIdx.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    os.writeStruct(1, this.stStormNum);
    if (this.mapStormLv != undefined) {
        os.writeMap(2, this.mapStormLv);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockStormEyeIdx.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockStormEyeIdx.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockStormEyeIdx.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.stStormNum = this.stStormNum.toObject();
    tmp.mapStormLv = this.mapStormLv.toObject();
    
    return tmp;
}
FuPan.FBlockStormEyeIdx.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("stStormNum") || (this.stStormNum.readFromObject(json.stStormNum));
    !json.hasOwnProperty("mapStormLv") || (this.mapStormLv.readFromObject(json.mapStormLv));
}
FuPan.FBlockStormEyeIdx.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockStormEyeIdx.new = function () {
    return new FuPan.FBlockStormEyeIdx();
}
FuPan.FBlockStormEyeIdx.create = function (is) {
    return FuPan.FBlockStormEyeIdx._readFrom(is);
}
FuPan.FBlockExternData = function() {
    this.iDate = 0;
    this.stDragonHead = new FuPan.FBlockDragonHead();
    this.stHisZTTrail = new FuPan.FBlockHisZTTrail();
    this.stZTStatic = new FuPan.FBlockZTStaticData();
    this.stZTNum = new FuPan.FBlockZTStkNum();
    this.stZTNumTs = new FuPan.FBlockZTStkNumTs();
    this.stStormEye = new FuPan.FBlockStormEye();
    this.stStormEyeIdx = new FuPan.FBlockStormEyeIdx();
    this._classname = "FuPan.FBlockExternData";
};
FuPan.FBlockExternData.prototype = new TafStream.JceStruct();
FuPan.FBlockExternData._classname = "FuPan.FBlockExternData";

FuPan.FBlockExternData._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockExternData._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockExternData._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockExternData();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.stDragonHead = is.readStruct(1, false, FuPan.FBlockDragonHead);
    tmp.stHisZTTrail = is.readStruct(2, false, FuPan.FBlockHisZTTrail);
    tmp.stZTStatic = is.readStruct(3, false, FuPan.FBlockZTStaticData);
    tmp.stZTNum = is.readStruct(4, false, FuPan.FBlockZTStkNum);
    tmp.stZTNumTs = is.readStruct(5, false, FuPan.FBlockZTStkNumTs);
    tmp.stStormEye = is.readStruct(6, false, FuPan.FBlockStormEye);
    tmp.stStormEyeIdx = is.readStruct(7, false, FuPan.FBlockStormEyeIdx);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockExternData.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    os.writeStruct(1, this.stDragonHead);
    os.writeStruct(2, this.stHisZTTrail);
    os.writeStruct(3, this.stZTStatic);
    os.writeStruct(4, this.stZTNum);
    os.writeStruct(5, this.stZTNumTs);
    os.writeStruct(6, this.stStormEye);
    os.writeStruct(7, this.stStormEyeIdx);
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockExternData.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockExternData.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockExternData.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.stDragonHead = this.stDragonHead.toObject();
    tmp.stHisZTTrail = this.stHisZTTrail.toObject();
    tmp.stZTStatic = this.stZTStatic.toObject();
    tmp.stZTNum = this.stZTNum.toObject();
    tmp.stZTNumTs = this.stZTNumTs.toObject();
    tmp.stStormEye = this.stStormEye.toObject();
    tmp.stStormEyeIdx = this.stStormEyeIdx.toObject();
    
    return tmp;
}
FuPan.FBlockExternData.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("stDragonHead") || (this.stDragonHead.readFromObject(json.stDragonHead));
    !json.hasOwnProperty("stHisZTTrail") || (this.stHisZTTrail.readFromObject(json.stHisZTTrail));
    !json.hasOwnProperty("stZTStatic") || (this.stZTStatic.readFromObject(json.stZTStatic));
    !json.hasOwnProperty("stZTNum") || (this.stZTNum.readFromObject(json.stZTNum));
    !json.hasOwnProperty("stZTNumTs") || (this.stZTNumTs.readFromObject(json.stZTNumTs));
    !json.hasOwnProperty("stStormEye") || (this.stStormEye.readFromObject(json.stStormEye));
    !json.hasOwnProperty("stStormEyeIdx") || (this.stStormEyeIdx.readFromObject(json.stStormEyeIdx));
}
FuPan.FBlockExternData.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockExternData.new = function () {
    return new FuPan.FBlockExternData();
}
FuPan.FBlockExternData.create = function (is) {
    return FuPan.FBlockExternData._readFrom(is);
}
FuPan.FBlockData = function() {
    this.iDate = 0;
    this.mapBlkBasicData = new TafStream.Map(TafStream.String, FuPan.FBlockBasicData);
    this.mapAllZtStk = new TafStream.Map(TafStream.String, FuPan.FBlockStockInfo);
    this.mapAllUnZtStk = new TafStream.Map(TafStream.String, FuPan.FBlockStockInfo);
    this.stBlkExtData = new FuPan.FBlockExternData();
    this._classname = "FuPan.FBlockData";
};
FuPan.FBlockData.prototype = new TafStream.JceStruct();
FuPan.FBlockData._classname = "FuPan.FBlockData";

FuPan.FBlockData._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockData._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockData._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockData();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.mapBlkBasicData = is.readMap(1, false, TafStream.Map(TafStream.String, FuPan.FBlockBasicData));
    tmp.mapAllZtStk = is.readMap(2, false, TafStream.Map(TafStream.String, FuPan.FBlockStockInfo));
    tmp.mapAllUnZtStk = is.readMap(3, false, TafStream.Map(TafStream.String, FuPan.FBlockStockInfo));
    tmp.stBlkExtData = is.readStruct(4, false, FuPan.FBlockExternData);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockData.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    if (this.mapBlkBasicData != undefined) {
        os.writeMap(1, this.mapBlkBasicData);
    }
    if (this.mapAllZtStk != undefined) {
        os.writeMap(2, this.mapAllZtStk);
    }
    if (this.mapAllUnZtStk != undefined) {
        os.writeMap(3, this.mapAllUnZtStk);
    }
    os.writeStruct(4, this.stBlkExtData);
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockData.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockData.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockData.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.mapBlkBasicData = this.mapBlkBasicData.toObject();
    tmp.mapAllZtStk = this.mapAllZtStk.toObject();
    tmp.mapAllUnZtStk = this.mapAllUnZtStk.toObject();
    tmp.stBlkExtData = this.stBlkExtData.toObject();
    
    return tmp;
}
FuPan.FBlockData.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("mapBlkBasicData") || (this.mapBlkBasicData.readFromObject(json.mapBlkBasicData));
    !json.hasOwnProperty("mapAllZtStk") || (this.mapAllZtStk.readFromObject(json.mapAllZtStk));
    !json.hasOwnProperty("mapAllUnZtStk") || (this.mapAllUnZtStk.readFromObject(json.mapAllUnZtStk));
    !json.hasOwnProperty("stBlkExtData") || (this.stBlkExtData.readFromObject(json.stBlkExtData));
}
FuPan.FBlockData.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockData.new = function () {
    return new FuPan.FBlockData();
}
FuPan.FBlockData.create = function (is) {
    return FuPan.FBlockData._readFrom(is);
}


