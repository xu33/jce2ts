// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 5.3.1 by TAF Team.
// Generated from `./CommonData.jce'
// **********************************************************************

var TafStream = require('@taf/taf-stream');
var TafError  = require('@taf/taf-rpc').error;

if(TafStream.JceStruct == undefined){
TafStream.JceStruct = function() {
this._jce_double_precision_ = -1;
}
TafStream.JceStruct.prototype.setPrecision = function(d) {
if ((d == -1) || (d >= 0 && d <= 15)) {
this._jce_double_precision_ = d;
return true;
}
return false;
}
TafStream.JceStruct.prototype.resetPrecision = function() { this._jce_double_precision_ = -1;}
TafStream.JceStruct.prototype.hasSetPrecision = function() { return (this._jce_double_precision_ >= 0 && this._jce_double_precision_ <= 15);}
TafStream.JceStruct.prototype.getPrecision = function() { return this._jce_double_precision_; }
}
var _TAF_MODULE_B_ = require('./BasicDataJce.js');
var _TAF_MODULE_D_ = require('./CommonDataJce.js');
var _TAF_MODULE_A_ = require('./FuPanBasicDataJce.js');
var _TAF_MODULE_C_ = require('./RadarDataJce.js');

var FuPan = FuPan || {};
module.exports.FuPan = FuPan;


FuPan.E_TREND_DATE_TYPE = {
    E_TREND_CURRENT : 0,
    E_TREND_LAST_30_DAY : 1
};

FuPan.E_TREND_DATE_TYPE.etos = function(enm) {
    switch(enm){
        case 0 : return 'E_TREND_CURRENT';
        case 1 : return 'E_TREND_LAST_30_DAY';
    }
    return undefined;
};

FuPan.E_TREND_DATE_TYPE.stoe = function(enm) {
    switch(enm){
        case 'E_TREND_CURRENT' : return 0;
        case 'E_TREND_LAST_30_DAY' : return 1;
    }
    return undefined;
};

FuPan.E_TREND_DATE_TYPE._write = function(os, tag, val) { return os.writeInt32(tag, val); }
FuPan.E_TREND_DATE_TYPE._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }
FuPan.E_MARKET_TREND_TYPE = {
    E_INDEX_TREND : 0,
    E_MARKET_ZD_TREND : 1,
    E_MARKET_FENBU_TREND : 2,
    E_MARKET_ZTDT_TREND : 3,
    E_ZT_PROFIT_TREND : 4,
    E_CHG_PROFIT_TREND : 5,
    E_OPEN_BOARD_TREND : 6,
    E_CONTINUE_BOARD_TREND : 7,
    E_HIT_BOARD_TREND : 8,
    E_MARKET_VOL_TREND : 9,
    E_MARKET_HOT_TREND : 10,
    E_POSITION_RATE_TREND : 11,
    E_MARKET_FENBU_TREND_DETAIL : 12
};

FuPan.E_MARKET_TREND_TYPE.etos = function(enm) {
    switch(enm){
        case 0 : return 'E_INDEX_TREND';
        case 1 : return 'E_MARKET_ZD_TREND';
        case 2 : return 'E_MARKET_FENBU_TREND';
        case 3 : return 'E_MARKET_ZTDT_TREND';
        case 4 : return 'E_ZT_PROFIT_TREND';
        case 5 : return 'E_CHG_PROFIT_TREND';
        case 6 : return 'E_OPEN_BOARD_TREND';
        case 7 : return 'E_CONTINUE_BOARD_TREND';
        case 8 : return 'E_HIT_BOARD_TREND';
        case 9 : return 'E_MARKET_VOL_TREND';
        case 10 : return 'E_MARKET_HOT_TREND';
        case 11 : return 'E_POSITION_RATE_TREND';
        case 12 : return 'E_MARKET_FENBU_TREND_DETAIL';
    }
    return undefined;
};

FuPan.E_MARKET_TREND_TYPE.stoe = function(enm) {
    switch(enm){
        case 'E_INDEX_TREND' : return 0;
        case 'E_MARKET_ZD_TREND' : return 1;
        case 'E_MARKET_FENBU_TREND' : return 2;
        case 'E_MARKET_ZTDT_TREND' : return 3;
        case 'E_ZT_PROFIT_TREND' : return 4;
        case 'E_CHG_PROFIT_TREND' : return 5;
        case 'E_OPEN_BOARD_TREND' : return 6;
        case 'E_CONTINUE_BOARD_TREND' : return 7;
        case 'E_HIT_BOARD_TREND' : return 8;
        case 'E_MARKET_VOL_TREND' : return 9;
        case 'E_MARKET_HOT_TREND' : return 10;
        case 'E_POSITION_RATE_TREND' : return 11;
        case 'E_MARKET_FENBU_TREND_DETAIL' : return 12;
    }
    return undefined;
};

FuPan.E_MARKET_TREND_TYPE._write = function(os, tag, val) { return os.writeInt32(tag, val); }
FuPan.E_MARKET_TREND_TYPE._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }
FuPan.E_PUSH_MSG_TYPE = {
    E_MSG_TYPE_NONE : 0,
    E_MSG_TYPE_DRAGON_HEAD_SNIPER : 1
};

FuPan.E_PUSH_MSG_TYPE.etos = function(enm) {
    switch(enm){
        case 0 : return 'E_MSG_TYPE_NONE';
        case 1 : return 'E_MSG_TYPE_DRAGON_HEAD_SNIPER';
    }
    return undefined;
};

FuPan.E_PUSH_MSG_TYPE.stoe = function(enm) {
    switch(enm){
        case 'E_MSG_TYPE_NONE' : return 0;
        case 'E_MSG_TYPE_DRAGON_HEAD_SNIPER' : return 1;
    }
    return undefined;
};

FuPan.E_PUSH_MSG_TYPE._write = function(os, tag, val) { return os.writeInt32(tag, val); }
FuPan.E_PUSH_MSG_TYPE._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }
FuPan.E_FUPAN_REG_TYPE = {
    E_FUPAN_STOCK_POOL : 0,
    E_FUPAN_MARKET_TREND : 1,
    E_FUPAN_BLOCK_DATA : 2,
    E_FUPAN_FILTER_MARKET_TREND : 3,
    E_FUPAN_HISFACTOR : 4,
    E_FUPAN_BLK_STK_INFO : 5,
    E_FUPAN_MARKET_DATA : 6,
    E_FUPAN_NEW_BLOCK_DATA : 7,
    E_FUPAN_CALL_AUCTION_DATA : 8
};

FuPan.E_FUPAN_REG_TYPE.etos = function(enm) {
    switch(enm){
        case 0 : return 'E_FUPAN_STOCK_POOL';
        case 1 : return 'E_FUPAN_MARKET_TREND';
        case 2 : return 'E_FUPAN_BLOCK_DATA';
        case 3 : return 'E_FUPAN_FILTER_MARKET_TREND';
        case 4 : return 'E_FUPAN_HISFACTOR';
        case 5 : return 'E_FUPAN_BLK_STK_INFO';
        case 6 : return 'E_FUPAN_MARKET_DATA';
        case 7 : return 'E_FUPAN_NEW_BLOCK_DATA';
        case 8 : return 'E_FUPAN_CALL_AUCTION_DATA';
    }
    return undefined;
};

FuPan.E_FUPAN_REG_TYPE.stoe = function(enm) {
    switch(enm){
        case 'E_FUPAN_STOCK_POOL' : return 0;
        case 'E_FUPAN_MARKET_TREND' : return 1;
        case 'E_FUPAN_BLOCK_DATA' : return 2;
        case 'E_FUPAN_FILTER_MARKET_TREND' : return 3;
        case 'E_FUPAN_HISFACTOR' : return 4;
        case 'E_FUPAN_BLK_STK_INFO' : return 5;
        case 'E_FUPAN_MARKET_DATA' : return 6;
        case 'E_FUPAN_NEW_BLOCK_DATA' : return 7;
        case 'E_FUPAN_CALL_AUCTION_DATA' : return 8;
    }
    return undefined;
};

FuPan.E_FUPAN_REG_TYPE._write = function(os, tag, val) { return os.writeInt32(tag, val); }
FuPan.E_FUPAN_REG_TYPE._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }

FuPan.FIndexCurrent = function() {
    this.dSHRatio = 0;
    this.dSH50Ratio = 0;
    this.dCYRatio = 0;
    this.dSZRatio = 0;
    this._classname = "FuPan.FIndexCurrent";
};
FuPan.FIndexCurrent.prototype = new TafStream.JceStruct();
FuPan.FIndexCurrent._classname = "FuPan.FIndexCurrent";

FuPan.FIndexCurrent._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FIndexCurrent._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FIndexCurrent._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FIndexCurrent();
    tmp.dSHRatio = is.readDouble(0, false, 0);
    tmp.dSH50Ratio = is.readDouble(1, false, 0);
    tmp.dCYRatio = is.readDouble(2, false, 0);
    tmp.dSZRatio = is.readDouble(3, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FIndexCurrent.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.dSHRatio != undefined && this.dSHRatio != 0) {
        os.writeDouble(0, this.dSHRatio);
    }
    if (this.dSH50Ratio != undefined && this.dSH50Ratio != 0) {
        os.writeDouble(1, this.dSH50Ratio);
    }
    if (this.dCYRatio != undefined && this.dCYRatio != 0) {
        os.writeDouble(2, this.dCYRatio);
    }
    if (this.dSZRatio != undefined && this.dSZRatio != 0) {
        os.writeDouble(3, this.dSZRatio);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FIndexCurrent.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FIndexCurrent.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FIndexCurrent.prototype.toObject = function() { 
    var tmp = {};

    tmp.dSHRatio = this.dSHRatio;
    tmp.dSH50Ratio = this.dSH50Ratio;
    tmp.dCYRatio = this.dCYRatio;
    tmp.dSZRatio = this.dSZRatio;
    
    return tmp;
}
FuPan.FIndexCurrent.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("dSHRatio") || (this.dSHRatio = json.dSHRatio);
    !json.hasOwnProperty("dSH50Ratio") || (this.dSH50Ratio = json.dSH50Ratio);
    !json.hasOwnProperty("dCYRatio") || (this.dCYRatio = json.dCYRatio);
    !json.hasOwnProperty("dSZRatio") || (this.dSZRatio = json.dSZRatio);
}
FuPan.FIndexCurrent.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FIndexCurrent.new = function () {
    return new FuPan.FIndexCurrent();
}
FuPan.FIndexCurrent.create = function (is) {
    return FuPan.FIndexCurrent._readFrom(is);
}
FuPan.FIndexTrend = function() {
    this.vecTime = new TafStream.List(TafStream.Int32);
    this.vecData = new TafStream.List(FuPan.FIndexCurrent);
    this._classname = "FuPan.FIndexTrend";
};
FuPan.FIndexTrend.prototype = new TafStream.JceStruct();
FuPan.FIndexTrend._classname = "FuPan.FIndexTrend";

FuPan.FIndexTrend._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FIndexTrend._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FIndexTrend._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FIndexTrend();
    tmp.vecTime = is.readList(0, false, TafStream.List(TafStream.Int32));
    tmp.vecData = is.readList(1, false, TafStream.List(FuPan.FIndexCurrent));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FIndexTrend.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecTime != undefined) {
        os.writeList(0, this.vecTime);
    }
    if (this.vecData != undefined) {
        os.writeList(1, this.vecData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FIndexTrend.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FIndexTrend.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FIndexTrend.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecTime = this.vecTime.toObject();
    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FIndexTrend.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecTime") || (this.vecTime.readFromObject(json.vecTime));
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FIndexTrend.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FIndexTrend.new = function () {
    return new FuPan.FIndexTrend();
}
FuPan.FIndexTrend.create = function (is) {
    return FuPan.FIndexTrend._readFrom(is);
}
FuPan.FZDCurrent = function() {
    this.iUpNum = 0;
    this.iDownNum = 0;
    this.dRatio = 0;
    this._classname = "FuPan.FZDCurrent";
};
FuPan.FZDCurrent.prototype = new TafStream.JceStruct();
FuPan.FZDCurrent._classname = "FuPan.FZDCurrent";

FuPan.FZDCurrent._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZDCurrent._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZDCurrent._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZDCurrent();
    tmp.iUpNum = is.readInt32(0, false, 0);
    tmp.iDownNum = is.readInt32(1, false, 0);
    tmp.dRatio = is.readDouble(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZDCurrent.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iUpNum != undefined && this.iUpNum != 0) {
        os.writeInt32(0, this.iUpNum);
    }
    if (this.iDownNum != undefined && this.iDownNum != 0) {
        os.writeInt32(1, this.iDownNum);
    }
    if (this.dRatio != undefined && this.dRatio != 0) {
        os.writeDouble(2, this.dRatio);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZDCurrent.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZDCurrent.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZDCurrent.prototype.toObject = function() { 
    var tmp = {};

    tmp.iUpNum = this.iUpNum;
    tmp.iDownNum = this.iDownNum;
    tmp.dRatio = this.dRatio;
    
    return tmp;
}
FuPan.FZDCurrent.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iUpNum") || (this.iUpNum = json.iUpNum);
    !json.hasOwnProperty("iDownNum") || (this.iDownNum = json.iDownNum);
    !json.hasOwnProperty("dRatio") || (this.dRatio = json.dRatio);
}
FuPan.FZDCurrent.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZDCurrent.new = function () {
    return new FuPan.FZDCurrent();
}
FuPan.FZDCurrent.create = function (is) {
    return FuPan.FZDCurrent._readFrom(is);
}
FuPan.FZDTrend = function() {
    this.vecTime = new TafStream.List(TafStream.Int32);
    this.vecData = new TafStream.List(FuPan.FZDCurrent);
    this._classname = "FuPan.FZDTrend";
};
FuPan.FZDTrend.prototype = new TafStream.JceStruct();
FuPan.FZDTrend._classname = "FuPan.FZDTrend";

FuPan.FZDTrend._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZDTrend._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZDTrend._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZDTrend();
    tmp.vecTime = is.readList(0, false, TafStream.List(TafStream.Int32));
    tmp.vecData = is.readList(1, false, TafStream.List(FuPan.FZDCurrent));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZDTrend.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecTime != undefined) {
        os.writeList(0, this.vecTime);
    }
    if (this.vecData != undefined) {
        os.writeList(1, this.vecData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZDTrend.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZDTrend.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZDTrend.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecTime = this.vecTime.toObject();
    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FZDTrend.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecTime") || (this.vecTime.readFromObject(json.vecTime));
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FZDTrend.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZDTrend.new = function () {
    return new FuPan.FZDTrend();
}
FuPan.FZDTrend.create = function (is) {
    return FuPan.FZDTrend._readFrom(is);
}
FuPan.FZDFenBuCurrent = function() {
    this.iZPer5Num = 0;
    this.iDPer5Num = 0;
    this.iZTNum = 0;
    this.iZPer8Num = 0;
    this.iZPer6Num = 0;
    this.iZPer4Num = 0;
    this.iZPer2Num = 0;
    this.iZPer0Num = 0;
    this.iDPer0Num = 0;
    this.iDPer2Num = 0;
    this.iDPer4Num = 0;
    this.iDPer6Num = 0;
    this.iDPer8Num = 0;
    this.iDTNum = 0;
    this._classname = "FuPan.FZDFenBuCurrent";
};
FuPan.FZDFenBuCurrent.prototype = new TafStream.JceStruct();
FuPan.FZDFenBuCurrent._classname = "FuPan.FZDFenBuCurrent";

FuPan.FZDFenBuCurrent._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZDFenBuCurrent._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZDFenBuCurrent._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZDFenBuCurrent();
    tmp.iZPer5Num = is.readInt32(0, false, 0);
    tmp.iDPer5Num = is.readInt32(1, false, 0);
    tmp.iZTNum = is.readInt32(2, false, 0);
    tmp.iZPer8Num = is.readInt32(3, false, 0);
    tmp.iZPer6Num = is.readInt32(4, false, 0);
    tmp.iZPer4Num = is.readInt32(5, false, 0);
    tmp.iZPer2Num = is.readInt32(6, false, 0);
    tmp.iZPer0Num = is.readInt32(7, false, 0);
    tmp.iDPer0Num = is.readInt32(8, false, 0);
    tmp.iDPer2Num = is.readInt32(9, false, 0);
    tmp.iDPer4Num = is.readInt32(10, false, 0);
    tmp.iDPer6Num = is.readInt32(11, false, 0);
    tmp.iDPer8Num = is.readInt32(12, false, 0);
    tmp.iDTNum = is.readInt32(13, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZDFenBuCurrent.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iZPer5Num != undefined && this.iZPer5Num != 0) {
        os.writeInt32(0, this.iZPer5Num);
    }
    if (this.iDPer5Num != undefined && this.iDPer5Num != 0) {
        os.writeInt32(1, this.iDPer5Num);
    }
    if (this.iZTNum != undefined && this.iZTNum != 0) {
        os.writeInt32(2, this.iZTNum);
    }
    if (this.iZPer8Num != undefined && this.iZPer8Num != 0) {
        os.writeInt32(3, this.iZPer8Num);
    }
    if (this.iZPer6Num != undefined && this.iZPer6Num != 0) {
        os.writeInt32(4, this.iZPer6Num);
    }
    if (this.iZPer4Num != undefined && this.iZPer4Num != 0) {
        os.writeInt32(5, this.iZPer4Num);
    }
    if (this.iZPer2Num != undefined && this.iZPer2Num != 0) {
        os.writeInt32(6, this.iZPer2Num);
    }
    if (this.iZPer0Num != undefined && this.iZPer0Num != 0) {
        os.writeInt32(7, this.iZPer0Num);
    }
    if (this.iDPer0Num != undefined && this.iDPer0Num != 0) {
        os.writeInt32(8, this.iDPer0Num);
    }
    if (this.iDPer2Num != undefined && this.iDPer2Num != 0) {
        os.writeInt32(9, this.iDPer2Num);
    }
    if (this.iDPer4Num != undefined && this.iDPer4Num != 0) {
        os.writeInt32(10, this.iDPer4Num);
    }
    if (this.iDPer6Num != undefined && this.iDPer6Num != 0) {
        os.writeInt32(11, this.iDPer6Num);
    }
    if (this.iDPer8Num != undefined && this.iDPer8Num != 0) {
        os.writeInt32(12, this.iDPer8Num);
    }
    if (this.iDTNum != undefined && this.iDTNum != 0) {
        os.writeInt32(13, this.iDTNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZDFenBuCurrent.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZDFenBuCurrent.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZDFenBuCurrent.prototype.toObject = function() { 
    var tmp = {};

    tmp.iZPer5Num = this.iZPer5Num;
    tmp.iDPer5Num = this.iDPer5Num;
    tmp.iZTNum = this.iZTNum;
    tmp.iZPer8Num = this.iZPer8Num;
    tmp.iZPer6Num = this.iZPer6Num;
    tmp.iZPer4Num = this.iZPer4Num;
    tmp.iZPer2Num = this.iZPer2Num;
    tmp.iZPer0Num = this.iZPer0Num;
    tmp.iDPer0Num = this.iDPer0Num;
    tmp.iDPer2Num = this.iDPer2Num;
    tmp.iDPer4Num = this.iDPer4Num;
    tmp.iDPer6Num = this.iDPer6Num;
    tmp.iDPer8Num = this.iDPer8Num;
    tmp.iDTNum = this.iDTNum;
    
    return tmp;
}
FuPan.FZDFenBuCurrent.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iZPer5Num") || (this.iZPer5Num = json.iZPer5Num);
    !json.hasOwnProperty("iDPer5Num") || (this.iDPer5Num = json.iDPer5Num);
    !json.hasOwnProperty("iZTNum") || (this.iZTNum = json.iZTNum);
    !json.hasOwnProperty("iZPer8Num") || (this.iZPer8Num = json.iZPer8Num);
    !json.hasOwnProperty("iZPer6Num") || (this.iZPer6Num = json.iZPer6Num);
    !json.hasOwnProperty("iZPer4Num") || (this.iZPer4Num = json.iZPer4Num);
    !json.hasOwnProperty("iZPer2Num") || (this.iZPer2Num = json.iZPer2Num);
    !json.hasOwnProperty("iZPer0Num") || (this.iZPer0Num = json.iZPer0Num);
    !json.hasOwnProperty("iDPer0Num") || (this.iDPer0Num = json.iDPer0Num);
    !json.hasOwnProperty("iDPer2Num") || (this.iDPer2Num = json.iDPer2Num);
    !json.hasOwnProperty("iDPer4Num") || (this.iDPer4Num = json.iDPer4Num);
    !json.hasOwnProperty("iDPer6Num") || (this.iDPer6Num = json.iDPer6Num);
    !json.hasOwnProperty("iDPer8Num") || (this.iDPer8Num = json.iDPer8Num);
    !json.hasOwnProperty("iDTNum") || (this.iDTNum = json.iDTNum);
}
FuPan.FZDFenBuCurrent.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZDFenBuCurrent.new = function () {
    return new FuPan.FZDFenBuCurrent();
}
FuPan.FZDFenBuCurrent.create = function (is) {
    return FuPan.FZDFenBuCurrent._readFrom(is);
}
FuPan.FZDFenBuNewCurrent = function() {
    this.iZTNum = 0;
    this.iZPer9Num = 0;
    this.iZPer8Num = 0;
    this.iZPer7Num = 0;
    this.iZPer6Num = 0;
    this.iZPer5Num = 0;
    this.iZPer4Num = 0;
    this.iZPer3Num = 0;
    this.iZPer2Num = 0;
    this.iZPer1Num = 0;
    this.iZPer0Num = 0;
    this.iDPer0Num = 0;
    this.iDPer1Num = 0;
    this.iDPer2Num = 0;
    this.iDPer3Num = 0;
    this.iDPer4Num = 0;
    this.iDPer5Num = 0;
    this.iDPer6Num = 0;
    this.iDPer7Num = 0;
    this.iDPer8Num = 0;
    this.iDPer9Num = 0;
    this.iDTNum = 0;
    this.iPPNum = 0;
    this.iZPNum = 0;
    this.iZNum = 0;
    this.iDNum = 0;
    this._classname = "FuPan.FZDFenBuNewCurrent";
};
FuPan.FZDFenBuNewCurrent.prototype = new TafStream.JceStruct();
FuPan.FZDFenBuNewCurrent._classname = "FuPan.FZDFenBuNewCurrent";

FuPan.FZDFenBuNewCurrent._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZDFenBuNewCurrent._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZDFenBuNewCurrent._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZDFenBuNewCurrent();
    tmp.iZTNum = is.readInt32(0, false, 0);
    tmp.iZPer9Num = is.readInt32(1, false, 0);
    tmp.iZPer8Num = is.readInt32(2, false, 0);
    tmp.iZPer7Num = is.readInt32(3, false, 0);
    tmp.iZPer6Num = is.readInt32(4, false, 0);
    tmp.iZPer5Num = is.readInt32(5, false, 0);
    tmp.iZPer4Num = is.readInt32(6, false, 0);
    tmp.iZPer3Num = is.readInt32(7, false, 0);
    tmp.iZPer2Num = is.readInt32(8, false, 0);
    tmp.iZPer1Num = is.readInt32(9, false, 0);
    tmp.iZPer0Num = is.readInt32(10, false, 0);
    tmp.iDPer0Num = is.readInt32(11, false, 0);
    tmp.iDPer1Num = is.readInt32(12, false, 0);
    tmp.iDPer2Num = is.readInt32(13, false, 0);
    tmp.iDPer3Num = is.readInt32(14, false, 0);
    tmp.iDPer4Num = is.readInt32(15, false, 0);
    tmp.iDPer5Num = is.readInt32(16, false, 0);
    tmp.iDPer6Num = is.readInt32(17, false, 0);
    tmp.iDPer7Num = is.readInt32(18, false, 0);
    tmp.iDPer8Num = is.readInt32(19, false, 0);
    tmp.iDPer9Num = is.readInt32(20, false, 0);
    tmp.iDTNum = is.readInt32(21, false, 0);
    tmp.iPPNum = is.readInt32(22, false, 0);
    tmp.iZPNum = is.readInt32(23, false, 0);
    tmp.iZNum = is.readInt32(24, false, 0);
    tmp.iDNum = is.readInt32(25, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZDFenBuNewCurrent.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iZTNum != undefined && this.iZTNum != 0) {
        os.writeInt32(0, this.iZTNum);
    }
    if (this.iZPer9Num != undefined && this.iZPer9Num != 0) {
        os.writeInt32(1, this.iZPer9Num);
    }
    if (this.iZPer8Num != undefined && this.iZPer8Num != 0) {
        os.writeInt32(2, this.iZPer8Num);
    }
    if (this.iZPer7Num != undefined && this.iZPer7Num != 0) {
        os.writeInt32(3, this.iZPer7Num);
    }
    if (this.iZPer6Num != undefined && this.iZPer6Num != 0) {
        os.writeInt32(4, this.iZPer6Num);
    }
    if (this.iZPer5Num != undefined && this.iZPer5Num != 0) {
        os.writeInt32(5, this.iZPer5Num);
    }
    if (this.iZPer4Num != undefined && this.iZPer4Num != 0) {
        os.writeInt32(6, this.iZPer4Num);
    }
    if (this.iZPer3Num != undefined && this.iZPer3Num != 0) {
        os.writeInt32(7, this.iZPer3Num);
    }
    if (this.iZPer2Num != undefined && this.iZPer2Num != 0) {
        os.writeInt32(8, this.iZPer2Num);
    }
    if (this.iZPer1Num != undefined && this.iZPer1Num != 0) {
        os.writeInt32(9, this.iZPer1Num);
    }
    if (this.iZPer0Num != undefined && this.iZPer0Num != 0) {
        os.writeInt32(10, this.iZPer0Num);
    }
    if (this.iDPer0Num != undefined && this.iDPer0Num != 0) {
        os.writeInt32(11, this.iDPer0Num);
    }
    if (this.iDPer1Num != undefined && this.iDPer1Num != 0) {
        os.writeInt32(12, this.iDPer1Num);
    }
    if (this.iDPer2Num != undefined && this.iDPer2Num != 0) {
        os.writeInt32(13, this.iDPer2Num);
    }
    if (this.iDPer3Num != undefined && this.iDPer3Num != 0) {
        os.writeInt32(14, this.iDPer3Num);
    }
    if (this.iDPer4Num != undefined && this.iDPer4Num != 0) {
        os.writeInt32(15, this.iDPer4Num);
    }
    if (this.iDPer5Num != undefined && this.iDPer5Num != 0) {
        os.writeInt32(16, this.iDPer5Num);
    }
    if (this.iDPer6Num != undefined && this.iDPer6Num != 0) {
        os.writeInt32(17, this.iDPer6Num);
    }
    if (this.iDPer7Num != undefined && this.iDPer7Num != 0) {
        os.writeInt32(18, this.iDPer7Num);
    }
    if (this.iDPer8Num != undefined && this.iDPer8Num != 0) {
        os.writeInt32(19, this.iDPer8Num);
    }
    if (this.iDPer9Num != undefined && this.iDPer9Num != 0) {
        os.writeInt32(20, this.iDPer9Num);
    }
    if (this.iDTNum != undefined && this.iDTNum != 0) {
        os.writeInt32(21, this.iDTNum);
    }
    if (this.iPPNum != undefined && this.iPPNum != 0) {
        os.writeInt32(22, this.iPPNum);
    }
    if (this.iZPNum != undefined && this.iZPNum != 0) {
        os.writeInt32(23, this.iZPNum);
    }
    if (this.iZNum != undefined && this.iZNum != 0) {
        os.writeInt32(24, this.iZNum);
    }
    if (this.iDNum != undefined && this.iDNum != 0) {
        os.writeInt32(25, this.iDNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZDFenBuNewCurrent.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZDFenBuNewCurrent.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZDFenBuNewCurrent.prototype.toObject = function() { 
    var tmp = {};

    tmp.iZTNum = this.iZTNum;
    tmp.iZPer9Num = this.iZPer9Num;
    tmp.iZPer8Num = this.iZPer8Num;
    tmp.iZPer7Num = this.iZPer7Num;
    tmp.iZPer6Num = this.iZPer6Num;
    tmp.iZPer5Num = this.iZPer5Num;
    tmp.iZPer4Num = this.iZPer4Num;
    tmp.iZPer3Num = this.iZPer3Num;
    tmp.iZPer2Num = this.iZPer2Num;
    tmp.iZPer1Num = this.iZPer1Num;
    tmp.iZPer0Num = this.iZPer0Num;
    tmp.iDPer0Num = this.iDPer0Num;
    tmp.iDPer1Num = this.iDPer1Num;
    tmp.iDPer2Num = this.iDPer2Num;
    tmp.iDPer3Num = this.iDPer3Num;
    tmp.iDPer4Num = this.iDPer4Num;
    tmp.iDPer5Num = this.iDPer5Num;
    tmp.iDPer6Num = this.iDPer6Num;
    tmp.iDPer7Num = this.iDPer7Num;
    tmp.iDPer8Num = this.iDPer8Num;
    tmp.iDPer9Num = this.iDPer9Num;
    tmp.iDTNum = this.iDTNum;
    tmp.iPPNum = this.iPPNum;
    tmp.iZPNum = this.iZPNum;
    tmp.iZNum = this.iZNum;
    tmp.iDNum = this.iDNum;
    
    return tmp;
}
FuPan.FZDFenBuNewCurrent.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iZTNum") || (this.iZTNum = json.iZTNum);
    !json.hasOwnProperty("iZPer9Num") || (this.iZPer9Num = json.iZPer9Num);
    !json.hasOwnProperty("iZPer8Num") || (this.iZPer8Num = json.iZPer8Num);
    !json.hasOwnProperty("iZPer7Num") || (this.iZPer7Num = json.iZPer7Num);
    !json.hasOwnProperty("iZPer6Num") || (this.iZPer6Num = json.iZPer6Num);
    !json.hasOwnProperty("iZPer5Num") || (this.iZPer5Num = json.iZPer5Num);
    !json.hasOwnProperty("iZPer4Num") || (this.iZPer4Num = json.iZPer4Num);
    !json.hasOwnProperty("iZPer3Num") || (this.iZPer3Num = json.iZPer3Num);
    !json.hasOwnProperty("iZPer2Num") || (this.iZPer2Num = json.iZPer2Num);
    !json.hasOwnProperty("iZPer1Num") || (this.iZPer1Num = json.iZPer1Num);
    !json.hasOwnProperty("iZPer0Num") || (this.iZPer0Num = json.iZPer0Num);
    !json.hasOwnProperty("iDPer0Num") || (this.iDPer0Num = json.iDPer0Num);
    !json.hasOwnProperty("iDPer1Num") || (this.iDPer1Num = json.iDPer1Num);
    !json.hasOwnProperty("iDPer2Num") || (this.iDPer2Num = json.iDPer2Num);
    !json.hasOwnProperty("iDPer3Num") || (this.iDPer3Num = json.iDPer3Num);
    !json.hasOwnProperty("iDPer4Num") || (this.iDPer4Num = json.iDPer4Num);
    !json.hasOwnProperty("iDPer5Num") || (this.iDPer5Num = json.iDPer5Num);
    !json.hasOwnProperty("iDPer6Num") || (this.iDPer6Num = json.iDPer6Num);
    !json.hasOwnProperty("iDPer7Num") || (this.iDPer7Num = json.iDPer7Num);
    !json.hasOwnProperty("iDPer8Num") || (this.iDPer8Num = json.iDPer8Num);
    !json.hasOwnProperty("iDPer9Num") || (this.iDPer9Num = json.iDPer9Num);
    !json.hasOwnProperty("iDTNum") || (this.iDTNum = json.iDTNum);
    !json.hasOwnProperty("iPPNum") || (this.iPPNum = json.iPPNum);
    !json.hasOwnProperty("iZPNum") || (this.iZPNum = json.iZPNum);
    !json.hasOwnProperty("iZNum") || (this.iZNum = json.iZNum);
    !json.hasOwnProperty("iDNum") || (this.iDNum = json.iDNum);
}
FuPan.FZDFenBuNewCurrent.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZDFenBuNewCurrent.new = function () {
    return new FuPan.FZDFenBuNewCurrent();
}
FuPan.FZDFenBuNewCurrent.create = function (is) {
    return FuPan.FZDFenBuNewCurrent._readFrom(is);
}
FuPan.FZDFenBuTrend = function() {
    this.vecTime = new TafStream.List(TafStream.Int32);
    this.vecData = new TafStream.List(FuPan.FZDFenBuCurrent);
    this._classname = "FuPan.FZDFenBuTrend";
};
FuPan.FZDFenBuTrend.prototype = new TafStream.JceStruct();
FuPan.FZDFenBuTrend._classname = "FuPan.FZDFenBuTrend";

FuPan.FZDFenBuTrend._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZDFenBuTrend._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZDFenBuTrend._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZDFenBuTrend();
    tmp.vecTime = is.readList(0, false, TafStream.List(TafStream.Int32));
    tmp.vecData = is.readList(1, false, TafStream.List(FuPan.FZDFenBuCurrent));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZDFenBuTrend.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecTime != undefined) {
        os.writeList(0, this.vecTime);
    }
    if (this.vecData != undefined) {
        os.writeList(1, this.vecData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZDFenBuTrend.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZDFenBuTrend.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZDFenBuTrend.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecTime = this.vecTime.toObject();
    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FZDFenBuTrend.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecTime") || (this.vecTime.readFromObject(json.vecTime));
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FZDFenBuTrend.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZDFenBuTrend.new = function () {
    return new FuPan.FZDFenBuTrend();
}
FuPan.FZDFenBuTrend.create = function (is) {
    return FuPan.FZDFenBuTrend._readFrom(is);
}
FuPan.FZDFenBuNewTrend = function() {
    this.vecTime = new TafStream.List(TafStream.Int32);
    this.mapData = new TafStream.Map(TafStream.Int32, TafStream.List(FuPan.FZDFenBuNewCurrent));
    this._classname = "FuPan.FZDFenBuNewTrend";
};
FuPan.FZDFenBuNewTrend.prototype = new TafStream.JceStruct();
FuPan.FZDFenBuNewTrend._classname = "FuPan.FZDFenBuNewTrend";

FuPan.FZDFenBuNewTrend._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZDFenBuNewTrend._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZDFenBuNewTrend._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZDFenBuNewTrend();
    tmp.vecTime = is.readList(0, false, TafStream.List(TafStream.Int32));
    tmp.mapData = is.readMap(1, false, TafStream.Map(TafStream.Int32, TafStream.List(FuPan.FZDFenBuNewCurrent)));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZDFenBuNewTrend.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecTime != undefined) {
        os.writeList(0, this.vecTime);
    }
    if (this.mapData != undefined) {
        os.writeMap(1, this.mapData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZDFenBuNewTrend.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZDFenBuNewTrend.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZDFenBuNewTrend.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecTime = this.vecTime.toObject();
    tmp.mapData = this.mapData.toObject();
    
    return tmp;
}
FuPan.FZDFenBuNewTrend.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecTime") || (this.vecTime.readFromObject(json.vecTime));
    !json.hasOwnProperty("mapData") || (this.mapData.readFromObject(json.mapData));
}
FuPan.FZDFenBuNewTrend.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZDFenBuNewTrend.new = function () {
    return new FuPan.FZDFenBuNewTrend();
}
FuPan.FZDFenBuNewTrend.create = function (is) {
    return FuPan.FZDFenBuNewTrend._readFrom(is);
}
FuPan.FZTDTCurrent = function() {
    this.iZTNum = 0;
    this.iNoOneBNum = 0;
    this.iDTNum = 0;
    this.iOneBoardNum = 0;
    this._classname = "FuPan.FZTDTCurrent";
};
FuPan.FZTDTCurrent.prototype = new TafStream.JceStruct();
FuPan.FZTDTCurrent._classname = "FuPan.FZTDTCurrent";

FuPan.FZTDTCurrent._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZTDTCurrent._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZTDTCurrent._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZTDTCurrent();
    tmp.iZTNum = is.readInt32(0, false, 0);
    tmp.iNoOneBNum = is.readInt32(1, false, 0);
    tmp.iDTNum = is.readInt32(2, false, 0);
    tmp.iOneBoardNum = is.readInt32(3, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZTDTCurrent.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iZTNum != undefined && this.iZTNum != 0) {
        os.writeInt32(0, this.iZTNum);
    }
    if (this.iNoOneBNum != undefined && this.iNoOneBNum != 0) {
        os.writeInt32(1, this.iNoOneBNum);
    }
    if (this.iDTNum != undefined && this.iDTNum != 0) {
        os.writeInt32(2, this.iDTNum);
    }
    if (this.iOneBoardNum != undefined && this.iOneBoardNum != 0) {
        os.writeInt32(3, this.iOneBoardNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZTDTCurrent.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZTDTCurrent.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZTDTCurrent.prototype.toObject = function() { 
    var tmp = {};

    tmp.iZTNum = this.iZTNum;
    tmp.iNoOneBNum = this.iNoOneBNum;
    tmp.iDTNum = this.iDTNum;
    tmp.iOneBoardNum = this.iOneBoardNum;
    
    return tmp;
}
FuPan.FZTDTCurrent.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iZTNum") || (this.iZTNum = json.iZTNum);
    !json.hasOwnProperty("iNoOneBNum") || (this.iNoOneBNum = json.iNoOneBNum);
    !json.hasOwnProperty("iDTNum") || (this.iDTNum = json.iDTNum);
    !json.hasOwnProperty("iOneBoardNum") || (this.iOneBoardNum = json.iOneBoardNum);
}
FuPan.FZTDTCurrent.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZTDTCurrent.new = function () {
    return new FuPan.FZTDTCurrent();
}
FuPan.FZTDTCurrent.create = function (is) {
    return FuPan.FZTDTCurrent._readFrom(is);
}
FuPan.FZTDTTrend = function() {
    this.vecTime = new TafStream.List(TafStream.Int32);
    this.vecData = new TafStream.List(FuPan.FZTDTCurrent);
    this._classname = "FuPan.FZTDTTrend";
};
FuPan.FZTDTTrend.prototype = new TafStream.JceStruct();
FuPan.FZTDTTrend._classname = "FuPan.FZTDTTrend";

FuPan.FZTDTTrend._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZTDTTrend._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZTDTTrend._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZTDTTrend();
    tmp.vecTime = is.readList(0, false, TafStream.List(TafStream.Int32));
    tmp.vecData = is.readList(1, false, TafStream.List(FuPan.FZTDTCurrent));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZTDTTrend.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecTime != undefined) {
        os.writeList(0, this.vecTime);
    }
    if (this.vecData != undefined) {
        os.writeList(1, this.vecData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZTDTTrend.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZTDTTrend.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZTDTTrend.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecTime = this.vecTime.toObject();
    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FZTDTTrend.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecTime") || (this.vecTime.readFromObject(json.vecTime));
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FZTDTTrend.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZTDTTrend.new = function () {
    return new FuPan.FZTDTTrend();
}
FuPan.FZTDTTrend.create = function (is) {
    return FuPan.FZTDTTrend._readFrom(is);
}
FuPan.FZTProfitCurrent = function() {
    this.dOneBProfit = 0;
    this.dChgBProfit = 0;
    this.dSHProfit = 0;
    this.dZTProfit = 0;
    this._classname = "FuPan.FZTProfitCurrent";
};
FuPan.FZTProfitCurrent.prototype = new TafStream.JceStruct();
FuPan.FZTProfitCurrent._classname = "FuPan.FZTProfitCurrent";

FuPan.FZTProfitCurrent._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZTProfitCurrent._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZTProfitCurrent._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZTProfitCurrent();
    tmp.dOneBProfit = is.readDouble(0, false, 0);
    tmp.dChgBProfit = is.readDouble(1, false, 0);
    tmp.dSHProfit = is.readDouble(2, false, 0);
    tmp.dZTProfit = is.readDouble(3, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZTProfitCurrent.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.dOneBProfit != undefined && this.dOneBProfit != 0) {
        os.writeDouble(0, this.dOneBProfit);
    }
    if (this.dChgBProfit != undefined && this.dChgBProfit != 0) {
        os.writeDouble(1, this.dChgBProfit);
    }
    if (this.dSHProfit != undefined && this.dSHProfit != 0) {
        os.writeDouble(2, this.dSHProfit);
    }
    if (this.dZTProfit != undefined && this.dZTProfit != 0) {
        os.writeDouble(3, this.dZTProfit);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZTProfitCurrent.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZTProfitCurrent.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZTProfitCurrent.prototype.toObject = function() { 
    var tmp = {};

    tmp.dOneBProfit = this.dOneBProfit;
    tmp.dChgBProfit = this.dChgBProfit;
    tmp.dSHProfit = this.dSHProfit;
    tmp.dZTProfit = this.dZTProfit;
    
    return tmp;
}
FuPan.FZTProfitCurrent.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("dOneBProfit") || (this.dOneBProfit = json.dOneBProfit);
    !json.hasOwnProperty("dChgBProfit") || (this.dChgBProfit = json.dChgBProfit);
    !json.hasOwnProperty("dSHProfit") || (this.dSHProfit = json.dSHProfit);
    !json.hasOwnProperty("dZTProfit") || (this.dZTProfit = json.dZTProfit);
}
FuPan.FZTProfitCurrent.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZTProfitCurrent.new = function () {
    return new FuPan.FZTProfitCurrent();
}
FuPan.FZTProfitCurrent.create = function (is) {
    return FuPan.FZTProfitCurrent._readFrom(is);
}
FuPan.FZTProfitTrend = function() {
    this.vecTime = new TafStream.List(TafStream.Int32);
    this.vecData = new TafStream.List(FuPan.FZTProfitCurrent);
    this._classname = "FuPan.FZTProfitTrend";
};
FuPan.FZTProfitTrend.prototype = new TafStream.JceStruct();
FuPan.FZTProfitTrend._classname = "FuPan.FZTProfitTrend";

FuPan.FZTProfitTrend._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZTProfitTrend._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZTProfitTrend._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZTProfitTrend();
    tmp.vecTime = is.readList(0, false, TafStream.List(TafStream.Int32));
    tmp.vecData = is.readList(1, false, TafStream.List(FuPan.FZTProfitCurrent));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZTProfitTrend.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecTime != undefined) {
        os.writeList(0, this.vecTime);
    }
    if (this.vecData != undefined) {
        os.writeList(1, this.vecData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZTProfitTrend.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZTProfitTrend.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZTProfitTrend.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecTime = this.vecTime.toObject();
    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FZTProfitTrend.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecTime") || (this.vecTime.readFromObject(json.vecTime));
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FZTProfitTrend.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZTProfitTrend.new = function () {
    return new FuPan.FZTProfitTrend();
}
FuPan.FZTProfitTrend.create = function (is) {
    return FuPan.FZTProfitTrend._readFrom(is);
}
FuPan.FChgProfitCurrent = function() {
    this.dVolProfit = 0;
    this.dChgProfit = 0;
    this.dSHRatio = 0;
    this._classname = "FuPan.FChgProfitCurrent";
};
FuPan.FChgProfitCurrent.prototype = new TafStream.JceStruct();
FuPan.FChgProfitCurrent._classname = "FuPan.FChgProfitCurrent";

FuPan.FChgProfitCurrent._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FChgProfitCurrent._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FChgProfitCurrent._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FChgProfitCurrent();
    tmp.dVolProfit = is.readDouble(0, false, 0);
    tmp.dChgProfit = is.readDouble(1, false, 0);
    tmp.dSHRatio = is.readDouble(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FChgProfitCurrent.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.dVolProfit != undefined && this.dVolProfit != 0) {
        os.writeDouble(0, this.dVolProfit);
    }
    if (this.dChgProfit != undefined && this.dChgProfit != 0) {
        os.writeDouble(1, this.dChgProfit);
    }
    if (this.dSHRatio != undefined && this.dSHRatio != 0) {
        os.writeDouble(2, this.dSHRatio);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FChgProfitCurrent.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FChgProfitCurrent.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FChgProfitCurrent.prototype.toObject = function() { 
    var tmp = {};

    tmp.dVolProfit = this.dVolProfit;
    tmp.dChgProfit = this.dChgProfit;
    tmp.dSHRatio = this.dSHRatio;
    
    return tmp;
}
FuPan.FChgProfitCurrent.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("dVolProfit") || (this.dVolProfit = json.dVolProfit);
    !json.hasOwnProperty("dChgProfit") || (this.dChgProfit = json.dChgProfit);
    !json.hasOwnProperty("dSHRatio") || (this.dSHRatio = json.dSHRatio);
}
FuPan.FChgProfitCurrent.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FChgProfitCurrent.new = function () {
    return new FuPan.FChgProfitCurrent();
}
FuPan.FChgProfitCurrent.create = function (is) {
    return FuPan.FChgProfitCurrent._readFrom(is);
}
FuPan.FChgProfitTrend = function() {
    this.vecTime = new TafStream.List(TafStream.Int32);
    this.vecData = new TafStream.List(FuPan.FChgProfitCurrent);
    this._classname = "FuPan.FChgProfitTrend";
};
FuPan.FChgProfitTrend.prototype = new TafStream.JceStruct();
FuPan.FChgProfitTrend._classname = "FuPan.FChgProfitTrend";

FuPan.FChgProfitTrend._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FChgProfitTrend._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FChgProfitTrend._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FChgProfitTrend();
    tmp.vecTime = is.readList(0, false, TafStream.List(TafStream.Int32));
    tmp.vecData = is.readList(1, false, TafStream.List(FuPan.FChgProfitCurrent));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FChgProfitTrend.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecTime != undefined) {
        os.writeList(0, this.vecTime);
    }
    if (this.vecData != undefined) {
        os.writeList(1, this.vecData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FChgProfitTrend.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FChgProfitTrend.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FChgProfitTrend.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecTime = this.vecTime.toObject();
    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FChgProfitTrend.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecTime") || (this.vecTime.readFromObject(json.vecTime));
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FChgProfitTrend.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FChgProfitTrend.new = function () {
    return new FuPan.FChgProfitTrend();
}
FuPan.FChgProfitTrend.create = function (is) {
    return FuPan.FChgProfitTrend._readFrom(is);
}
FuPan.FOpenBoardCurrent = function() {
    this.iZTNum = 0;
    this.iOpenZTNum = 0;
    this._classname = "FuPan.FOpenBoardCurrent";
};
FuPan.FOpenBoardCurrent.prototype = new TafStream.JceStruct();
FuPan.FOpenBoardCurrent._classname = "FuPan.FOpenBoardCurrent";

FuPan.FOpenBoardCurrent._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FOpenBoardCurrent._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FOpenBoardCurrent._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FOpenBoardCurrent();
    tmp.iZTNum = is.readInt32(0, false, 0);
    tmp.iOpenZTNum = is.readInt32(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FOpenBoardCurrent.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iZTNum != undefined && this.iZTNum != 0) {
        os.writeInt32(0, this.iZTNum);
    }
    if (this.iOpenZTNum != undefined && this.iOpenZTNum != 0) {
        os.writeInt32(1, this.iOpenZTNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FOpenBoardCurrent.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FOpenBoardCurrent.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FOpenBoardCurrent.prototype.toObject = function() { 
    var tmp = {};

    tmp.iZTNum = this.iZTNum;
    tmp.iOpenZTNum = this.iOpenZTNum;
    
    return tmp;
}
FuPan.FOpenBoardCurrent.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iZTNum") || (this.iZTNum = json.iZTNum);
    !json.hasOwnProperty("iOpenZTNum") || (this.iOpenZTNum = json.iOpenZTNum);
}
FuPan.FOpenBoardCurrent.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FOpenBoardCurrent.new = function () {
    return new FuPan.FOpenBoardCurrent();
}
FuPan.FOpenBoardCurrent.create = function (is) {
    return FuPan.FOpenBoardCurrent._readFrom(is);
}
FuPan.FOpenBoardTrend = function() {
    this.vecTime = new TafStream.List(TafStream.Int32);
    this.vecData = new TafStream.List(FuPan.FOpenBoardCurrent);
    this._classname = "FuPan.FOpenBoardTrend";
};
FuPan.FOpenBoardTrend.prototype = new TafStream.JceStruct();
FuPan.FOpenBoardTrend._classname = "FuPan.FOpenBoardTrend";

FuPan.FOpenBoardTrend._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FOpenBoardTrend._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FOpenBoardTrend._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FOpenBoardTrend();
    tmp.vecTime = is.readList(0, false, TafStream.List(TafStream.Int32));
    tmp.vecData = is.readList(1, false, TafStream.List(FuPan.FOpenBoardCurrent));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FOpenBoardTrend.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecTime != undefined) {
        os.writeList(0, this.vecTime);
    }
    if (this.vecData != undefined) {
        os.writeList(1, this.vecData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FOpenBoardTrend.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FOpenBoardTrend.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FOpenBoardTrend.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecTime = this.vecTime.toObject();
    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FOpenBoardTrend.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecTime") || (this.vecTime.readFromObject(json.vecTime));
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FOpenBoardTrend.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FOpenBoardTrend.new = function () {
    return new FuPan.FOpenBoardTrend();
}
FuPan.FOpenBoardTrend.create = function (is) {
    return FuPan.FOpenBoardTrend._readFrom(is);
}
FuPan.FConBoardCurrent = function() {
    this.iContinueBNum = 0;
    this.iNoOneBNum = 0;
    this._classname = "FuPan.FConBoardCurrent";
};
FuPan.FConBoardCurrent.prototype = new TafStream.JceStruct();
FuPan.FConBoardCurrent._classname = "FuPan.FConBoardCurrent";

FuPan.FConBoardCurrent._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FConBoardCurrent._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FConBoardCurrent._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FConBoardCurrent();
    tmp.iContinueBNum = is.readInt32(0, false, 0);
    tmp.iNoOneBNum = is.readInt32(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FConBoardCurrent.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iContinueBNum != undefined && this.iContinueBNum != 0) {
        os.writeInt32(0, this.iContinueBNum);
    }
    if (this.iNoOneBNum != undefined && this.iNoOneBNum != 0) {
        os.writeInt32(1, this.iNoOneBNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FConBoardCurrent.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FConBoardCurrent.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FConBoardCurrent.prototype.toObject = function() { 
    var tmp = {};

    tmp.iContinueBNum = this.iContinueBNum;
    tmp.iNoOneBNum = this.iNoOneBNum;
    
    return tmp;
}
FuPan.FConBoardCurrent.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iContinueBNum") || (this.iContinueBNum = json.iContinueBNum);
    !json.hasOwnProperty("iNoOneBNum") || (this.iNoOneBNum = json.iNoOneBNum);
}
FuPan.FConBoardCurrent.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FConBoardCurrent.new = function () {
    return new FuPan.FConBoardCurrent();
}
FuPan.FConBoardCurrent.create = function (is) {
    return FuPan.FConBoardCurrent._readFrom(is);
}
FuPan.FConBoardTrend = function() {
    this.vecTime = new TafStream.List(TafStream.Int32);
    this.vecData = new TafStream.List(FuPan.FConBoardCurrent);
    this._classname = "FuPan.FConBoardTrend";
};
FuPan.FConBoardTrend.prototype = new TafStream.JceStruct();
FuPan.FConBoardTrend._classname = "FuPan.FConBoardTrend";

FuPan.FConBoardTrend._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FConBoardTrend._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FConBoardTrend._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FConBoardTrend();
    tmp.vecTime = is.readList(0, false, TafStream.List(TafStream.Int32));
    tmp.vecData = is.readList(1, false, TafStream.List(FuPan.FConBoardCurrent));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FConBoardTrend.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecTime != undefined) {
        os.writeList(0, this.vecTime);
    }
    if (this.vecData != undefined) {
        os.writeList(1, this.vecData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FConBoardTrend.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FConBoardTrend.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FConBoardTrend.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecTime = this.vecTime.toObject();
    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FConBoardTrend.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecTime") || (this.vecTime.readFromObject(json.vecTime));
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FConBoardTrend.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FConBoardTrend.new = function () {
    return new FuPan.FConBoardTrend();
}
FuPan.FConBoardTrend.create = function (is) {
    return FuPan.FConBoardTrend._readFrom(is);
}
FuPan.FHitBoardCurrent = function() {
    this.dHit = 0;
    this._classname = "FuPan.FHitBoardCurrent";
};
FuPan.FHitBoardCurrent.prototype = new TafStream.JceStruct();
FuPan.FHitBoardCurrent._classname = "FuPan.FHitBoardCurrent";

FuPan.FHitBoardCurrent._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FHitBoardCurrent._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FHitBoardCurrent._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FHitBoardCurrent();
    tmp.dHit = is.readDouble(0, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FHitBoardCurrent.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.dHit != undefined && this.dHit != 0) {
        os.writeDouble(0, this.dHit);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FHitBoardCurrent.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FHitBoardCurrent.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FHitBoardCurrent.prototype.toObject = function() { 
    var tmp = {};

    tmp.dHit = this.dHit;
    
    return tmp;
}
FuPan.FHitBoardCurrent.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("dHit") || (this.dHit = json.dHit);
}
FuPan.FHitBoardCurrent.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FHitBoardCurrent.new = function () {
    return new FuPan.FHitBoardCurrent();
}
FuPan.FHitBoardCurrent.create = function (is) {
    return FuPan.FHitBoardCurrent._readFrom(is);
}
FuPan.FHitBoardTrend = function() {
    this.vecTime = new TafStream.List(TafStream.Int32);
    this.vecData = new TafStream.List(FuPan.FHitBoardCurrent);
    this._classname = "FuPan.FHitBoardTrend";
};
FuPan.FHitBoardTrend.prototype = new TafStream.JceStruct();
FuPan.FHitBoardTrend._classname = "FuPan.FHitBoardTrend";

FuPan.FHitBoardTrend._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FHitBoardTrend._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FHitBoardTrend._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FHitBoardTrend();
    tmp.vecTime = is.readList(0, false, TafStream.List(TafStream.Int32));
    tmp.vecData = is.readList(1, false, TafStream.List(FuPan.FHitBoardCurrent));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FHitBoardTrend.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecTime != undefined) {
        os.writeList(0, this.vecTime);
    }
    if (this.vecData != undefined) {
        os.writeList(1, this.vecData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FHitBoardTrend.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FHitBoardTrend.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FHitBoardTrend.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecTime = this.vecTime.toObject();
    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FHitBoardTrend.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecTime") || (this.vecTime.readFromObject(json.vecTime));
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FHitBoardTrend.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FHitBoardTrend.new = function () {
    return new FuPan.FHitBoardTrend();
}
FuPan.FHitBoardTrend.create = function (is) {
    return FuPan.FHitBoardTrend._readFrom(is);
}
FuPan.FMarketVolCurrent = function() {
    this.dSHAmount = 0;
    this.dSZAmount = 0;
    this._classname = "FuPan.FMarketVolCurrent";
};
FuPan.FMarketVolCurrent.prototype = new TafStream.JceStruct();
FuPan.FMarketVolCurrent._classname = "FuPan.FMarketVolCurrent";

FuPan.FMarketVolCurrent._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FMarketVolCurrent._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FMarketVolCurrent._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FMarketVolCurrent();
    tmp.dSHAmount = is.readDouble(0, true, 0);
    tmp.dSZAmount = is.readDouble(1, true, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FMarketVolCurrent.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeDouble(0, this.dSHAmount);
    os.writeDouble(1, this.dSZAmount);
    os.resumePrecision && os.resumePrecision();
};
FuPan.FMarketVolCurrent.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FMarketVolCurrent.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FMarketVolCurrent.prototype.toObject = function() { 
    var tmp = {};

    tmp.dSHAmount = this.dSHAmount;
    tmp.dSZAmount = this.dSZAmount;
    
    return tmp;
}
FuPan.FMarketVolCurrent.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("dSHAmount") || (this.dSHAmount = json.dSHAmount);
    !json.hasOwnProperty("dSZAmount") || (this.dSZAmount = json.dSZAmount);
}
FuPan.FMarketVolCurrent.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FMarketVolCurrent.new = function () {
    return new FuPan.FMarketVolCurrent();
}
FuPan.FMarketVolCurrent.create = function (is) {
    return FuPan.FMarketVolCurrent._readFrom(is);
}
FuPan.FMarketVolTrend = function() {
    this.vecTime = new TafStream.List(TafStream.Int32);
    this.vecData = new TafStream.List(FuPan.FMarketVolCurrent);
    this._classname = "FuPan.FMarketVolTrend";
};
FuPan.FMarketVolTrend.prototype = new TafStream.JceStruct();
FuPan.FMarketVolTrend._classname = "FuPan.FMarketVolTrend";

FuPan.FMarketVolTrend._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FMarketVolTrend._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FMarketVolTrend._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FMarketVolTrend();
    tmp.vecTime = is.readList(0, true, TafStream.List(TafStream.Int32));
    tmp.vecData = is.readList(1, true, TafStream.List(FuPan.FMarketVolCurrent));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FMarketVolTrend.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeList(0, this.vecTime);
    os.writeList(1, this.vecData);
    os.resumePrecision && os.resumePrecision();
};
FuPan.FMarketVolTrend.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FMarketVolTrend.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FMarketVolTrend.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecTime = this.vecTime.toObject();
    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FMarketVolTrend.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecTime") || (this.vecTime.readFromObject(json.vecTime));
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FMarketVolTrend.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FMarketVolTrend.new = function () {
    return new FuPan.FMarketVolTrend();
}
FuPan.FMarketVolTrend.create = function (is) {
    return FuPan.FMarketVolTrend._readFrom(is);
}
FuPan.FMarketHotCurrent = function() {
    this.dPreZTWinRate = 0;
    this.dZDRate = 0;
    this.dLBRate = 0;
    this.dWeight1 = 0;
    this.dWeight2 = 0;
    this.dWeight3 = 0;
    this.dMarketHot = 0;
    this.nPreZTNum = 0;
    this.nCurrZNum = 0;
    this._classname = "FuPan.FMarketHotCurrent";
};
FuPan.FMarketHotCurrent.prototype = new TafStream.JceStruct();
FuPan.FMarketHotCurrent._classname = "FuPan.FMarketHotCurrent";

FuPan.FMarketHotCurrent._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FMarketHotCurrent._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FMarketHotCurrent._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FMarketHotCurrent();
    tmp.dPreZTWinRate = is.readDouble(0, false, 0);
    tmp.dZDRate = is.readDouble(1, false, 0);
    tmp.dLBRate = is.readDouble(2, false, 0);
    tmp.dWeight1 = is.readDouble(3, false, 0);
    tmp.dWeight2 = is.readDouble(4, false, 0);
    tmp.dWeight3 = is.readDouble(5, false, 0);
    tmp.dMarketHot = is.readDouble(6, false, 0);
    tmp.nPreZTNum = is.readInt32(7, false, 0);
    tmp.nCurrZNum = is.readInt32(8, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FMarketHotCurrent.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.dPreZTWinRate != undefined && this.dPreZTWinRate != 0) {
        os.writeDouble(0, this.dPreZTWinRate);
    }
    if (this.dZDRate != undefined && this.dZDRate != 0) {
        os.writeDouble(1, this.dZDRate);
    }
    if (this.dLBRate != undefined && this.dLBRate != 0) {
        os.writeDouble(2, this.dLBRate);
    }
    if (this.dWeight1 != undefined && this.dWeight1 != 0) {
        os.writeDouble(3, this.dWeight1);
    }
    if (this.dWeight2 != undefined && this.dWeight2 != 0) {
        os.writeDouble(4, this.dWeight2);
    }
    if (this.dWeight3 != undefined && this.dWeight3 != 0) {
        os.writeDouble(5, this.dWeight3);
    }
    if (this.dMarketHot != undefined && this.dMarketHot != 0) {
        os.writeDouble(6, this.dMarketHot);
    }
    if (this.nPreZTNum != undefined && this.nPreZTNum != 0) {
        os.writeInt32(7, this.nPreZTNum);
    }
    if (this.nCurrZNum != undefined && this.nCurrZNum != 0) {
        os.writeInt32(8, this.nCurrZNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FMarketHotCurrent.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FMarketHotCurrent.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FMarketHotCurrent.prototype.toObject = function() { 
    var tmp = {};

    tmp.dPreZTWinRate = this.dPreZTWinRate;
    tmp.dZDRate = this.dZDRate;
    tmp.dLBRate = this.dLBRate;
    tmp.dWeight1 = this.dWeight1;
    tmp.dWeight2 = this.dWeight2;
    tmp.dWeight3 = this.dWeight3;
    tmp.dMarketHot = this.dMarketHot;
    tmp.nPreZTNum = this.nPreZTNum;
    tmp.nCurrZNum = this.nCurrZNum;
    
    return tmp;
}
FuPan.FMarketHotCurrent.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("dPreZTWinRate") || (this.dPreZTWinRate = json.dPreZTWinRate);
    !json.hasOwnProperty("dZDRate") || (this.dZDRate = json.dZDRate);
    !json.hasOwnProperty("dLBRate") || (this.dLBRate = json.dLBRate);
    !json.hasOwnProperty("dWeight1") || (this.dWeight1 = json.dWeight1);
    !json.hasOwnProperty("dWeight2") || (this.dWeight2 = json.dWeight2);
    !json.hasOwnProperty("dWeight3") || (this.dWeight3 = json.dWeight3);
    !json.hasOwnProperty("dMarketHot") || (this.dMarketHot = json.dMarketHot);
    !json.hasOwnProperty("nPreZTNum") || (this.nPreZTNum = json.nPreZTNum);
    !json.hasOwnProperty("nCurrZNum") || (this.nCurrZNum = json.nCurrZNum);
}
FuPan.FMarketHotCurrent.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FMarketHotCurrent.new = function () {
    return new FuPan.FMarketHotCurrent();
}
FuPan.FMarketHotCurrent.create = function (is) {
    return FuPan.FMarketHotCurrent._readFrom(is);
}
FuPan.FMarketHotTrend = function() {
    this.vecTime = new TafStream.List(TafStream.Int32);
    this.vecData = new TafStream.List(FuPan.FMarketHotCurrent);
    this._classname = "FuPan.FMarketHotTrend";
};
FuPan.FMarketHotTrend.prototype = new TafStream.JceStruct();
FuPan.FMarketHotTrend._classname = "FuPan.FMarketHotTrend";

FuPan.FMarketHotTrend._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FMarketHotTrend._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FMarketHotTrend._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FMarketHotTrend();
    tmp.vecTime = is.readList(0, true, TafStream.List(TafStream.Int32));
    tmp.vecData = is.readList(1, true, TafStream.List(FuPan.FMarketHotCurrent));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FMarketHotTrend.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeList(0, this.vecTime);
    os.writeList(1, this.vecData);
    os.resumePrecision && os.resumePrecision();
};
FuPan.FMarketHotTrend.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FMarketHotTrend.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FMarketHotTrend.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecTime = this.vecTime.toObject();
    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FMarketHotTrend.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecTime") || (this.vecTime.readFromObject(json.vecTime));
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FMarketHotTrend.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FMarketHotTrend.new = function () {
    return new FuPan.FMarketHotTrend();
}
FuPan.FMarketHotTrend.create = function (is) {
    return FuPan.FMarketHotTrend._readFrom(is);
}
FuPan.FPositionRateCurrent = function() {
    this.dRate = 0;
    this.nAttackWaveNum = 0;
    this.nTurnRoundWaveNum = 0;
    this._classname = "FuPan.FPositionRateCurrent";
};
FuPan.FPositionRateCurrent.prototype = new TafStream.JceStruct();
FuPan.FPositionRateCurrent._classname = "FuPan.FPositionRateCurrent";

FuPan.FPositionRateCurrent._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FPositionRateCurrent._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FPositionRateCurrent._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FPositionRateCurrent();
    tmp.dRate = is.readDouble(0, false, 0);
    tmp.nAttackWaveNum = is.readInt32(1, false, 0);
    tmp.nTurnRoundWaveNum = is.readInt32(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FPositionRateCurrent.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.dRate != undefined && this.dRate != 0) {
        os.writeDouble(0, this.dRate);
    }
    if (this.nAttackWaveNum != undefined && this.nAttackWaveNum != 0) {
        os.writeInt32(1, this.nAttackWaveNum);
    }
    if (this.nTurnRoundWaveNum != undefined && this.nTurnRoundWaveNum != 0) {
        os.writeInt32(2, this.nTurnRoundWaveNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FPositionRateCurrent.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FPositionRateCurrent.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FPositionRateCurrent.prototype.toObject = function() { 
    var tmp = {};

    tmp.dRate = this.dRate;
    tmp.nAttackWaveNum = this.nAttackWaveNum;
    tmp.nTurnRoundWaveNum = this.nTurnRoundWaveNum;
    
    return tmp;
}
FuPan.FPositionRateCurrent.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("dRate") || (this.dRate = json.dRate);
    !json.hasOwnProperty("nAttackWaveNum") || (this.nAttackWaveNum = json.nAttackWaveNum);
    !json.hasOwnProperty("nTurnRoundWaveNum") || (this.nTurnRoundWaveNum = json.nTurnRoundWaveNum);
}
FuPan.FPositionRateCurrent.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FPositionRateCurrent.new = function () {
    return new FuPan.FPositionRateCurrent();
}
FuPan.FPositionRateCurrent.create = function (is) {
    return FuPan.FPositionRateCurrent._readFrom(is);
}
FuPan.FPositionRateTrend = function() {
    this.vecTime = new TafStream.List(TafStream.Int32);
    this.vecData = new TafStream.List(FuPan.FPositionRateCurrent);
    this._classname = "FuPan.FPositionRateTrend";
};
FuPan.FPositionRateTrend.prototype = new TafStream.JceStruct();
FuPan.FPositionRateTrend._classname = "FuPan.FPositionRateTrend";

FuPan.FPositionRateTrend._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FPositionRateTrend._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FPositionRateTrend._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FPositionRateTrend();
    tmp.vecTime = is.readList(0, true, TafStream.List(TafStream.Int32));
    tmp.vecData = is.readList(1, true, TafStream.List(FuPan.FPositionRateCurrent));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FPositionRateTrend.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeList(0, this.vecTime);
    os.writeList(1, this.vecData);
    os.resumePrecision && os.resumePrecision();
};
FuPan.FPositionRateTrend.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FPositionRateTrend.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FPositionRateTrend.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecTime = this.vecTime.toObject();
    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FPositionRateTrend.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecTime") || (this.vecTime.readFromObject(json.vecTime));
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FPositionRateTrend.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FPositionRateTrend.new = function () {
    return new FuPan.FPositionRateTrend();
}
FuPan.FPositionRateTrend.create = function (is) {
    return FuPan.FPositionRateTrend._readFrom(is);
}
FuPan.FMarketTrendData = function() {
    this.stIndex = new FuPan.FIndexTrend();
    this.stZD = new FuPan.FZDTrend();
    this.stZDFenBu = new FuPan.FZDFenBuTrend();
    this.stZTDT = new FuPan.FZTDTTrend();
    this.stZTProfit = new FuPan.FZTProfitTrend();
    this.stChgProfit = new FuPan.FChgProfitTrend();
    this.stOpenBoard = new FuPan.FOpenBoardTrend();
    this.stConBoard = new FuPan.FConBoardTrend();
    this.stHitBoard = new FuPan.FHitBoardTrend();
    this.stMarketVol = new FuPan.FMarketVolTrend();
    this.stMarketHot = new FuPan.FMarketHotTrend();
    this.stPositionRate = new FuPan.FPositionRateTrend();
    this.iDate = 0;
    this.stZDFenBuNew = new FuPan.FZDFenBuNewTrend();
    this._classname = "FuPan.FMarketTrendData";
};
FuPan.FMarketTrendData.prototype = new TafStream.JceStruct();
FuPan.FMarketTrendData._classname = "FuPan.FMarketTrendData";

FuPan.FMarketTrendData._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FMarketTrendData._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FMarketTrendData._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FMarketTrendData();
    tmp.stIndex = is.readStruct(0, false, FuPan.FIndexTrend);
    tmp.stZD = is.readStruct(1, false, FuPan.FZDTrend);
    tmp.stZDFenBu = is.readStruct(2, false, FuPan.FZDFenBuTrend);
    tmp.stZTDT = is.readStruct(3, false, FuPan.FZTDTTrend);
    tmp.stZTProfit = is.readStruct(4, false, FuPan.FZTProfitTrend);
    tmp.stChgProfit = is.readStruct(5, false, FuPan.FChgProfitTrend);
    tmp.stOpenBoard = is.readStruct(6, false, FuPan.FOpenBoardTrend);
    tmp.stConBoard = is.readStruct(7, false, FuPan.FConBoardTrend);
    tmp.stHitBoard = is.readStruct(8, false, FuPan.FHitBoardTrend);
    tmp.stMarketVol = is.readStruct(9, false, FuPan.FMarketVolTrend);
    tmp.stMarketHot = is.readStruct(10, false, FuPan.FMarketHotTrend);
    tmp.stPositionRate = is.readStruct(11, false, FuPan.FPositionRateTrend);
    tmp.iDate = is.readInt32(12, false, 0);
    tmp.stZDFenBuNew = is.readStruct(13, false, FuPan.FZDFenBuNewTrend);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FMarketTrendData.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stIndex);
    os.writeStruct(1, this.stZD);
    os.writeStruct(2, this.stZDFenBu);
    os.writeStruct(3, this.stZTDT);
    os.writeStruct(4, this.stZTProfit);
    os.writeStruct(5, this.stChgProfit);
    os.writeStruct(6, this.stOpenBoard);
    os.writeStruct(7, this.stConBoard);
    os.writeStruct(8, this.stHitBoard);
    os.writeStruct(9, this.stMarketVol);
    os.writeStruct(10, this.stMarketHot);
    os.writeStruct(11, this.stPositionRate);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(12, this.iDate);
    }
    os.writeStruct(13, this.stZDFenBuNew);
    os.resumePrecision && os.resumePrecision();
};
FuPan.FMarketTrendData.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FMarketTrendData.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FMarketTrendData.prototype.toObject = function() { 
    var tmp = {};

    tmp.stIndex = this.stIndex.toObject();
    tmp.stZD = this.stZD.toObject();
    tmp.stZDFenBu = this.stZDFenBu.toObject();
    tmp.stZTDT = this.stZTDT.toObject();
    tmp.stZTProfit = this.stZTProfit.toObject();
    tmp.stChgProfit = this.stChgProfit.toObject();
    tmp.stOpenBoard = this.stOpenBoard.toObject();
    tmp.stConBoard = this.stConBoard.toObject();
    tmp.stHitBoard = this.stHitBoard.toObject();
    tmp.stMarketVol = this.stMarketVol.toObject();
    tmp.stMarketHot = this.stMarketHot.toObject();
    tmp.stPositionRate = this.stPositionRate.toObject();
    tmp.iDate = this.iDate;
    tmp.stZDFenBuNew = this.stZDFenBuNew.toObject();
    
    return tmp;
}
FuPan.FMarketTrendData.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stIndex") || (this.stIndex.readFromObject(json.stIndex));
    !json.hasOwnProperty("stZD") || (this.stZD.readFromObject(json.stZD));
    !json.hasOwnProperty("stZDFenBu") || (this.stZDFenBu.readFromObject(json.stZDFenBu));
    !json.hasOwnProperty("stZTDT") || (this.stZTDT.readFromObject(json.stZTDT));
    !json.hasOwnProperty("stZTProfit") || (this.stZTProfit.readFromObject(json.stZTProfit));
    !json.hasOwnProperty("stChgProfit") || (this.stChgProfit.readFromObject(json.stChgProfit));
    !json.hasOwnProperty("stOpenBoard") || (this.stOpenBoard.readFromObject(json.stOpenBoard));
    !json.hasOwnProperty("stConBoard") || (this.stConBoard.readFromObject(json.stConBoard));
    !json.hasOwnProperty("stHitBoard") || (this.stHitBoard.readFromObject(json.stHitBoard));
    !json.hasOwnProperty("stMarketVol") || (this.stMarketVol.readFromObject(json.stMarketVol));
    !json.hasOwnProperty("stMarketHot") || (this.stMarketHot.readFromObject(json.stMarketHot));
    !json.hasOwnProperty("stPositionRate") || (this.stPositionRate.readFromObject(json.stPositionRate));
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("stZDFenBuNew") || (this.stZDFenBuNew.readFromObject(json.stZDFenBuNew));
}
FuPan.FMarketTrendData.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FMarketTrendData.new = function () {
    return new FuPan.FMarketTrendData();
}
FuPan.FMarketTrendData.create = function (is) {
    return FuPan.FMarketTrendData._readFrom(is);
}
FuPan.FBlockStockZT = function() {
    this.iMarket = 0;
    this.sCode = "";
    this.iZTTime = 0;
    this.eType = _TAF_MODULE_A_.FuPan.E_STOCK_ZT_TYPE.E_STOCK_ZT_UNKNOWN;
    this.iConNum = 0;
    this.lLastZTVol = 0;
    this.dLastZTRatio = 0;
    this.iLastZTTime = 0;
    this.dLTValue = 0;
    this.iOpenNum = 0;
    this._classname = "FuPan.FBlockStockZT";
};
FuPan.FBlockStockZT.prototype = new TafStream.JceStruct();
FuPan.FBlockStockZT._classname = "FuPan.FBlockStockZT";

FuPan.FBlockStockZT._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockStockZT._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockStockZT._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockStockZT();
    tmp.iMarket = is.readInt32(0, false, 0);
    tmp.sCode = is.readString(1, false, "");
    tmp.iZTTime = is.readInt32(2, false, 0);
    tmp.eType = is.readInt32(3, false, _TAF_MODULE_A_.FuPan.E_STOCK_ZT_TYPE.E_STOCK_ZT_UNKNOWN);
    tmp.iConNum = is.readInt32(4, false, 0);
    tmp.lLastZTVol = is.readInt64(5, false, 0);
    tmp.dLastZTRatio = is.readDouble(6, false, 0);
    tmp.iLastZTTime = is.readInt32(7, false, 0);
    tmp.dLTValue = is.readDouble(8, false, 0);
    tmp.iOpenNum = is.readInt32(9, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockStockZT.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iMarket != undefined && this.iMarket != 0) {
        os.writeInt32(0, this.iMarket);
    }
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    if (this.iZTTime != undefined && this.iZTTime != 0) {
        os.writeInt32(2, this.iZTTime);
    }
    if (this.eType != undefined) {
        os.writeInt32(3, this.eType);
    }
    if (this.iConNum != undefined && this.iConNum != 0) {
        os.writeInt32(4, this.iConNum);
    }
    if (this.lLastZTVol != undefined && this.lLastZTVol != 0) {
        os.writeInt64(5, this.lLastZTVol);
    }
    if (this.dLastZTRatio != undefined && this.dLastZTRatio != 0) {
        os.writeDouble(6, this.dLastZTRatio);
    }
    if (this.iLastZTTime != undefined && this.iLastZTTime != 0) {
        os.writeInt32(7, this.iLastZTTime);
    }
    if (this.dLTValue != undefined && this.dLTValue != 0) {
        os.writeDouble(8, this.dLTValue);
    }
    if (this.iOpenNum != undefined && this.iOpenNum != 0) {
        os.writeInt32(9, this.iOpenNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockStockZT.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockStockZT.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockStockZT.prototype.toObject = function() { 
    var tmp = {};

    tmp.iMarket = this.iMarket;
    tmp.sCode = this.sCode;
    tmp.iZTTime = this.iZTTime;
    tmp.eType = this.eType;
    tmp.iConNum = this.iConNum;
    tmp.lLastZTVol = this.lLastZTVol;
    tmp.dLastZTRatio = this.dLastZTRatio;
    tmp.iLastZTTime = this.iLastZTTime;
    tmp.dLTValue = this.dLTValue;
    tmp.iOpenNum = this.iOpenNum;
    
    return tmp;
}
FuPan.FBlockStockZT.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iMarket") || (this.iMarket = json.iMarket);
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("iZTTime") || (this.iZTTime = json.iZTTime);
    !json.hasOwnProperty("eType") || (this.eType = json.eType);
    !json.hasOwnProperty("iConNum") || (this.iConNum = json.iConNum);
    !json.hasOwnProperty("lLastZTVol") || (this.lLastZTVol = json.lLastZTVol);
    !json.hasOwnProperty("dLastZTRatio") || (this.dLastZTRatio = json.dLastZTRatio);
    !json.hasOwnProperty("iLastZTTime") || (this.iLastZTTime = json.iLastZTTime);
    !json.hasOwnProperty("dLTValue") || (this.dLTValue = json.dLTValue);
    !json.hasOwnProperty("iOpenNum") || (this.iOpenNum = json.iOpenNum);
}
FuPan.FBlockStockZT.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockStockZT.new = function () {
    return new FuPan.FBlockStockZT();
}
FuPan.FBlockStockZT.create = function (is) {
    return FuPan.FBlockStockZT._readFrom(is);
}
FuPan.FBlockStockUnZT = function() {
    this.iMarket = 0;
    this.sCode = "";
    this.dUpSpeed = 0;
    this.dTurnOver = 0;
    this.dLTValue = 0;
    this.dChgRatio = 0;
    this._classname = "FuPan.FBlockStockUnZT";
};
FuPan.FBlockStockUnZT.prototype = new TafStream.JceStruct();
FuPan.FBlockStockUnZT._classname = "FuPan.FBlockStockUnZT";

FuPan.FBlockStockUnZT._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockStockUnZT._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockStockUnZT._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockStockUnZT();
    tmp.iMarket = is.readInt32(0, false, 0);
    tmp.sCode = is.readString(1, false, "");
    tmp.dUpSpeed = is.readDouble(2, false, 0);
    tmp.dTurnOver = is.readDouble(3, false, 0);
    tmp.dLTValue = is.readDouble(4, false, 0);
    tmp.dChgRatio = is.readDouble(5, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockStockUnZT.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iMarket != undefined && this.iMarket != 0) {
        os.writeInt32(0, this.iMarket);
    }
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    if (this.dUpSpeed != undefined && this.dUpSpeed != 0) {
        os.writeDouble(2, this.dUpSpeed);
    }
    if (this.dTurnOver != undefined && this.dTurnOver != 0) {
        os.writeDouble(3, this.dTurnOver);
    }
    if (this.dLTValue != undefined && this.dLTValue != 0) {
        os.writeDouble(4, this.dLTValue);
    }
    if (this.dChgRatio != undefined && this.dChgRatio != 0) {
        os.writeDouble(5, this.dChgRatio);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockStockUnZT.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockStockUnZT.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockStockUnZT.prototype.toObject = function() { 
    var tmp = {};

    tmp.iMarket = this.iMarket;
    tmp.sCode = this.sCode;
    tmp.dUpSpeed = this.dUpSpeed;
    tmp.dTurnOver = this.dTurnOver;
    tmp.dLTValue = this.dLTValue;
    tmp.dChgRatio = this.dChgRatio;
    
    return tmp;
}
FuPan.FBlockStockUnZT.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iMarket") || (this.iMarket = json.iMarket);
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("dUpSpeed") || (this.dUpSpeed = json.dUpSpeed);
    !json.hasOwnProperty("dTurnOver") || (this.dTurnOver = json.dTurnOver);
    !json.hasOwnProperty("dLTValue") || (this.dLTValue = json.dLTValue);
    !json.hasOwnProperty("dChgRatio") || (this.dChgRatio = json.dChgRatio);
}
FuPan.FBlockStockUnZT.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockStockUnZT.new = function () {
    return new FuPan.FBlockStockUnZT();
}
FuPan.FBlockStockUnZT.create = function (is) {
    return FuPan.FBlockStockUnZT._readFrom(is);
}
FuPan.FStockZTMap = function() {
    this.stockMap = new TafStream.Map(TafStream.String, FuPan.FBlockStockZT);
    this._classname = "FuPan.FStockZTMap";
};
FuPan.FStockZTMap.prototype = new TafStream.JceStruct();
FuPan.FStockZTMap._classname = "FuPan.FStockZTMap";

FuPan.FStockZTMap._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FStockZTMap._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FStockZTMap._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FStockZTMap();
    tmp.stockMap = is.readMap(0, false, TafStream.Map(TafStream.String, FuPan.FBlockStockZT));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FStockZTMap.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.stockMap != undefined) {
        os.writeMap(0, this.stockMap);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FStockZTMap.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FStockZTMap.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FStockZTMap.prototype.toObject = function() { 
    var tmp = {};

    tmp.stockMap = this.stockMap.toObject();
    
    return tmp;
}
FuPan.FStockZTMap.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stockMap") || (this.stockMap.readFromObject(json.stockMap));
}
FuPan.FStockZTMap.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FStockZTMap.new = function () {
    return new FuPan.FStockZTMap();
}
FuPan.FStockZTMap.create = function (is) {
    return FuPan.FStockZTMap._readFrom(is);
}
FuPan.FStockUnZTMap = function() {
    this.stockMap = new TafStream.Map(TafStream.String, FuPan.FBlockStockUnZT);
    this._classname = "FuPan.FStockUnZTMap";
};
FuPan.FStockUnZTMap.prototype = new TafStream.JceStruct();
FuPan.FStockUnZTMap._classname = "FuPan.FStockUnZTMap";

FuPan.FStockUnZTMap._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FStockUnZTMap._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FStockUnZTMap._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FStockUnZTMap();
    tmp.stockMap = is.readMap(0, false, TafStream.Map(TafStream.String, FuPan.FBlockStockUnZT));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FStockUnZTMap.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.stockMap != undefined) {
        os.writeMap(0, this.stockMap);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FStockUnZTMap.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FStockUnZTMap.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FStockUnZTMap.prototype.toObject = function() { 
    var tmp = {};

    tmp.stockMap = this.stockMap.toObject();
    
    return tmp;
}
FuPan.FStockUnZTMap.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stockMap") || (this.stockMap.readFromObject(json.stockMap));
}
FuPan.FStockUnZTMap.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FStockUnZTMap.new = function () {
    return new FuPan.FStockUnZTMap();
}
FuPan.FStockUnZTMap.create = function (is) {
    return FuPan.FStockUnZTMap._readFrom(is);
}
FuPan.FBlockZTData = function() {
    this.sCode = "";
    this.iMarket = 0;
    this.iUpNum = 0;
    this.dUpRatio = 0;
    this.iZTNum = 0;
    this.vecZTStock = new TafStream.List(FuPan.FBlockStockZT);
    this.vecUnZTStock = new TafStream.List(FuPan.FBlockStockUnZT);
    this.iTotalNum = 0;
    this._classname = "FuPan.FBlockZTData";
};
FuPan.FBlockZTData.prototype = new TafStream.JceStruct();
FuPan.FBlockZTData._classname = "FuPan.FBlockZTData";

FuPan.FBlockZTData._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockZTData._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockZTData._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockZTData();
    tmp.sCode = is.readString(0, false, "");
    tmp.iMarket = is.readInt32(1, false, 0);
    tmp.iUpNum = is.readInt32(2, false, 0);
    tmp.dUpRatio = is.readDouble(3, false, 0);
    tmp.iZTNum = is.readInt32(4, false, 0);
    tmp.vecZTStock = is.readList(5, false, TafStream.List(FuPan.FBlockStockZT));
    tmp.vecUnZTStock = is.readList(6, false, TafStream.List(FuPan.FBlockStockUnZT));
    tmp.iTotalNum = is.readInt32(7, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockZTData.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(0, this.sCode);
    }
    if (this.iMarket != undefined && this.iMarket != 0) {
        os.writeInt32(1, this.iMarket);
    }
    if (this.iUpNum != undefined && this.iUpNum != 0) {
        os.writeInt32(2, this.iUpNum);
    }
    if (this.dUpRatio != undefined && this.dUpRatio != 0) {
        os.writeDouble(3, this.dUpRatio);
    }
    if (this.iZTNum != undefined && this.iZTNum != 0) {
        os.writeInt32(4, this.iZTNum);
    }
    if (this.vecZTStock != undefined) {
        os.writeList(5, this.vecZTStock);
    }
    if (this.vecUnZTStock != undefined) {
        os.writeList(6, this.vecUnZTStock);
    }
    if (this.iTotalNum != undefined && this.iTotalNum != 0) {
        os.writeInt32(7, this.iTotalNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockZTData.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockZTData.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockZTData.prototype.toObject = function() { 
    var tmp = {};

    tmp.sCode = this.sCode;
    tmp.iMarket = this.iMarket;
    tmp.iUpNum = this.iUpNum;
    tmp.dUpRatio = this.dUpRatio;
    tmp.iZTNum = this.iZTNum;
    tmp.vecZTStock = this.vecZTStock.toObject();
    tmp.vecUnZTStock = this.vecUnZTStock.toObject();
    tmp.iTotalNum = this.iTotalNum;
    
    return tmp;
}
FuPan.FBlockZTData.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("iMarket") || (this.iMarket = json.iMarket);
    !json.hasOwnProperty("iUpNum") || (this.iUpNum = json.iUpNum);
    !json.hasOwnProperty("dUpRatio") || (this.dUpRatio = json.dUpRatio);
    !json.hasOwnProperty("iZTNum") || (this.iZTNum = json.iZTNum);
    !json.hasOwnProperty("vecZTStock") || (this.vecZTStock.readFromObject(json.vecZTStock));
    !json.hasOwnProperty("vecUnZTStock") || (this.vecUnZTStock.readFromObject(json.vecUnZTStock));
    !json.hasOwnProperty("iTotalNum") || (this.iTotalNum = json.iTotalNum);
}
FuPan.FBlockZTData.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockZTData.new = function () {
    return new FuPan.FBlockZTData();
}
FuPan.FBlockZTData.create = function (is) {
    return FuPan.FBlockZTData._readFrom(is);
}
FuPan.FBlockTimeStock = function() {
    this.iMarket = 0;
    this.sCode = "";
    this.iTime = 0;
    this.eType = _TAF_MODULE_A_.FuPan.E_STOCK_ZT_TYPE.E_STOCK_ZT_UNKNOWN;
    this.iConNum = 0;
    this._classname = "FuPan.FBlockTimeStock";
};
FuPan.FBlockTimeStock.prototype = new TafStream.JceStruct();
FuPan.FBlockTimeStock._classname = "FuPan.FBlockTimeStock";

FuPan.FBlockTimeStock._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockTimeStock._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockTimeStock._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockTimeStock();
    tmp.iMarket = is.readInt32(0, false, 0);
    tmp.sCode = is.readString(1, false, "");
    tmp.iTime = is.readInt32(2, false, 0);
    tmp.eType = is.readInt32(3, false, _TAF_MODULE_A_.FuPan.E_STOCK_ZT_TYPE.E_STOCK_ZT_UNKNOWN);
    tmp.iConNum = is.readInt32(4, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockTimeStock.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iMarket != undefined && this.iMarket != 0) {
        os.writeInt32(0, this.iMarket);
    }
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    if (this.iTime != undefined && this.iTime != 0) {
        os.writeInt32(2, this.iTime);
    }
    if (this.eType != undefined) {
        os.writeInt32(3, this.eType);
    }
    if (this.iConNum != undefined && this.iConNum != 0) {
        os.writeInt32(4, this.iConNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockTimeStock.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockTimeStock.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockTimeStock.prototype.toObject = function() { 
    var tmp = {};

    tmp.iMarket = this.iMarket;
    tmp.sCode = this.sCode;
    tmp.iTime = this.iTime;
    tmp.eType = this.eType;
    tmp.iConNum = this.iConNum;
    
    return tmp;
}
FuPan.FBlockTimeStock.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iMarket") || (this.iMarket = json.iMarket);
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("iTime") || (this.iTime = json.iTime);
    !json.hasOwnProperty("eType") || (this.eType = json.eType);
    !json.hasOwnProperty("iConNum") || (this.iConNum = json.iConNum);
}
FuPan.FBlockTimeStock.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockTimeStock.new = function () {
    return new FuPan.FBlockTimeStock();
}
FuPan.FBlockTimeStock.create = function (is) {
    return FuPan.FBlockTimeStock._readFrom(is);
}
FuPan.FBlockTimeData = function() {
    this.iDate = 0;
    this.iZTNum = 0;
    this.vecStock = new TafStream.List(FuPan.FBlockTimeStock);
    this._classname = "FuPan.FBlockTimeData";
};
FuPan.FBlockTimeData.prototype = new TafStream.JceStruct();
FuPan.FBlockTimeData._classname = "FuPan.FBlockTimeData";

FuPan.FBlockTimeData._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockTimeData._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockTimeData._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockTimeData();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.iZTNum = is.readInt32(1, false, 0);
    tmp.vecStock = is.readList(2, false, TafStream.List(FuPan.FBlockTimeStock));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockTimeData.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    if (this.iZTNum != undefined && this.iZTNum != 0) {
        os.writeInt32(1, this.iZTNum);
    }
    if (this.vecStock != undefined) {
        os.writeList(2, this.vecStock);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockTimeData.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockTimeData.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockTimeData.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.iZTNum = this.iZTNum;
    tmp.vecStock = this.vecStock.toObject();
    
    return tmp;
}
FuPan.FBlockTimeData.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("iZTNum") || (this.iZTNum = json.iZTNum);
    !json.hasOwnProperty("vecStock") || (this.vecStock.readFromObject(json.vecStock));
}
FuPan.FBlockTimeData.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockTimeData.new = function () {
    return new FuPan.FBlockTimeData();
}
FuPan.FBlockTimeData.create = function (is) {
    return FuPan.FBlockTimeData._readFrom(is);
}
FuPan.FBlockTimeTrail = function() {
    this.iMarket = 0;
    this.sCode = "";
    this.vecData = new TafStream.List(FuPan.FBlockTimeData);
    this._classname = "FuPan.FBlockTimeTrail";
};
FuPan.FBlockTimeTrail.prototype = new TafStream.JceStruct();
FuPan.FBlockTimeTrail._classname = "FuPan.FBlockTimeTrail";

FuPan.FBlockTimeTrail._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockTimeTrail._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockTimeTrail._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockTimeTrail();
    tmp.iMarket = is.readInt32(0, false, 0);
    tmp.sCode = is.readString(1, false, "");
    tmp.vecData = is.readList(2, false, TafStream.List(FuPan.FBlockTimeData));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockTimeTrail.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iMarket != undefined && this.iMarket != 0) {
        os.writeInt32(0, this.iMarket);
    }
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    if (this.vecData != undefined) {
        os.writeList(2, this.vecData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockTimeTrail.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockTimeTrail.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockTimeTrail.prototype.toObject = function() { 
    var tmp = {};

    tmp.iMarket = this.iMarket;
    tmp.sCode = this.sCode;
    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FBlockTimeTrail.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iMarket") || (this.iMarket = json.iMarket);
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FBlockTimeTrail.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockTimeTrail.new = function () {
    return new FuPan.FBlockTimeTrail();
}
FuPan.FBlockTimeTrail.create = function (is) {
    return FuPan.FBlockTimeTrail._readFrom(is);
}
FuPan.FStockTrailDetail = function() {
    this.iDate = 0;
    this.iTime = 0;
    this.eType = _TAF_MODULE_A_.FuPan.E_STOCK_ZT_TYPE.E_STOCK_ZT_UNKNOWN;
    this.iConNum = 0;
    this._classname = "FuPan.FStockTrailDetail";
};
FuPan.FStockTrailDetail.prototype = new TafStream.JceStruct();
FuPan.FStockTrailDetail._classname = "FuPan.FStockTrailDetail";

FuPan.FStockTrailDetail._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FStockTrailDetail._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FStockTrailDetail._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FStockTrailDetail();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.iTime = is.readInt32(1, false, 0);
    tmp.eType = is.readInt32(2, false, _TAF_MODULE_A_.FuPan.E_STOCK_ZT_TYPE.E_STOCK_ZT_UNKNOWN);
    tmp.iConNum = is.readInt32(3, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FStockTrailDetail.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    if (this.iTime != undefined && this.iTime != 0) {
        os.writeInt32(1, this.iTime);
    }
    if (this.eType != undefined) {
        os.writeInt32(2, this.eType);
    }
    if (this.iConNum != undefined && this.iConNum != 0) {
        os.writeInt32(3, this.iConNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FStockTrailDetail.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FStockTrailDetail.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FStockTrailDetail.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.iTime = this.iTime;
    tmp.eType = this.eType;
    tmp.iConNum = this.iConNum;
    
    return tmp;
}
FuPan.FStockTrailDetail.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("iTime") || (this.iTime = json.iTime);
    !json.hasOwnProperty("eType") || (this.eType = json.eType);
    !json.hasOwnProperty("iConNum") || (this.iConNum = json.iConNum);
}
FuPan.FStockTrailDetail.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FStockTrailDetail.new = function () {
    return new FuPan.FStockTrailDetail();
}
FuPan.FStockTrailDetail.create = function (is) {
    return FuPan.FStockTrailDetail._readFrom(is);
}
FuPan.FBlockStockData = function() {
    this.iMarket = 0;
    this.sCode = "";
    this.iZTNum = 0;
    this.iLeadNum = 0;
    this.iMaxCon = 0;
    this.vecDetail = new TafStream.List(FuPan.FStockTrailDetail);
    this._classname = "FuPan.FBlockStockData";
};
FuPan.FBlockStockData.prototype = new TafStream.JceStruct();
FuPan.FBlockStockData._classname = "FuPan.FBlockStockData";

FuPan.FBlockStockData._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockStockData._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockStockData._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockStockData();
    tmp.iMarket = is.readInt32(0, false, 0);
    tmp.sCode = is.readString(1, false, "");
    tmp.iZTNum = is.readInt32(2, false, 0);
    tmp.iLeadNum = is.readInt32(3, false, 0);
    tmp.iMaxCon = is.readInt32(4, false, 0);
    tmp.vecDetail = is.readList(5, false, TafStream.List(FuPan.FStockTrailDetail));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockStockData.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iMarket != undefined && this.iMarket != 0) {
        os.writeInt32(0, this.iMarket);
    }
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    if (this.iZTNum != undefined && this.iZTNum != 0) {
        os.writeInt32(2, this.iZTNum);
    }
    if (this.iLeadNum != undefined && this.iLeadNum != 0) {
        os.writeInt32(3, this.iLeadNum);
    }
    if (this.iMaxCon != undefined && this.iMaxCon != 0) {
        os.writeInt32(4, this.iMaxCon);
    }
    if (this.vecDetail != undefined) {
        os.writeList(5, this.vecDetail);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockStockData.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockStockData.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockStockData.prototype.toObject = function() { 
    var tmp = {};

    tmp.iMarket = this.iMarket;
    tmp.sCode = this.sCode;
    tmp.iZTNum = this.iZTNum;
    tmp.iLeadNum = this.iLeadNum;
    tmp.iMaxCon = this.iMaxCon;
    tmp.vecDetail = this.vecDetail.toObject();
    
    return tmp;
}
FuPan.FBlockStockData.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iMarket") || (this.iMarket = json.iMarket);
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("iZTNum") || (this.iZTNum = json.iZTNum);
    !json.hasOwnProperty("iLeadNum") || (this.iLeadNum = json.iLeadNum);
    !json.hasOwnProperty("iMaxCon") || (this.iMaxCon = json.iMaxCon);
    !json.hasOwnProperty("vecDetail") || (this.vecDetail.readFromObject(json.vecDetail));
}
FuPan.FBlockStockData.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockStockData.new = function () {
    return new FuPan.FBlockStockData();
}
FuPan.FBlockStockData.create = function (is) {
    return FuPan.FBlockStockData._readFrom(is);
}
FuPan.FBlockStockTrail = function() {
    this.iMarket = 0;
    this.sCode = "";
    this.vecData = new TafStream.List(FuPan.FBlockStockData);
    this._classname = "FuPan.FBlockStockTrail";
};
FuPan.FBlockStockTrail.prototype = new TafStream.JceStruct();
FuPan.FBlockStockTrail._classname = "FuPan.FBlockStockTrail";

FuPan.FBlockStockTrail._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockStockTrail._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockStockTrail._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockStockTrail();
    tmp.iMarket = is.readInt32(0, false, 0);
    tmp.sCode = is.readString(1, false, "");
    tmp.vecData = is.readList(2, false, TafStream.List(FuPan.FBlockStockData));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockStockTrail.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iMarket != undefined && this.iMarket != 0) {
        os.writeInt32(0, this.iMarket);
    }
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    if (this.vecData != undefined) {
        os.writeList(2, this.vecData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockStockTrail.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockStockTrail.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockStockTrail.prototype.toObject = function() { 
    var tmp = {};

    tmp.iMarket = this.iMarket;
    tmp.sCode = this.sCode;
    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FBlockStockTrail.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iMarket") || (this.iMarket = json.iMarket);
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FBlockStockTrail.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockStockTrail.new = function () {
    return new FuPan.FBlockStockTrail();
}
FuPan.FBlockStockTrail.create = function (is) {
    return FuPan.FBlockStockTrail._readFrom(is);
}
FuPan.FStockLastHis = function() {
    this.iDate = 0;
    this.dRatio = 0;
    this.iZTNum = 0;
    this._classname = "FuPan.FStockLastHis";
};
FuPan.FStockLastHis.prototype = new TafStream.JceStruct();
FuPan.FStockLastHis._classname = "FuPan.FStockLastHis";

FuPan.FStockLastHis._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FStockLastHis._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FStockLastHis._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FStockLastHis();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.dRatio = is.readDouble(1, false, 0);
    tmp.iZTNum = is.readInt32(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FStockLastHis.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    if (this.dRatio != undefined && this.dRatio != 0) {
        os.writeDouble(1, this.dRatio);
    }
    if (this.iZTNum != undefined && this.iZTNum != 0) {
        os.writeInt32(2, this.iZTNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FStockLastHis.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FStockLastHis.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FStockLastHis.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.dRatio = this.dRatio;
    tmp.iZTNum = this.iZTNum;
    
    return tmp;
}
FuPan.FStockLastHis.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("dRatio") || (this.dRatio = json.dRatio);
    !json.hasOwnProperty("iZTNum") || (this.iZTNum = json.iZTNum);
}
FuPan.FStockLastHis.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FStockLastHis.new = function () {
    return new FuPan.FStockLastHis();
}
FuPan.FStockLastHis.create = function (is) {
    return FuPan.FStockLastHis._readFrom(is);
}
FuPan.FBlockZTStatic = function() {
    this.iMarket = 0;
    this.sCode = "";
    this.iZTDay = 0;
    this.dTotalRatio = 0;
    this.vecData = new TafStream.List(FuPan.FStockLastHis);
    this._classname = "FuPan.FBlockZTStatic";
};
FuPan.FBlockZTStatic.prototype = new TafStream.JceStruct();
FuPan.FBlockZTStatic._classname = "FuPan.FBlockZTStatic";

FuPan.FBlockZTStatic._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockZTStatic._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockZTStatic._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockZTStatic();
    tmp.iMarket = is.readInt32(0, false, 0);
    tmp.sCode = is.readString(1, false, "");
    tmp.iZTDay = is.readInt32(2, false, 0);
    tmp.dTotalRatio = is.readDouble(3, false, 0);
    tmp.vecData = is.readList(4, false, TafStream.List(FuPan.FStockLastHis));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockZTStatic.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iMarket != undefined && this.iMarket != 0) {
        os.writeInt32(0, this.iMarket);
    }
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    if (this.iZTDay != undefined && this.iZTDay != 0) {
        os.writeInt32(2, this.iZTDay);
    }
    if (this.dTotalRatio != undefined && this.dTotalRatio != 0) {
        os.writeDouble(3, this.dTotalRatio);
    }
    if (this.vecData != undefined) {
        os.writeList(4, this.vecData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockZTStatic.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockZTStatic.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockZTStatic.prototype.toObject = function() { 
    var tmp = {};

    tmp.iMarket = this.iMarket;
    tmp.sCode = this.sCode;
    tmp.iZTDay = this.iZTDay;
    tmp.dTotalRatio = this.dTotalRatio;
    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FBlockZTStatic.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iMarket") || (this.iMarket = json.iMarket);
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("iZTDay") || (this.iZTDay = json.iZTDay);
    !json.hasOwnProperty("dTotalRatio") || (this.dTotalRatio = json.dTotalRatio);
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FBlockZTStatic.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockZTStatic.new = function () {
    return new FuPan.FBlockZTStatic();
}
FuPan.FBlockZTStatic.create = function (is) {
    return FuPan.FBlockZTStatic._readFrom(is);
}
FuPan.FBlockAllData = function() {
    this.ztBlock = new TafStream.Map(TafStream.String, FuPan.FBlockZTData);
    this.ztTimeTrail = new TafStream.Map(TafStream.String, FuPan.FBlockTimeTrail);
    this.ztStockTrail = new TafStream.Map(TafStream.String, FuPan.FBlockStockTrail);
    this.ztStatic = new TafStream.Map(TafStream.String, FuPan.FBlockZTStatic);
    this._classname = "FuPan.FBlockAllData";
};
FuPan.FBlockAllData.prototype = new TafStream.JceStruct();
FuPan.FBlockAllData._classname = "FuPan.FBlockAllData";

FuPan.FBlockAllData._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlockAllData._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlockAllData._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlockAllData();
    tmp.ztBlock = is.readMap(0, false, TafStream.Map(TafStream.String, FuPan.FBlockZTData));
    tmp.ztTimeTrail = is.readMap(1, false, TafStream.Map(TafStream.String, FuPan.FBlockTimeTrail));
    tmp.ztStockTrail = is.readMap(2, false, TafStream.Map(TafStream.String, FuPan.FBlockStockTrail));
    tmp.ztStatic = is.readMap(3, false, TafStream.Map(TafStream.String, FuPan.FBlockZTStatic));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlockAllData.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.ztBlock != undefined) {
        os.writeMap(0, this.ztBlock);
    }
    if (this.ztTimeTrail != undefined) {
        os.writeMap(1, this.ztTimeTrail);
    }
    if (this.ztStockTrail != undefined) {
        os.writeMap(2, this.ztStockTrail);
    }
    if (this.ztStatic != undefined) {
        os.writeMap(3, this.ztStatic);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlockAllData.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlockAllData.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlockAllData.prototype.toObject = function() { 
    var tmp = {};

    tmp.ztBlock = this.ztBlock.toObject();
    tmp.ztTimeTrail = this.ztTimeTrail.toObject();
    tmp.ztStockTrail = this.ztStockTrail.toObject();
    tmp.ztStatic = this.ztStatic.toObject();
    
    return tmp;
}
FuPan.FBlockAllData.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("ztBlock") || (this.ztBlock.readFromObject(json.ztBlock));
    !json.hasOwnProperty("ztTimeTrail") || (this.ztTimeTrail.readFromObject(json.ztTimeTrail));
    !json.hasOwnProperty("ztStockTrail") || (this.ztStockTrail.readFromObject(json.ztStockTrail));
    !json.hasOwnProperty("ztStatic") || (this.ztStatic.readFromObject(json.ztStatic));
}
FuPan.FBlockAllData.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlockAllData.new = function () {
    return new FuPan.FBlockAllData();
}
FuPan.FBlockAllData.create = function (is) {
    return FuPan.FBlockAllData._readFrom(is);
}
FuPan.FStockZTReasonInfo = function() {
    this.strCode = "";
    this.strReasion = "";
    this.updateTimestamp = 0;
    this.vRelatedPlates = new TafStream.List(TafStream.String);
    this._classname = "FuPan.FStockZTReasonInfo";
};
FuPan.FStockZTReasonInfo.prototype = new TafStream.JceStruct();
FuPan.FStockZTReasonInfo._classname = "FuPan.FStockZTReasonInfo";

FuPan.FStockZTReasonInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FStockZTReasonInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FStockZTReasonInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FStockZTReasonInfo();
    tmp.strCode = is.readString(0, true, "");
    tmp.strReasion = is.readString(1, true, "");
    tmp.updateTimestamp = is.readInt32(2, false, 0);
    tmp.vRelatedPlates = is.readList(3, false, TafStream.List(TafStream.String));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FStockZTReasonInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeString(0, this.strCode);
    os.writeString(1, this.strReasion);
    if (this.updateTimestamp != undefined && this.updateTimestamp != 0) {
        os.writeInt32(2, this.updateTimestamp);
    }
    if (this.vRelatedPlates != undefined) {
        os.writeList(3, this.vRelatedPlates);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FStockZTReasonInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FStockZTReasonInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FStockZTReasonInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.strCode = this.strCode;
    tmp.strReasion = this.strReasion;
    tmp.updateTimestamp = this.updateTimestamp;
    tmp.vRelatedPlates = this.vRelatedPlates.toObject();
    
    return tmp;
}
FuPan.FStockZTReasonInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("strCode") || (this.strCode = json.strCode);
    !json.hasOwnProperty("strReasion") || (this.strReasion = json.strReasion);
    !json.hasOwnProperty("updateTimestamp") || (this.updateTimestamp = json.updateTimestamp);
    !json.hasOwnProperty("vRelatedPlates") || (this.vRelatedPlates.readFromObject(json.vRelatedPlates));
}
FuPan.FStockZTReasonInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FStockZTReasonInfo.new = function () {
    return new FuPan.FStockZTReasonInfo();
}
FuPan.FStockZTReasonInfo.create = function (is) {
    return FuPan.FStockZTReasonInfo._readFrom(is);
}
FuPan.FStockZTReasonReq = function() {
    this.iDate = 0;
    this.vecStock = new TafStream.List(FuPan.FStockZTReasonInfo);
    this._classname = "FuPan.FStockZTReasonReq";
};
FuPan.FStockZTReasonReq.prototype = new TafStream.JceStruct();
FuPan.FStockZTReasonReq._classname = "FuPan.FStockZTReasonReq";

FuPan.FStockZTReasonReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FStockZTReasonReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FStockZTReasonReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FStockZTReasonReq();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.vecStock = is.readList(1, false, TafStream.List(FuPan.FStockZTReasonInfo));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FStockZTReasonReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    if (this.vecStock != undefined) {
        os.writeList(1, this.vecStock);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FStockZTReasonReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FStockZTReasonReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FStockZTReasonReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.vecStock = this.vecStock.toObject();
    
    return tmp;
}
FuPan.FStockZTReasonReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("vecStock") || (this.vecStock.readFromObject(json.vecStock));
}
FuPan.FStockZTReasonReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FStockZTReasonReq.new = function () {
    return new FuPan.FStockZTReasonReq();
}
FuPan.FStockZTReasonReq.create = function (is) {
    return FuPan.FStockZTReasonReq._readFrom(is);
}
FuPan.FStockZTReasonRsp = function() {
    this.bSucc = true;
    this._classname = "FuPan.FStockZTReasonRsp";
};
FuPan.FStockZTReasonRsp.prototype = new TafStream.JceStruct();
FuPan.FStockZTReasonRsp._classname = "FuPan.FStockZTReasonRsp";

FuPan.FStockZTReasonRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FStockZTReasonRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FStockZTReasonRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FStockZTReasonRsp();
    tmp.bSucc = is.readBoolean(0, false, true);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FStockZTReasonRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.bSucc != undefined && this.bSucc != true) {
        os.writeBoolean(0, this.bSucc);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FStockZTReasonRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FStockZTReasonRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FStockZTReasonRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.bSucc = this.bSucc;
    
    return tmp;
}
FuPan.FStockZTReasonRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("bSucc") || (this.bSucc = json.bSucc);
}
FuPan.FStockZTReasonRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FStockZTReasonRsp.new = function () {
    return new FuPan.FStockZTReasonRsp();
}
FuPan.FStockZTReasonRsp.create = function (is) {
    return FuPan.FStockZTReasonRsp._readFrom(is);
}
FuPan.FBlkStkInfo = function() {
    this.mapBlockSimpleInfo = new TafStream.Map(TafStream.String, _TAF_MODULE_A_.FuPan.FBlockSimpleInfo);
    this.mapStk2BlkAll = new TafStream.Map(TafStream.String, TafStream.List(TafStream.String));
    this.mapBlk2StkAll = new TafStream.Map(TafStream.String, TafStream.List(TafStream.String));
    this._classname = "FuPan.FBlkStkInfo";
};
FuPan.FBlkStkInfo.prototype = new TafStream.JceStruct();
FuPan.FBlkStkInfo._classname = "FuPan.FBlkStkInfo";

FuPan.FBlkStkInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkStkInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkStkInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkStkInfo();
    tmp.mapBlockSimpleInfo = is.readMap(0, false, TafStream.Map(TafStream.String, _TAF_MODULE_A_.FuPan.FBlockSimpleInfo));
    tmp.mapStk2BlkAll = is.readMap(1, false, TafStream.Map(TafStream.String, TafStream.List(TafStream.String)));
    tmp.mapBlk2StkAll = is.readMap(2, false, TafStream.Map(TafStream.String, TafStream.List(TafStream.String)));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkStkInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.mapBlockSimpleInfo != undefined) {
        os.writeMap(0, this.mapBlockSimpleInfo);
    }
    if (this.mapStk2BlkAll != undefined) {
        os.writeMap(1, this.mapStk2BlkAll);
    }
    if (this.mapBlk2StkAll != undefined) {
        os.writeMap(2, this.mapBlk2StkAll);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkStkInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkStkInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkStkInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.mapBlockSimpleInfo = this.mapBlockSimpleInfo.toObject();
    tmp.mapStk2BlkAll = this.mapStk2BlkAll.toObject();
    tmp.mapBlk2StkAll = this.mapBlk2StkAll.toObject();
    
    return tmp;
}
FuPan.FBlkStkInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("mapBlockSimpleInfo") || (this.mapBlockSimpleInfo.readFromObject(json.mapBlockSimpleInfo));
    !json.hasOwnProperty("mapStk2BlkAll") || (this.mapStk2BlkAll.readFromObject(json.mapStk2BlkAll));
    !json.hasOwnProperty("mapBlk2StkAll") || (this.mapBlk2StkAll.readFromObject(json.mapBlk2StkAll));
}
FuPan.FBlkStkInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkStkInfo.new = function () {
    return new FuPan.FBlkStkInfo();
}
FuPan.FBlkStkInfo.create = function (is) {
    return FuPan.FBlkStkInfo._readFrom(is);
}
FuPan.FMarketCommonData = function() {
    this.iDate = 0;
    this.iTime = 0;
    this.cMarketStatus = 0;
    this._classname = "FuPan.FMarketCommonData";
};
FuPan.FMarketCommonData.prototype = new TafStream.JceStruct();
FuPan.FMarketCommonData._classname = "FuPan.FMarketCommonData";

FuPan.FMarketCommonData._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FMarketCommonData._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FMarketCommonData._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FMarketCommonData();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.iTime = is.readInt32(1, false, 0);
    tmp.cMarketStatus = is.readInt8(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FMarketCommonData.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    if (this.iTime != undefined && this.iTime != 0) {
        os.writeInt32(1, this.iTime);
    }
    if (this.cMarketStatus != undefined && this.cMarketStatus != 0) {
        os.writeInt8(2, this.cMarketStatus);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FMarketCommonData.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FMarketCommonData.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FMarketCommonData.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.iTime = this.iTime;
    tmp.cMarketStatus = this.cMarketStatus;
    
    return tmp;
}
FuPan.FMarketCommonData.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("iTime") || (this.iTime = json.iTime);
    !json.hasOwnProperty("cMarketStatus") || (this.cMarketStatus = json.cMarketStatus);
}
FuPan.FMarketCommonData.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FMarketCommonData.new = function () {
    return new FuPan.FMarketCommonData();
}
FuPan.FMarketCommonData.create = function (is) {
    return FuPan.FMarketCommonData._readFrom(is);
}
FuPan.FDragonHeadSniperMsg = function() {
    this.mapStk = new TafStream.Map(TafStream.String, _TAF_MODULE_A_.FuPan.StkSimpInfo);
    this._classname = "FuPan.FDragonHeadSniperMsg";
};
FuPan.FDragonHeadSniperMsg.prototype = new TafStream.JceStruct();
FuPan.FDragonHeadSniperMsg._classname = "FuPan.FDragonHeadSniperMsg";

FuPan.FDragonHeadSniperMsg._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FDragonHeadSniperMsg._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FDragonHeadSniperMsg._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FDragonHeadSniperMsg();
    tmp.mapStk = is.readMap(0, false, TafStream.Map(TafStream.String, _TAF_MODULE_A_.FuPan.StkSimpInfo));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FDragonHeadSniperMsg.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.mapStk != undefined) {
        os.writeMap(0, this.mapStk);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FDragonHeadSniperMsg.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FDragonHeadSniperMsg.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FDragonHeadSniperMsg.prototype.toObject = function() { 
    var tmp = {};

    tmp.mapStk = this.mapStk.toObject();
    
    return tmp;
}
FuPan.FDragonHeadSniperMsg.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("mapStk") || (this.mapStk.readFromObject(json.mapStk));
}
FuPan.FDragonHeadSniperMsg.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FDragonHeadSniperMsg.new = function () {
    return new FuPan.FDragonHeadSniperMsg();
}
FuPan.FDragonHeadSniperMsg.create = function (is) {
    return FuPan.FDragonHeadSniperMsg._readFrom(is);
}
FuPan.FPushMsg = function() {
    this.eMsgType = FuPan.E_PUSH_MSG_TYPE.E_MSG_TYPE_NONE;
    this.sMsg = "";
    this._classname = "FuPan.FPushMsg";
};
FuPan.FPushMsg.prototype = new TafStream.JceStruct();
FuPan.FPushMsg._classname = "FuPan.FPushMsg";

FuPan.FPushMsg._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FPushMsg._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FPushMsg._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FPushMsg();
    tmp.eMsgType = is.readInt32(0, false, FuPan.E_PUSH_MSG_TYPE.E_MSG_TYPE_NONE);
    tmp.sMsg = is.readString(1, false, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FPushMsg.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.eMsgType != undefined) {
        os.writeInt32(0, this.eMsgType);
    }
    if (this.sMsg != undefined && this.sMsg != "") {
        os.writeString(1, this.sMsg);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FPushMsg.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FPushMsg.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FPushMsg.prototype.toObject = function() { 
    var tmp = {};

    tmp.eMsgType = this.eMsgType;
    tmp.sMsg = this.sMsg;
    
    return tmp;
}
FuPan.FPushMsg.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("eMsgType") || (this.eMsgType = json.eMsgType);
    !json.hasOwnProperty("sMsg") || (this.sMsg = json.sMsg);
}
FuPan.FPushMsg.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FPushMsg.new = function () {
    return new FuPan.FPushMsg();
}
FuPan.FPushMsg.create = function (is) {
    return FuPan.FPushMsg._readFrom(is);
}


