// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 5.3.1 by TAF Team.
// Generated from `./PushHqData.jce'
// **********************************************************************

var TafStream = require('@taf/taf-stream');
var TafError  = require('@taf/taf-rpc').error;

if(TafStream.JceStruct == undefined){
TafStream.JceStruct = function() {
this._jce_double_precision_ = -1;
}
TafStream.JceStruct.prototype.setPrecision = function(d) {
if ((d == -1) || (d >= 0 && d <= 15)) {
this._jce_double_precision_ = d;
return true;
}
return false;
}
TafStream.JceStruct.prototype.resetPrecision = function() { this._jce_double_precision_ = -1;}
TafStream.JceStruct.prototype.hasSetPrecision = function() { return (this._jce_double_precision_ >= 0 && this._jce_double_precision_ <= 15);}
TafStream.JceStruct.prototype.getPrecision = function() { return this._jce_double_precision_; }
}
var _TAF_MODULE_C_ = require('./BasicDataJce.js');
var _TAF_MODULE_I_ = require('./CommonJce.js');
var _TAF_MODULE_E_ = require('./CommonDataJce.js');
var _TAF_MODULE_B_ = require('./FuPanBasicDataJce.js');
var _TAF_MODULE_A_ = require('./FuPanCommonJce.js');
var _TAF_MODULE_G_ = require('./FupanBlockJce.js');
var _TAF_MODULE_H_ = require('./FupanCallAuctionJce.js');
var _TAF_MODULE_F_ = require('./FupanHisFactorJce.js');
var _TAF_MODULE_J_ = require('./PushHqDataJce.js');
var _TAF_MODULE_D_ = require('./RadarDataJce.js');

var FuPan = FuPan || {};
module.exports.FuPan = FuPan;

FuPan.ZTQueryProxy = function () {
    this._name   = undefined;
    this._worker = undefined;
}

FuPan.ZTQueryProxy.prototype.setTimeout = function (iTimeout) {
    this._worker.timeout = iTimeout;
}

FuPan.ZTQueryProxy.prototype.getTimeout = function ( ) {
    return this._worker.timeout;
}


FuPan.E_BLK_CURR_DATA_TYPE = {
    E_BLK_CURR_NO_STOCK : 0,
    E_BLK_CURR_ZT_STOCK : 1,
    E_BLK_CURR_UNZT_STOCK : 2
};

FuPan.E_BLK_CURR_DATA_TYPE.etos = function(enm) {
    switch(enm){
        case 0 : return 'E_BLK_CURR_NO_STOCK';
        case 1 : return 'E_BLK_CURR_ZT_STOCK';
        case 2 : return 'E_BLK_CURR_UNZT_STOCK';
    }
    return undefined;
};

FuPan.E_BLK_CURR_DATA_TYPE.stoe = function(enm) {
    switch(enm){
        case 'E_BLK_CURR_NO_STOCK' : return 0;
        case 'E_BLK_CURR_ZT_STOCK' : return 1;
        case 'E_BLK_CURR_UNZT_STOCK' : return 2;
    }
    return undefined;
};

FuPan.E_BLK_CURR_DATA_TYPE._write = function(os, tag, val) { return os.writeInt32(tag, val); }
FuPan.E_BLK_CURR_DATA_TYPE._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }
FuPan.STORM_EYE_IDX_TYPE = {
    STORM_EYE_IDX_TYPE_NUM : 0,
    STORM_EYE_IDX_TYPE_LEVEL : 1
};

FuPan.STORM_EYE_IDX_TYPE.etos = function(enm) {
    switch(enm){
        case 0 : return 'STORM_EYE_IDX_TYPE_NUM';
        case 1 : return 'STORM_EYE_IDX_TYPE_LEVEL';
    }
    return undefined;
};

FuPan.STORM_EYE_IDX_TYPE.stoe = function(enm) {
    switch(enm){
        case 'STORM_EYE_IDX_TYPE_NUM' : return 0;
        case 'STORM_EYE_IDX_TYPE_LEVEL' : return 1;
    }
    return undefined;
};

FuPan.STORM_EYE_IDX_TYPE._write = function(os, tag, val) { return os.writeInt32(tag, val); }
FuPan.STORM_EYE_IDX_TYPE._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }

FuPan.FStockPoolReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.eStockType = _TAF_MODULE_B_.FuPan.E_STOCK_POOL_TYPE.E_STOCK_ZT_POOL;
    this.bGetDetail = false;
    this.iBeg = 0;
    this.iWantNum = -1;
    this.iDate = 0;
    this.lRefreshTime = 0;
    this._classname = "FuPan.FStockPoolReq";
};
FuPan.FStockPoolReq.prototype = new TafStream.JceStruct();
FuPan.FStockPoolReq._classname = "FuPan.FStockPoolReq";

FuPan.FStockPoolReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FStockPoolReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FStockPoolReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FStockPoolReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.eStockType = is.readInt32(1, false, _TAF_MODULE_B_.FuPan.E_STOCK_POOL_TYPE.E_STOCK_ZT_POOL);
    tmp.bGetDetail = is.readBoolean(2, false, false);
    tmp.iBeg = is.readInt32(3, false, 0);
    tmp.iWantNum = is.readInt32(4, false, -1);
    tmp.iDate = is.readInt32(5, false, 0);
    tmp.lRefreshTime = is.readInt64(6, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FStockPoolReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.eStockType != undefined) {
        os.writeInt32(1, this.eStockType);
    }
    if (this.bGetDetail != undefined && this.bGetDetail != false) {
        os.writeBoolean(2, this.bGetDetail);
    }
    if (this.iBeg != undefined && this.iBeg != 0) {
        os.writeInt32(3, this.iBeg);
    }
    if (this.iWantNum != undefined && this.iWantNum != -1) {
        os.writeInt32(4, this.iWantNum);
    }
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(5, this.iDate);
    }
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(6, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FStockPoolReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FStockPoolReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FStockPoolReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.eStockType = this.eStockType;
    tmp.bGetDetail = this.bGetDetail;
    tmp.iBeg = this.iBeg;
    tmp.iWantNum = this.iWantNum;
    tmp.iDate = this.iDate;
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FStockPoolReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("eStockType") || (this.eStockType = json.eStockType);
    !json.hasOwnProperty("bGetDetail") || (this.bGetDetail = json.bGetDetail);
    !json.hasOwnProperty("iBeg") || (this.iBeg = json.iBeg);
    !json.hasOwnProperty("iWantNum") || (this.iWantNum = json.iWantNum);
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FStockPoolReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FStockPoolReq.new = function () {
    return new FuPan.FStockPoolReq();
}
FuPan.FStockPoolReq.create = function (is) {
    return FuPan.FStockPoolReq._readFrom(is);
}
FuPan.FStockPoolRsp = function() {
    this.vecStock = new TafStream.List(_TAF_MODULE_B_.FuPan.FZDStockInfo);
    this.iSize = 0;
    this.lTime = 0;
    this.iDate = 0;
    this._classname = "FuPan.FStockPoolRsp";
};
FuPan.FStockPoolRsp.prototype = new TafStream.JceStruct();
FuPan.FStockPoolRsp._classname = "FuPan.FStockPoolRsp";

FuPan.FStockPoolRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FStockPoolRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FStockPoolRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FStockPoolRsp();
    tmp.vecStock = is.readList(0, false, TafStream.List(_TAF_MODULE_B_.FuPan.FZDStockInfo));
    tmp.iSize = is.readInt32(1, false, 0);
    tmp.lTime = is.readInt64(2, false, 0);
    tmp.iDate = is.readInt32(3, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FStockPoolRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecStock != undefined) {
        os.writeList(0, this.vecStock);
    }
    if (this.iSize != undefined && this.iSize != 0) {
        os.writeInt32(1, this.iSize);
    }
    if (this.lTime != undefined && this.lTime != 0) {
        os.writeInt64(2, this.lTime);
    }
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(3, this.iDate);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FStockPoolRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FStockPoolRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FStockPoolRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecStock = this.vecStock.toObject();
    tmp.iSize = this.iSize;
    tmp.lTime = this.lTime;
    tmp.iDate = this.iDate;
    
    return tmp;
}
FuPan.FStockPoolRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecStock") || (this.vecStock.readFromObject(json.vecStock));
    !json.hasOwnProperty("iSize") || (this.iSize = json.iSize);
    !json.hasOwnProperty("lTime") || (this.lTime = json.lTime);
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
}
FuPan.FStockPoolRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FStockPoolRsp.new = function () {
    return new FuPan.FStockPoolRsp();
}
FuPan.FStockPoolRsp.create = function (is) {
    return FuPan.FStockPoolRsp._readFrom(is);
}
FuPan.FBatchStockPoolReq = function() {
    this.vecStockPoolReq = new TafStream.List(FuPan.FStockPoolReq);
    this._classname = "FuPan.FBatchStockPoolReq";
};
FuPan.FBatchStockPoolReq.prototype = new TafStream.JceStruct();
FuPan.FBatchStockPoolReq._classname = "FuPan.FBatchStockPoolReq";

FuPan.FBatchStockPoolReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBatchStockPoolReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBatchStockPoolReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBatchStockPoolReq();
    tmp.vecStockPoolReq = is.readList(0, true, TafStream.List(FuPan.FStockPoolReq));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBatchStockPoolReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeList(0, this.vecStockPoolReq);
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBatchStockPoolReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBatchStockPoolReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBatchStockPoolReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecStockPoolReq = this.vecStockPoolReq.toObject();
    
    return tmp;
}
FuPan.FBatchStockPoolReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecStockPoolReq") || (this.vecStockPoolReq.readFromObject(json.vecStockPoolReq));
}
FuPan.FBatchStockPoolReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBatchStockPoolReq.new = function () {
    return new FuPan.FBatchStockPoolReq();
}
FuPan.FBatchStockPoolReq.create = function (is) {
    return FuPan.FBatchStockPoolReq._readFrom(is);
}
FuPan.FBatchStockPoolRsp = function() {
    this.vecStockPoolRsp = new TafStream.List(FuPan.FStockPoolRsp);
    this._classname = "FuPan.FBatchStockPoolRsp";
};
FuPan.FBatchStockPoolRsp.prototype = new TafStream.JceStruct();
FuPan.FBatchStockPoolRsp._classname = "FuPan.FBatchStockPoolRsp";

FuPan.FBatchStockPoolRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBatchStockPoolRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBatchStockPoolRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBatchStockPoolRsp();
    tmp.vecStockPoolRsp = is.readList(0, false, TafStream.List(FuPan.FStockPoolRsp));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBatchStockPoolRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecStockPoolRsp != undefined) {
        os.writeList(0, this.vecStockPoolRsp);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBatchStockPoolRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBatchStockPoolRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBatchStockPoolRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecStockPoolRsp = this.vecStockPoolRsp.toObject();
    
    return tmp;
}
FuPan.FBatchStockPoolRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecStockPoolRsp") || (this.vecStockPoolRsp.readFromObject(json.vecStockPoolRsp));
}
FuPan.FBatchStockPoolRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBatchStockPoolRsp.new = function () {
    return new FuPan.FBatchStockPoolRsp();
}
FuPan.FBatchStockPoolRsp.create = function (is) {
    return FuPan.FBatchStockPoolRsp._readFrom(is);
}
FuPan.FBoardDetailReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.iMarket = 0;
    this.sCode = "";
    this.iDate = 0;
    this.eType = _TAF_MODULE_B_.FuPan.E_STOCK_POOL_TYPE.E_STOCK_ZT_POOL;
    this._classname = "FuPan.FBoardDetailReq";
};
FuPan.FBoardDetailReq.prototype = new TafStream.JceStruct();
FuPan.FBoardDetailReq._classname = "FuPan.FBoardDetailReq";

FuPan.FBoardDetailReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBoardDetailReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBoardDetailReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBoardDetailReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.iMarket = is.readInt32(1, false, 0);
    tmp.sCode = is.readString(2, false, "");
    tmp.iDate = is.readInt32(3, false, 0);
    tmp.eType = is.readInt32(4, false, _TAF_MODULE_B_.FuPan.E_STOCK_POOL_TYPE.E_STOCK_ZT_POOL);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBoardDetailReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.iMarket != undefined && this.iMarket != 0) {
        os.writeInt32(1, this.iMarket);
    }
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(2, this.sCode);
    }
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(3, this.iDate);
    }
    if (this.eType != undefined) {
        os.writeInt32(4, this.eType);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBoardDetailReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBoardDetailReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBoardDetailReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.iMarket = this.iMarket;
    tmp.sCode = this.sCode;
    tmp.iDate = this.iDate;
    tmp.eType = this.eType;
    
    return tmp;
}
FuPan.FBoardDetailReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("iMarket") || (this.iMarket = json.iMarket);
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("eType") || (this.eType = json.eType);
}
FuPan.FBoardDetailReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBoardDetailReq.new = function () {
    return new FuPan.FBoardDetailReq();
}
FuPan.FBoardDetailReq.create = function (is) {
    return FuPan.FBoardDetailReq._readFrom(is);
}
FuPan.FBoardDetailRsp = function() {
    this.vecDetail = new TafStream.List(_TAF_MODULE_B_.FuPan.FOpenBoardDetail);
    this._classname = "FuPan.FBoardDetailRsp";
};
FuPan.FBoardDetailRsp.prototype = new TafStream.JceStruct();
FuPan.FBoardDetailRsp._classname = "FuPan.FBoardDetailRsp";

FuPan.FBoardDetailRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBoardDetailRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBoardDetailRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBoardDetailRsp();
    tmp.vecDetail = is.readList(0, false, TafStream.List(_TAF_MODULE_B_.FuPan.FOpenBoardDetail));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBoardDetailRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecDetail != undefined) {
        os.writeList(0, this.vecDetail);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBoardDetailRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBoardDetailRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBoardDetailRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecDetail = this.vecDetail.toObject();
    
    return tmp;
}
FuPan.FBoardDetailRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecDetail") || (this.vecDetail.readFromObject(json.vecDetail));
}
FuPan.FBoardDetailRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBoardDetailRsp.new = function () {
    return new FuPan.FBoardDetailRsp();
}
FuPan.FBoardDetailRsp.create = function (is) {
    return FuPan.FBoardDetailRsp._readFrom(is);
}
FuPan.FTrendDataType = function() {
    this.eTrend = _TAF_MODULE_A_.FuPan.E_MARKET_TREND_TYPE.E_INDEX_TREND;
    this.eDate = _TAF_MODULE_A_.FuPan.E_TREND_DATE_TYPE.E_TREND_CURRENT;
    this.iDate = 0;
    this.eFilterType = _TAF_MODULE_B_.FuPan.E_STOCK_FILTER_TYPE.E_STOCK_ALL;
    this._classname = "FuPan.FTrendDataType";
};
FuPan.FTrendDataType.prototype = new TafStream.JceStruct();
FuPan.FTrendDataType._classname = "FuPan.FTrendDataType";

FuPan.FTrendDataType._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FTrendDataType._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FTrendDataType._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FTrendDataType();
    tmp.eTrend = is.readInt32(0, false, _TAF_MODULE_A_.FuPan.E_MARKET_TREND_TYPE.E_INDEX_TREND);
    tmp.eDate = is.readInt32(1, false, _TAF_MODULE_A_.FuPan.E_TREND_DATE_TYPE.E_TREND_CURRENT);
    tmp.iDate = is.readInt32(2, false, 0);
    tmp.eFilterType = is.readInt32(3, false, _TAF_MODULE_B_.FuPan.E_STOCK_FILTER_TYPE.E_STOCK_ALL);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FTrendDataType.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.eTrend != undefined) {
        os.writeInt32(0, this.eTrend);
    }
    if (this.eDate != undefined) {
        os.writeInt32(1, this.eDate);
    }
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(2, this.iDate);
    }
    if (this.eFilterType != undefined) {
        os.writeInt32(3, this.eFilterType);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FTrendDataType.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FTrendDataType.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FTrendDataType.prototype.toObject = function() { 
    var tmp = {};

    tmp.eTrend = this.eTrend;
    tmp.eDate = this.eDate;
    tmp.iDate = this.iDate;
    tmp.eFilterType = this.eFilterType;
    
    return tmp;
}
FuPan.FTrendDataType.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("eTrend") || (this.eTrend = json.eTrend);
    !json.hasOwnProperty("eDate") || (this.eDate = json.eDate);
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("eFilterType") || (this.eFilterType = json.eFilterType);
}
FuPan.FTrendDataType.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FTrendDataType.new = function () {
    return new FuPan.FTrendDataType();
}
FuPan.FTrendDataType.create = function (is) {
    return FuPan.FTrendDataType._readFrom(is);
}
FuPan.FMarketTrendReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.vecType = new TafStream.List(FuPan.FTrendDataType);
    this._classname = "FuPan.FMarketTrendReq";
};
FuPan.FMarketTrendReq.prototype = new TafStream.JceStruct();
FuPan.FMarketTrendReq._classname = "FuPan.FMarketTrendReq";

FuPan.FMarketTrendReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FMarketTrendReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FMarketTrendReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FMarketTrendReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.vecType = is.readList(1, false, TafStream.List(FuPan.FTrendDataType));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FMarketTrendReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.vecType != undefined) {
        os.writeList(1, this.vecType);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FMarketTrendReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FMarketTrendReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FMarketTrendReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.vecType = this.vecType.toObject();
    
    return tmp;
}
FuPan.FMarketTrendReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("vecType") || (this.vecType.readFromObject(json.vecType));
}
FuPan.FMarketTrendReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FMarketTrendReq.new = function () {
    return new FuPan.FMarketTrendReq();
}
FuPan.FMarketTrendReq.create = function (is) {
    return FuPan.FMarketTrendReq._readFrom(is);
}
FuPan.FMarketTrendRsp = function() {
    this.stData = new _TAF_MODULE_A_.FuPan.FMarketTrendData();
    this._classname = "FuPan.FMarketTrendRsp";
};
FuPan.FMarketTrendRsp.prototype = new TafStream.JceStruct();
FuPan.FMarketTrendRsp._classname = "FuPan.FMarketTrendRsp";

FuPan.FMarketTrendRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FMarketTrendRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FMarketTrendRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FMarketTrendRsp();
    tmp.stData = is.readStruct(0, false, _TAF_MODULE_A_.FuPan.FMarketTrendData);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FMarketTrendRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stData);
    os.resumePrecision && os.resumePrecision();
};
FuPan.FMarketTrendRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FMarketTrendRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FMarketTrendRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.stData = this.stData.toObject();
    
    return tmp;
}
FuPan.FMarketTrendRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stData") || (this.stData.readFromObject(json.stData));
}
FuPan.FMarketTrendRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FMarketTrendRsp.new = function () {
    return new FuPan.FMarketTrendRsp();
}
FuPan.FMarketTrendRsp.create = function (is) {
    return FuPan.FMarketTrendRsp._readFrom(is);
}
FuPan.FMarketTrendVecRsp = function() {
    this.vecData = new TafStream.List(_TAF_MODULE_A_.FuPan.FMarketTrendData);
    this._classname = "FuPan.FMarketTrendVecRsp";
};
FuPan.FMarketTrendVecRsp.prototype = new TafStream.JceStruct();
FuPan.FMarketTrendVecRsp._classname = "FuPan.FMarketTrendVecRsp";

FuPan.FMarketTrendVecRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FMarketTrendVecRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FMarketTrendVecRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FMarketTrendVecRsp();
    tmp.vecData = is.readList(0, false, TafStream.List(_TAF_MODULE_A_.FuPan.FMarketTrendData));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FMarketTrendVecRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecData != undefined) {
        os.writeList(0, this.vecData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FMarketTrendVecRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FMarketTrendVecRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FMarketTrendVecRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FMarketTrendVecRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FMarketTrendVecRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FMarketTrendVecRsp.new = function () {
    return new FuPan.FMarketTrendVecRsp();
}
FuPan.FMarketTrendVecRsp.create = function (is) {
    return FuPan.FMarketTrendVecRsp._readFrom(is);
}
FuPan.FBlkCurrentReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.iWantNum = 0;
    this.iPos = 0;
    this.eDetail = FuPan.E_BLK_CURR_DATA_TYPE.E_BLK_CURR_NO_STOCK;
    this.iDate = 0;
    this.lBlkUpdteTime = 0;
    this.iMinZTNum = 2;
    this._classname = "FuPan.FBlkCurrentReq";
};
FuPan.FBlkCurrentReq.prototype = new TafStream.JceStruct();
FuPan.FBlkCurrentReq._classname = "FuPan.FBlkCurrentReq";

FuPan.FBlkCurrentReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkCurrentReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkCurrentReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkCurrentReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.iWantNum = is.readInt32(1, false, 0);
    tmp.iPos = is.readInt32(2, false, 0);
    tmp.eDetail = is.readInt32(3, false, FuPan.E_BLK_CURR_DATA_TYPE.E_BLK_CURR_NO_STOCK);
    tmp.iDate = is.readInt32(4, false, 0);
    tmp.lBlkUpdteTime = is.readInt64(5, false, 0);
    tmp.iMinZTNum = is.readInt32(6, false, 2);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkCurrentReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.iWantNum != undefined && this.iWantNum != 0) {
        os.writeInt32(1, this.iWantNum);
    }
    if (this.iPos != undefined && this.iPos != 0) {
        os.writeInt32(2, this.iPos);
    }
    if (this.eDetail != undefined) {
        os.writeInt32(3, this.eDetail);
    }
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(4, this.iDate);
    }
    if (this.lBlkUpdteTime != undefined && this.lBlkUpdteTime != 0) {
        os.writeInt64(5, this.lBlkUpdteTime);
    }
    if (this.iMinZTNum != undefined && this.iMinZTNum != 2) {
        os.writeInt32(6, this.iMinZTNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkCurrentReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkCurrentReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkCurrentReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.iWantNum = this.iWantNum;
    tmp.iPos = this.iPos;
    tmp.eDetail = this.eDetail;
    tmp.iDate = this.iDate;
    tmp.lBlkUpdteTime = this.lBlkUpdteTime;
    tmp.iMinZTNum = this.iMinZTNum;
    
    return tmp;
}
FuPan.FBlkCurrentReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("iWantNum") || (this.iWantNum = json.iWantNum);
    !json.hasOwnProperty("iPos") || (this.iPos = json.iPos);
    !json.hasOwnProperty("eDetail") || (this.eDetail = json.eDetail);
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("lBlkUpdteTime") || (this.lBlkUpdteTime = json.lBlkUpdteTime);
    !json.hasOwnProperty("iMinZTNum") || (this.iMinZTNum = json.iMinZTNum);
}
FuPan.FBlkCurrentReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkCurrentReq.new = function () {
    return new FuPan.FBlkCurrentReq();
}
FuPan.FBlkCurrentReq.create = function (is) {
    return FuPan.FBlkCurrentReq._readFrom(is);
}
FuPan.FBlkCurrentRsp = function() {
    this.vecData = new TafStream.List(_TAF_MODULE_A_.FuPan.FBlockZTData);
    this.iDate = 0;
    this.lBlkUpdteTime = 0;
    this._classname = "FuPan.FBlkCurrentRsp";
};
FuPan.FBlkCurrentRsp.prototype = new TafStream.JceStruct();
FuPan.FBlkCurrentRsp._classname = "FuPan.FBlkCurrentRsp";

FuPan.FBlkCurrentRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkCurrentRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkCurrentRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkCurrentRsp();
    tmp.vecData = is.readList(0, false, TafStream.List(_TAF_MODULE_A_.FuPan.FBlockZTData));
    tmp.iDate = is.readInt32(1, false, 0);
    tmp.lBlkUpdteTime = is.readInt64(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkCurrentRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecData != undefined) {
        os.writeList(0, this.vecData);
    }
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(1, this.iDate);
    }
    if (this.lBlkUpdteTime != undefined && this.lBlkUpdteTime != 0) {
        os.writeInt64(2, this.lBlkUpdteTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkCurrentRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkCurrentRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkCurrentRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecData = this.vecData.toObject();
    tmp.iDate = this.iDate;
    tmp.lBlkUpdteTime = this.lBlkUpdteTime;
    
    return tmp;
}
FuPan.FBlkCurrentRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("lBlkUpdteTime") || (this.lBlkUpdteTime = json.lBlkUpdteTime);
}
FuPan.FBlkCurrentRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkCurrentRsp.new = function () {
    return new FuPan.FBlkCurrentRsp();
}
FuPan.FBlkCurrentRsp.create = function (is) {
    return FuPan.FBlkCurrentRsp._readFrom(is);
}
FuPan.FBlkCurZTReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.sCode = "";
    this.iWantNum = 5;
    this.iPos = 0;
    this.iDate = 0;
    this._classname = "FuPan.FBlkCurZTReq";
};
FuPan.FBlkCurZTReq.prototype = new TafStream.JceStruct();
FuPan.FBlkCurZTReq._classname = "FuPan.FBlkCurZTReq";

FuPan.FBlkCurZTReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkCurZTReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkCurZTReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkCurZTReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.sCode = is.readString(1, false, "");
    tmp.iWantNum = is.readInt32(2, false, 5);
    tmp.iPos = is.readInt32(3, false, 0);
    tmp.iDate = is.readInt32(4, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkCurZTReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    if (this.iWantNum != undefined && this.iWantNum != 5) {
        os.writeInt32(2, this.iWantNum);
    }
    if (this.iPos != undefined && this.iPos != 0) {
        os.writeInt32(3, this.iPos);
    }
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(4, this.iDate);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkCurZTReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkCurZTReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkCurZTReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.sCode = this.sCode;
    tmp.iWantNum = this.iWantNum;
    tmp.iPos = this.iPos;
    tmp.iDate = this.iDate;
    
    return tmp;
}
FuPan.FBlkCurZTReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("iWantNum") || (this.iWantNum = json.iWantNum);
    !json.hasOwnProperty("iPos") || (this.iPos = json.iPos);
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
}
FuPan.FBlkCurZTReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkCurZTReq.new = function () {
    return new FuPan.FBlkCurZTReq();
}
FuPan.FBlkCurZTReq.create = function (is) {
    return FuPan.FBlkCurZTReq._readFrom(is);
}
FuPan.FBlkCurZTRsp = function() {
    this.vecStock = new TafStream.List(_TAF_MODULE_A_.FuPan.FBlockStockZT);
    this._classname = "FuPan.FBlkCurZTRsp";
};
FuPan.FBlkCurZTRsp.prototype = new TafStream.JceStruct();
FuPan.FBlkCurZTRsp._classname = "FuPan.FBlkCurZTRsp";

FuPan.FBlkCurZTRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkCurZTRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkCurZTRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkCurZTRsp();
    tmp.vecStock = is.readList(0, false, TafStream.List(_TAF_MODULE_A_.FuPan.FBlockStockZT));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkCurZTRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecStock != undefined) {
        os.writeList(0, this.vecStock);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkCurZTRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkCurZTRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkCurZTRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecStock = this.vecStock.toObject();
    
    return tmp;
}
FuPan.FBlkCurZTRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecStock") || (this.vecStock.readFromObject(json.vecStock));
}
FuPan.FBlkCurZTRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkCurZTRsp.new = function () {
    return new FuPan.FBlkCurZTRsp();
}
FuPan.FBlkCurZTRsp.create = function (is) {
    return FuPan.FBlkCurZTRsp._readFrom(is);
}
FuPan.FBlkCurUnZTReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.sCode = "";
    this.iWantNum = 5;
    this.iPos = 0;
    this.iDate = 0;
    this._classname = "FuPan.FBlkCurUnZTReq";
};
FuPan.FBlkCurUnZTReq.prototype = new TafStream.JceStruct();
FuPan.FBlkCurUnZTReq._classname = "FuPan.FBlkCurUnZTReq";

FuPan.FBlkCurUnZTReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkCurUnZTReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkCurUnZTReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkCurUnZTReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.sCode = is.readString(1, false, "");
    tmp.iWantNum = is.readInt32(2, false, 5);
    tmp.iPos = is.readInt32(3, false, 0);
    tmp.iDate = is.readInt32(4, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkCurUnZTReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    if (this.iWantNum != undefined && this.iWantNum != 5) {
        os.writeInt32(2, this.iWantNum);
    }
    if (this.iPos != undefined && this.iPos != 0) {
        os.writeInt32(3, this.iPos);
    }
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(4, this.iDate);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkCurUnZTReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkCurUnZTReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkCurUnZTReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.sCode = this.sCode;
    tmp.iWantNum = this.iWantNum;
    tmp.iPos = this.iPos;
    tmp.iDate = this.iDate;
    
    return tmp;
}
FuPan.FBlkCurUnZTReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("iWantNum") || (this.iWantNum = json.iWantNum);
    !json.hasOwnProperty("iPos") || (this.iPos = json.iPos);
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
}
FuPan.FBlkCurUnZTReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkCurUnZTReq.new = function () {
    return new FuPan.FBlkCurUnZTReq();
}
FuPan.FBlkCurUnZTReq.create = function (is) {
    return FuPan.FBlkCurUnZTReq._readFrom(is);
}
FuPan.FBlkCurUnZTRsp = function() {
    this.vecStock = new TafStream.List(_TAF_MODULE_A_.FuPan.FBlockStockUnZT);
    this._classname = "FuPan.FBlkCurUnZTRsp";
};
FuPan.FBlkCurUnZTRsp.prototype = new TafStream.JceStruct();
FuPan.FBlkCurUnZTRsp._classname = "FuPan.FBlkCurUnZTRsp";

FuPan.FBlkCurUnZTRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkCurUnZTRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkCurUnZTRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkCurUnZTRsp();
    tmp.vecStock = is.readList(0, false, TafStream.List(_TAF_MODULE_A_.FuPan.FBlockStockUnZT));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkCurUnZTRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecStock != undefined) {
        os.writeList(0, this.vecStock);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkCurUnZTRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkCurUnZTRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkCurUnZTRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecStock = this.vecStock.toObject();
    
    return tmp;
}
FuPan.FBlkCurUnZTRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecStock") || (this.vecStock.readFromObject(json.vecStock));
}
FuPan.FBlkCurUnZTRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkCurUnZTRsp.new = function () {
    return new FuPan.FBlkCurUnZTRsp();
}
FuPan.FBlkCurUnZTRsp.create = function (is) {
    return FuPan.FBlkCurUnZTRsp._readFrom(is);
}
FuPan.FStockUnique = function() {
    this.iMarket = 0;
    this.sCode = "";
    this._classname = "FuPan.FStockUnique";
};
FuPan.FStockUnique.prototype = new TafStream.JceStruct();
FuPan.FStockUnique._classname = "FuPan.FStockUnique";

FuPan.FStockUnique._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FStockUnique._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FStockUnique._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FStockUnique();
    tmp.iMarket = is.readInt32(0, false, 0);
    tmp.sCode = is.readString(1, false, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FStockUnique.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iMarket != undefined && this.iMarket != 0) {
        os.writeInt32(0, this.iMarket);
    }
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FStockUnique.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FStockUnique.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FStockUnique.prototype.toObject = function() { 
    var tmp = {};

    tmp.iMarket = this.iMarket;
    tmp.sCode = this.sCode;
    
    return tmp;
}
FuPan.FStockUnique.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iMarket") || (this.iMarket = json.iMarket);
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
}
FuPan.FStockUnique.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FStockUnique.new = function () {
    return new FuPan.FStockUnique();
}
FuPan.FStockUnique.create = function (is) {
    return FuPan.FStockUnique._readFrom(is);
}
FuPan.FBlkLastHisReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.vecStock = new TafStream.List(FuPan.FStockUnique);
    this.iDayNum = 5;
    this.iDate = 0;
    this._classname = "FuPan.FBlkLastHisReq";
};
FuPan.FBlkLastHisReq.prototype = new TafStream.JceStruct();
FuPan.FBlkLastHisReq._classname = "FuPan.FBlkLastHisReq";

FuPan.FBlkLastHisReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkLastHisReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkLastHisReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkLastHisReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.vecStock = is.readList(1, false, TafStream.List(FuPan.FStockUnique));
    tmp.iDayNum = is.readInt32(2, false, 5);
    tmp.iDate = is.readInt32(3, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkLastHisReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.vecStock != undefined) {
        os.writeList(1, this.vecStock);
    }
    if (this.iDayNum != undefined && this.iDayNum != 5) {
        os.writeInt32(2, this.iDayNum);
    }
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(3, this.iDate);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkLastHisReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkLastHisReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkLastHisReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.vecStock = this.vecStock.toObject();
    tmp.iDayNum = this.iDayNum;
    tmp.iDate = this.iDate;
    
    return tmp;
}
FuPan.FBlkLastHisReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("vecStock") || (this.vecStock.readFromObject(json.vecStock));
    !json.hasOwnProperty("iDayNum") || (this.iDayNum = json.iDayNum);
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
}
FuPan.FBlkLastHisReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkLastHisReq.new = function () {
    return new FuPan.FBlkLastHisReq();
}
FuPan.FBlkLastHisReq.create = function (is) {
    return FuPan.FBlkLastHisReq._readFrom(is);
}
FuPan.FStockLastHisData = function() {
    this.iMarket = 0;
    this.sCode = "";
    this.hisData = new TafStream.List(_TAF_MODULE_A_.FuPan.FStockLastHis);
    this._classname = "FuPan.FStockLastHisData";
};
FuPan.FStockLastHisData.prototype = new TafStream.JceStruct();
FuPan.FStockLastHisData._classname = "FuPan.FStockLastHisData";

FuPan.FStockLastHisData._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FStockLastHisData._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FStockLastHisData._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FStockLastHisData();
    tmp.iMarket = is.readInt32(0, false, 0);
    tmp.sCode = is.readString(1, false, "");
    tmp.hisData = is.readList(2, false, TafStream.List(_TAF_MODULE_A_.FuPan.FStockLastHis));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FStockLastHisData.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iMarket != undefined && this.iMarket != 0) {
        os.writeInt32(0, this.iMarket);
    }
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    if (this.hisData != undefined) {
        os.writeList(2, this.hisData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FStockLastHisData.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FStockLastHisData.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FStockLastHisData.prototype.toObject = function() { 
    var tmp = {};

    tmp.iMarket = this.iMarket;
    tmp.sCode = this.sCode;
    tmp.hisData = this.hisData.toObject();
    
    return tmp;
}
FuPan.FStockLastHisData.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iMarket") || (this.iMarket = json.iMarket);
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("hisData") || (this.hisData.readFromObject(json.hisData));
}
FuPan.FStockLastHisData.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FStockLastHisData.new = function () {
    return new FuPan.FStockLastHisData();
}
FuPan.FStockLastHisData.create = function (is) {
    return FuPan.FStockLastHisData._readFrom(is);
}
FuPan.FBlkLastHisRsp = function() {
    this.vecData = new TafStream.List(FuPan.FStockLastHisData);
    this._classname = "FuPan.FBlkLastHisRsp";
};
FuPan.FBlkLastHisRsp.prototype = new TafStream.JceStruct();
FuPan.FBlkLastHisRsp._classname = "FuPan.FBlkLastHisRsp";

FuPan.FBlkLastHisRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkLastHisRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkLastHisRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkLastHisRsp();
    tmp.vecData = is.readList(0, false, TafStream.List(FuPan.FStockLastHisData));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkLastHisRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecData != undefined) {
        os.writeList(0, this.vecData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkLastHisRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkLastHisRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkLastHisRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FBlkLastHisRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FBlkLastHisRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkLastHisRsp.new = function () {
    return new FuPan.FBlkLastHisRsp();
}
FuPan.FBlkLastHisRsp.create = function (is) {
    return FuPan.FBlkLastHisRsp._readFrom(is);
}
FuPan.FBlkTimeHisReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.sCode = "";
    this.iWantNum = 10;
    this.iPos = 0;
    this.iStockNum = -1;
    this._classname = "FuPan.FBlkTimeHisReq";
};
FuPan.FBlkTimeHisReq.prototype = new TafStream.JceStruct();
FuPan.FBlkTimeHisReq._classname = "FuPan.FBlkTimeHisReq";

FuPan.FBlkTimeHisReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkTimeHisReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkTimeHisReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkTimeHisReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.sCode = is.readString(1, false, "");
    tmp.iWantNum = is.readInt32(2, false, 10);
    tmp.iPos = is.readInt32(3, false, 0);
    tmp.iStockNum = is.readInt32(4, false, -1);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkTimeHisReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    if (this.iWantNum != undefined && this.iWantNum != 10) {
        os.writeInt32(2, this.iWantNum);
    }
    if (this.iPos != undefined && this.iPos != 0) {
        os.writeInt32(3, this.iPos);
    }
    if (this.iStockNum != undefined && this.iStockNum != -1) {
        os.writeInt32(4, this.iStockNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkTimeHisReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkTimeHisReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkTimeHisReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.sCode = this.sCode;
    tmp.iWantNum = this.iWantNum;
    tmp.iPos = this.iPos;
    tmp.iStockNum = this.iStockNum;
    
    return tmp;
}
FuPan.FBlkTimeHisReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("iWantNum") || (this.iWantNum = json.iWantNum);
    !json.hasOwnProperty("iPos") || (this.iPos = json.iPos);
    !json.hasOwnProperty("iStockNum") || (this.iStockNum = json.iStockNum);
}
FuPan.FBlkTimeHisReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkTimeHisReq.new = function () {
    return new FuPan.FBlkTimeHisReq();
}
FuPan.FBlkTimeHisReq.create = function (is) {
    return FuPan.FBlkTimeHisReq._readFrom(is);
}
FuPan.FBlkTimeHisRsp = function() {
    this.stData = new _TAF_MODULE_A_.FuPan.FBlockTimeTrail();
    this._classname = "FuPan.FBlkTimeHisRsp";
};
FuPan.FBlkTimeHisRsp.prototype = new TafStream.JceStruct();
FuPan.FBlkTimeHisRsp._classname = "FuPan.FBlkTimeHisRsp";

FuPan.FBlkTimeHisRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkTimeHisRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkTimeHisRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkTimeHisRsp();
    tmp.stData = is.readStruct(0, false, _TAF_MODULE_A_.FuPan.FBlockTimeTrail);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkTimeHisRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stData);
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkTimeHisRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkTimeHisRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkTimeHisRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.stData = this.stData.toObject();
    
    return tmp;
}
FuPan.FBlkTimeHisRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stData") || (this.stData.readFromObject(json.stData));
}
FuPan.FBlkTimeHisRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkTimeHisRsp.new = function () {
    return new FuPan.FBlkTimeHisRsp();
}
FuPan.FBlkTimeHisRsp.create = function (is) {
    return FuPan.FBlkTimeHisRsp._readFrom(is);
}
FuPan.FBlkStockHisReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.sCode = "";
    this.iWantNum = 0;
    this.iPos = 0;
    this._classname = "FuPan.FBlkStockHisReq";
};
FuPan.FBlkStockHisReq.prototype = new TafStream.JceStruct();
FuPan.FBlkStockHisReq._classname = "FuPan.FBlkStockHisReq";

FuPan.FBlkStockHisReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkStockHisReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkStockHisReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkStockHisReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.sCode = is.readString(1, false, "");
    tmp.iWantNum = is.readInt32(2, false, 0);
    tmp.iPos = is.readInt32(3, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkStockHisReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    if (this.iWantNum != undefined && this.iWantNum != 0) {
        os.writeInt32(2, this.iWantNum);
    }
    if (this.iPos != undefined && this.iPos != 0) {
        os.writeInt32(3, this.iPos);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkStockHisReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkStockHisReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkStockHisReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.sCode = this.sCode;
    tmp.iWantNum = this.iWantNum;
    tmp.iPos = this.iPos;
    
    return tmp;
}
FuPan.FBlkStockHisReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("iWantNum") || (this.iWantNum = json.iWantNum);
    !json.hasOwnProperty("iPos") || (this.iPos = json.iPos);
}
FuPan.FBlkStockHisReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkStockHisReq.new = function () {
    return new FuPan.FBlkStockHisReq();
}
FuPan.FBlkStockHisReq.create = function (is) {
    return FuPan.FBlkStockHisReq._readFrom(is);
}
FuPan.FBlkStockHisRsp = function() {
    this.stData = new _TAF_MODULE_A_.FuPan.FBlockStockTrail();
    this._classname = "FuPan.FBlkStockHisRsp";
};
FuPan.FBlkStockHisRsp.prototype = new TafStream.JceStruct();
FuPan.FBlkStockHisRsp._classname = "FuPan.FBlkStockHisRsp";

FuPan.FBlkStockHisRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkStockHisRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkStockHisRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkStockHisRsp();
    tmp.stData = is.readStruct(0, false, _TAF_MODULE_A_.FuPan.FBlockStockTrail);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkStockHisRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stData);
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkStockHisRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkStockHisRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkStockHisRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.stData = this.stData.toObject();
    
    return tmp;
}
FuPan.FBlkStockHisRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stData") || (this.stData.readFromObject(json.stData));
}
FuPan.FBlkStockHisRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkStockHisRsp.new = function () {
    return new FuPan.FBlkStockHisRsp();
}
FuPan.FBlkStockHisRsp.create = function (is) {
    return FuPan.FBlkStockHisRsp._readFrom(is);
}
FuPan.FBlkHisTurnReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.iWantNum = 15;
    this._classname = "FuPan.FBlkHisTurnReq";
};
FuPan.FBlkHisTurnReq.prototype = new TafStream.JceStruct();
FuPan.FBlkHisTurnReq._classname = "FuPan.FBlkHisTurnReq";

FuPan.FBlkHisTurnReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkHisTurnReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkHisTurnReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkHisTurnReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.iWantNum = is.readInt32(1, false, 15);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkHisTurnReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.iWantNum != undefined && this.iWantNum != 15) {
        os.writeInt32(1, this.iWantNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkHisTurnReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkHisTurnReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkHisTurnReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.iWantNum = this.iWantNum;
    
    return tmp;
}
FuPan.FBlkHisTurnReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("iWantNum") || (this.iWantNum = json.iWantNum);
}
FuPan.FBlkHisTurnReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkHisTurnReq.new = function () {
    return new FuPan.FBlkHisTurnReq();
}
FuPan.FBlkHisTurnReq.create = function (is) {
    return FuPan.FBlkHisTurnReq._readFrom(is);
}
FuPan.FBlkHisTurnRsp = function() {
    this.vecData = new TafStream.List(_TAF_MODULE_A_.FuPan.FBlockZTStatic);
    this._classname = "FuPan.FBlkHisTurnRsp";
};
FuPan.FBlkHisTurnRsp.prototype = new TafStream.JceStruct();
FuPan.FBlkHisTurnRsp._classname = "FuPan.FBlkHisTurnRsp";

FuPan.FBlkHisTurnRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkHisTurnRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkHisTurnRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkHisTurnRsp();
    tmp.vecData = is.readList(0, false, TafStream.List(_TAF_MODULE_A_.FuPan.FBlockZTStatic));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkHisTurnRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecData != undefined) {
        os.writeList(0, this.vecData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkHisTurnRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkHisTurnRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkHisTurnRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FBlkHisTurnRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FBlkHisTurnRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkHisTurnRsp.new = function () {
    return new FuPan.FBlkHisTurnRsp();
}
FuPan.FBlkHisTurnRsp.create = function (is) {
    return FuPan.FBlkHisTurnRsp._readFrom(is);
}
FuPan.FLeadBlkReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.iDate = 0;
    this.iBlockType = 0;
    this._classname = "FuPan.FLeadBlkReq";
};
FuPan.FLeadBlkReq.prototype = new TafStream.JceStruct();
FuPan.FLeadBlkReq._classname = "FuPan.FLeadBlkReq";

FuPan.FLeadBlkReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FLeadBlkReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FLeadBlkReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FLeadBlkReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.iDate = is.readInt32(1, false, 0);
    tmp.iBlockType = is.readInt32(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FLeadBlkReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(1, this.iDate);
    }
    if (this.iBlockType != undefined && this.iBlockType != 0) {
        os.writeInt32(2, this.iBlockType);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FLeadBlkReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FLeadBlkReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FLeadBlkReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.iDate = this.iDate;
    tmp.iBlockType = this.iBlockType;
    
    return tmp;
}
FuPan.FLeadBlkReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("iBlockType") || (this.iBlockType = json.iBlockType);
}
FuPan.FLeadBlkReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FLeadBlkReq.new = function () {
    return new FuPan.FLeadBlkReq();
}
FuPan.FLeadBlkReq.create = function (is) {
    return FuPan.FLeadBlkReq._readFrom(is);
}
FuPan.FLeadBlkRsp = function() {
    this.vecData = new TafStream.List(_TAF_MODULE_J_.IC.SLeadBlkInfo);
    this._classname = "FuPan.FLeadBlkRsp";
};
FuPan.FLeadBlkRsp.prototype = new TafStream.JceStruct();
FuPan.FLeadBlkRsp._classname = "FuPan.FLeadBlkRsp";

FuPan.FLeadBlkRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FLeadBlkRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FLeadBlkRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FLeadBlkRsp();
    tmp.vecData = is.readList(0, false, TafStream.List(_TAF_MODULE_J_.IC.SLeadBlkInfo));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FLeadBlkRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecData != undefined) {
        os.writeList(0, this.vecData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FLeadBlkRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FLeadBlkRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FLeadBlkRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FLeadBlkRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FLeadBlkRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FLeadBlkRsp.new = function () {
    return new FuPan.FLeadBlkRsp();
}
FuPan.FLeadBlkRsp.create = function (is) {
    return FuPan.FLeadBlkRsp._readFrom(is);
}
FuPan.FBlkChangesReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.iDate = 0;
    this.eType = _TAF_MODULE_J_.IC.BLOCKCHANGE_TYPE.E_TYPE_BKALL;
    this.iBlkLeadStockNum = 2;
    this.iWantNum = 0;
    this.iPos = 0;
    this.iBlockType = 0;
    this._classname = "FuPan.FBlkChangesReq";
};
FuPan.FBlkChangesReq.prototype = new TafStream.JceStruct();
FuPan.FBlkChangesReq._classname = "FuPan.FBlkChangesReq";

FuPan.FBlkChangesReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkChangesReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkChangesReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkChangesReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.iDate = is.readInt32(1, false, 0);
    tmp.eType = is.readInt32(2, false, _TAF_MODULE_J_.IC.BLOCKCHANGE_TYPE.E_TYPE_BKALL);
    tmp.iBlkLeadStockNum = is.readInt32(3, false, 2);
    tmp.iWantNum = is.readInt32(4, false, 0);
    tmp.iPos = is.readInt32(5, false, 0);
    tmp.iBlockType = is.readInt32(6, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkChangesReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(1, this.iDate);
    }
    if (this.eType != undefined) {
        os.writeInt32(2, this.eType);
    }
    if (this.iBlkLeadStockNum != undefined && this.iBlkLeadStockNum != 2) {
        os.writeInt32(3, this.iBlkLeadStockNum);
    }
    if (this.iWantNum != undefined && this.iWantNum != 0) {
        os.writeInt32(4, this.iWantNum);
    }
    if (this.iPos != undefined && this.iPos != 0) {
        os.writeInt32(5, this.iPos);
    }
    if (this.iBlockType != undefined && this.iBlockType != 0) {
        os.writeInt32(6, this.iBlockType);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkChangesReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkChangesReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkChangesReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.iDate = this.iDate;
    tmp.eType = this.eType;
    tmp.iBlkLeadStockNum = this.iBlkLeadStockNum;
    tmp.iWantNum = this.iWantNum;
    tmp.iPos = this.iPos;
    tmp.iBlockType = this.iBlockType;
    
    return tmp;
}
FuPan.FBlkChangesReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("eType") || (this.eType = json.eType);
    !json.hasOwnProperty("iBlkLeadStockNum") || (this.iBlkLeadStockNum = json.iBlkLeadStockNum);
    !json.hasOwnProperty("iWantNum") || (this.iWantNum = json.iWantNum);
    !json.hasOwnProperty("iPos") || (this.iPos = json.iPos);
    !json.hasOwnProperty("iBlockType") || (this.iBlockType = json.iBlockType);
}
FuPan.FBlkChangesReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkChangesReq.new = function () {
    return new FuPan.FBlkChangesReq();
}
FuPan.FBlkChangesReq.create = function (is) {
    return FuPan.FBlkChangesReq._readFrom(is);
}
FuPan.FBlkChangesRsp = function() {
    this.vecData = new TafStream.List(_TAF_MODULE_J_.IC.SBlockChange);
    this._classname = "FuPan.FBlkChangesRsp";
};
FuPan.FBlkChangesRsp.prototype = new TafStream.JceStruct();
FuPan.FBlkChangesRsp._classname = "FuPan.FBlkChangesRsp";

FuPan.FBlkChangesRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkChangesRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkChangesRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkChangesRsp();
    tmp.vecData = is.readList(0, false, TafStream.List(_TAF_MODULE_J_.IC.SBlockChange));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkChangesRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecData != undefined) {
        os.writeList(0, this.vecData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkChangesRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkChangesRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkChangesRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FBlkChangesRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FBlkChangesRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkChangesRsp.new = function () {
    return new FuPan.FBlkChangesRsp();
}
FuPan.FBlkChangesRsp.create = function (is) {
    return FuPan.FBlkChangesRsp._readFrom(is);
}
FuPan.FStockPoolFBoardPeriodReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.vecStock = new TafStream.List(FuPan.FStockUnique);
    this._classname = "FuPan.FStockPoolFBoardPeriodReq";
};
FuPan.FStockPoolFBoardPeriodReq.prototype = new TafStream.JceStruct();
FuPan.FStockPoolFBoardPeriodReq._classname = "FuPan.FStockPoolFBoardPeriodReq";

FuPan.FStockPoolFBoardPeriodReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FStockPoolFBoardPeriodReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FStockPoolFBoardPeriodReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FStockPoolFBoardPeriodReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.vecStock = is.readList(1, false, TafStream.List(FuPan.FStockUnique));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FStockPoolFBoardPeriodReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.vecStock != undefined) {
        os.writeList(1, this.vecStock);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FStockPoolFBoardPeriodReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FStockPoolFBoardPeriodReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FStockPoolFBoardPeriodReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.vecStock = this.vecStock.toObject();
    
    return tmp;
}
FuPan.FStockPoolFBoardPeriodReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("vecStock") || (this.vecStock.readFromObject(json.vecStock));
}
FuPan.FStockPoolFBoardPeriodReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FStockPoolFBoardPeriodReq.new = function () {
    return new FuPan.FStockPoolFBoardPeriodReq();
}
FuPan.FStockPoolFBoardPeriodReq.create = function (is) {
    return FuPan.FStockPoolFBoardPeriodReq._readFrom(is);
}
FuPan.FStockPoolFBoardPeriodInfo = function() {
    this.stock = new FuPan.FStockUnique();
    this.stBoard = new _TAF_MODULE_B_.FuPan.FBoardPeriod();
    this._classname = "FuPan.FStockPoolFBoardPeriodInfo";
};
FuPan.FStockPoolFBoardPeriodInfo.prototype = new TafStream.JceStruct();
FuPan.FStockPoolFBoardPeriodInfo._classname = "FuPan.FStockPoolFBoardPeriodInfo";

FuPan.FStockPoolFBoardPeriodInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FStockPoolFBoardPeriodInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FStockPoolFBoardPeriodInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FStockPoolFBoardPeriodInfo();
    tmp.stock = is.readStruct(0, false, FuPan.FStockUnique);
    tmp.stBoard = is.readStruct(1, false, _TAF_MODULE_B_.FuPan.FBoardPeriod);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FStockPoolFBoardPeriodInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stock);
    os.writeStruct(1, this.stBoard);
    os.resumePrecision && os.resumePrecision();
};
FuPan.FStockPoolFBoardPeriodInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FStockPoolFBoardPeriodInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FStockPoolFBoardPeriodInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.stock = this.stock.toObject();
    tmp.stBoard = this.stBoard.toObject();
    
    return tmp;
}
FuPan.FStockPoolFBoardPeriodInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stock") || (this.stock.readFromObject(json.stock));
    !json.hasOwnProperty("stBoard") || (this.stBoard.readFromObject(json.stBoard));
}
FuPan.FStockPoolFBoardPeriodInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FStockPoolFBoardPeriodInfo.new = function () {
    return new FuPan.FStockPoolFBoardPeriodInfo();
}
FuPan.FStockPoolFBoardPeriodInfo.create = function (is) {
    return FuPan.FStockPoolFBoardPeriodInfo._readFrom(is);
}
FuPan.FStockPoolFBoardPeriodRsp = function() {
    this.vecStBoardPeriodData = new TafStream.List(FuPan.FStockPoolFBoardPeriodInfo);
    this._classname = "FuPan.FStockPoolFBoardPeriodRsp";
};
FuPan.FStockPoolFBoardPeriodRsp.prototype = new TafStream.JceStruct();
FuPan.FStockPoolFBoardPeriodRsp._classname = "FuPan.FStockPoolFBoardPeriodRsp";

FuPan.FStockPoolFBoardPeriodRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FStockPoolFBoardPeriodRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FStockPoolFBoardPeriodRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FStockPoolFBoardPeriodRsp();
    tmp.vecStBoardPeriodData = is.readList(0, false, TafStream.List(FuPan.FStockPoolFBoardPeriodInfo));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FStockPoolFBoardPeriodRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecStBoardPeriodData != undefined) {
        os.writeList(0, this.vecStBoardPeriodData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FStockPoolFBoardPeriodRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FStockPoolFBoardPeriodRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FStockPoolFBoardPeriodRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecStBoardPeriodData = this.vecStBoardPeriodData.toObject();
    
    return tmp;
}
FuPan.FStockPoolFBoardPeriodRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecStBoardPeriodData") || (this.vecStBoardPeriodData.readFromObject(json.vecStBoardPeriodData));
}
FuPan.FStockPoolFBoardPeriodRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FStockPoolFBoardPeriodRsp.new = function () {
    return new FuPan.FStockPoolFBoardPeriodRsp();
}
FuPan.FStockPoolFBoardPeriodRsp.create = function (is) {
    return FuPan.FStockPoolFBoardPeriodRsp._readFrom(is);
}
FuPan.FHisFactorReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.eHisFactorType = _TAF_MODULE_F_.FuPan.E_HIS_FACTOR_TYPE.E_HIS_FACTOR_HOT_SUBJECT;
    this.nStartDate = 0;
    this.nEndDate = 0;
    this.nDayNum = 1;
    this._classname = "FuPan.FHisFactorReq";
};
FuPan.FHisFactorReq.prototype = new TafStream.JceStruct();
FuPan.FHisFactorReq._classname = "FuPan.FHisFactorReq";

FuPan.FHisFactorReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FHisFactorReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FHisFactorReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FHisFactorReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.eHisFactorType = is.readInt32(1, false, _TAF_MODULE_F_.FuPan.E_HIS_FACTOR_TYPE.E_HIS_FACTOR_HOT_SUBJECT);
    tmp.nStartDate = is.readInt32(2, false, 0);
    tmp.nEndDate = is.readInt32(3, false, 0);
    tmp.nDayNum = is.readInt32(4, false, 1);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FHisFactorReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.eHisFactorType != undefined) {
        os.writeInt32(1, this.eHisFactorType);
    }
    if (this.nStartDate != undefined && this.nStartDate != 0) {
        os.writeInt32(2, this.nStartDate);
    }
    if (this.nEndDate != undefined && this.nEndDate != 0) {
        os.writeInt32(3, this.nEndDate);
    }
    if (this.nDayNum != undefined && this.nDayNum != 1) {
        os.writeInt32(4, this.nDayNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FHisFactorReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FHisFactorReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FHisFactorReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.eHisFactorType = this.eHisFactorType;
    tmp.nStartDate = this.nStartDate;
    tmp.nEndDate = this.nEndDate;
    tmp.nDayNum = this.nDayNum;
    
    return tmp;
}
FuPan.FHisFactorReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("eHisFactorType") || (this.eHisFactorType = json.eHisFactorType);
    !json.hasOwnProperty("nStartDate") || (this.nStartDate = json.nStartDate);
    !json.hasOwnProperty("nEndDate") || (this.nEndDate = json.nEndDate);
    !json.hasOwnProperty("nDayNum") || (this.nDayNum = json.nDayNum);
}
FuPan.FHisFactorReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FHisFactorReq.new = function () {
    return new FuPan.FHisFactorReq();
}
FuPan.FHisFactorReq.create = function (is) {
    return FuPan.FHisFactorReq._readFrom(is);
}
FuPan.FHisFactorRsp = function() {
    this.eHisFactorType = _TAF_MODULE_F_.FuPan.E_HIS_FACTOR_TYPE.E_HIS_FACTOR_MAKE_MONEY_EFFECT;
    this.nStartDate = 0;
    this.nEndDate = 0;
    this.nDayNum = 0;
    this.vecHisFactorData = new TafStream.List(_TAF_MODULE_F_.FuPan.FHisFactorData);
    this._classname = "FuPan.FHisFactorRsp";
};
FuPan.FHisFactorRsp.prototype = new TafStream.JceStruct();
FuPan.FHisFactorRsp._classname = "FuPan.FHisFactorRsp";

FuPan.FHisFactorRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FHisFactorRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FHisFactorRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FHisFactorRsp();
    tmp.eHisFactorType = is.readInt32(0, false, _TAF_MODULE_F_.FuPan.E_HIS_FACTOR_TYPE.E_HIS_FACTOR_MAKE_MONEY_EFFECT);
    tmp.nStartDate = is.readInt32(1, false, 0);
    tmp.nEndDate = is.readInt32(2, false, 0);
    tmp.nDayNum = is.readInt32(3, false, 0);
    tmp.vecHisFactorData = is.readList(4, false, TafStream.List(_TAF_MODULE_F_.FuPan.FHisFactorData));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FHisFactorRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.eHisFactorType != undefined) {
        os.writeInt32(0, this.eHisFactorType);
    }
    if (this.nStartDate != undefined && this.nStartDate != 0) {
        os.writeInt32(1, this.nStartDate);
    }
    if (this.nEndDate != undefined && this.nEndDate != 0) {
        os.writeInt32(2, this.nEndDate);
    }
    if (this.nDayNum != undefined && this.nDayNum != 0) {
        os.writeInt32(3, this.nDayNum);
    }
    if (this.vecHisFactorData != undefined) {
        os.writeList(4, this.vecHisFactorData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FHisFactorRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FHisFactorRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FHisFactorRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.eHisFactorType = this.eHisFactorType;
    tmp.nStartDate = this.nStartDate;
    tmp.nEndDate = this.nEndDate;
    tmp.nDayNum = this.nDayNum;
    tmp.vecHisFactorData = this.vecHisFactorData.toObject();
    
    return tmp;
}
FuPan.FHisFactorRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("eHisFactorType") || (this.eHisFactorType = json.eHisFactorType);
    !json.hasOwnProperty("nStartDate") || (this.nStartDate = json.nStartDate);
    !json.hasOwnProperty("nEndDate") || (this.nEndDate = json.nEndDate);
    !json.hasOwnProperty("nDayNum") || (this.nDayNum = json.nDayNum);
    !json.hasOwnProperty("vecHisFactorData") || (this.vecHisFactorData.readFromObject(json.vecHisFactorData));
}
FuPan.FHisFactorRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FHisFactorRsp.new = function () {
    return new FuPan.FHisFactorRsp();
}
FuPan.FHisFactorRsp.create = function (is) {
    return FuPan.FHisFactorRsp._readFrom(is);
}
FuPan.FSubDragonHeadBlkInfo = function() {
    this.blk = new _TAF_MODULE_B_.FuPan.StockInfo();
    this._classname = "FuPan.FSubDragonHeadBlkInfo";
};
FuPan.FSubDragonHeadBlkInfo.prototype = new TafStream.JceStruct();
FuPan.FSubDragonHeadBlkInfo._classname = "FuPan.FSubDragonHeadBlkInfo";

FuPan.FSubDragonHeadBlkInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FSubDragonHeadBlkInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FSubDragonHeadBlkInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FSubDragonHeadBlkInfo();
    tmp.blk = is.readStruct(0, false, _TAF_MODULE_B_.FuPan.StockInfo);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FSubDragonHeadBlkInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.blk);
    os.resumePrecision && os.resumePrecision();
};
FuPan.FSubDragonHeadBlkInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FSubDragonHeadBlkInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FSubDragonHeadBlkInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.blk = this.blk.toObject();
    
    return tmp;
}
FuPan.FSubDragonHeadBlkInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("blk") || (this.blk.readFromObject(json.blk));
}
FuPan.FSubDragonHeadBlkInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FSubDragonHeadBlkInfo.new = function () {
    return new FuPan.FSubDragonHeadBlkInfo();
}
FuPan.FSubDragonHeadBlkInfo.create = function (is) {
    return FuPan.FSubDragonHeadBlkInfo._readFrom(is);
}
FuPan.FBatchSubDragonHeadStockReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.vecSubject = new TafStream.List(FuPan.FSubDragonHeadBlkInfo);
    this.lRefreshTime = 0;
    this._classname = "FuPan.FBatchSubDragonHeadStockReq";
};
FuPan.FBatchSubDragonHeadStockReq.prototype = new TafStream.JceStruct();
FuPan.FBatchSubDragonHeadStockReq._classname = "FuPan.FBatchSubDragonHeadStockReq";

FuPan.FBatchSubDragonHeadStockReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBatchSubDragonHeadStockReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBatchSubDragonHeadStockReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBatchSubDragonHeadStockReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.vecSubject = is.readList(1, false, TafStream.List(FuPan.FSubDragonHeadBlkInfo));
    tmp.lRefreshTime = is.readInt64(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBatchSubDragonHeadStockReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.vecSubject != undefined) {
        os.writeList(1, this.vecSubject);
    }
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(2, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBatchSubDragonHeadStockReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBatchSubDragonHeadStockReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBatchSubDragonHeadStockReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.vecSubject = this.vecSubject.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FBatchSubDragonHeadStockReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("vecSubject") || (this.vecSubject.readFromObject(json.vecSubject));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FBatchSubDragonHeadStockReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBatchSubDragonHeadStockReq.new = function () {
    return new FuPan.FBatchSubDragonHeadStockReq();
}
FuPan.FBatchSubDragonHeadStockReq.create = function (is) {
    return FuPan.FBatchSubDragonHeadStockReq._readFrom(is);
}
FuPan.FSimpleStockInfo = function() {
    this.iMarket = 0;
    this.sCode = "";
    this._classname = "FuPan.FSimpleStockInfo";
};
FuPan.FSimpleStockInfo.prototype = new TafStream.JceStruct();
FuPan.FSimpleStockInfo._classname = "FuPan.FSimpleStockInfo";

FuPan.FSimpleStockInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FSimpleStockInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FSimpleStockInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FSimpleStockInfo();
    tmp.iMarket = is.readInt32(0, false, 0);
    tmp.sCode = is.readString(1, false, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FSimpleStockInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iMarket != undefined && this.iMarket != 0) {
        os.writeInt32(0, this.iMarket);
    }
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FSimpleStockInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FSimpleStockInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FSimpleStockInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.iMarket = this.iMarket;
    tmp.sCode = this.sCode;
    
    return tmp;
}
FuPan.FSimpleStockInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iMarket") || (this.iMarket = json.iMarket);
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
}
FuPan.FSimpleStockInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FSimpleStockInfo.new = function () {
    return new FuPan.FSimpleStockInfo();
}
FuPan.FSimpleStockInfo.create = function (is) {
    return FuPan.FSimpleStockInfo._readFrom(is);
}
FuPan.FSubDragonHeadBlkRspInfo = function() {
    this.blk = new _TAF_MODULE_B_.FuPan.StockInfo();
    this.vecStk = new TafStream.List(FuPan.FSimpleStockInfo);
    this._classname = "FuPan.FSubDragonHeadBlkRspInfo";
};
FuPan.FSubDragonHeadBlkRspInfo.prototype = new TafStream.JceStruct();
FuPan.FSubDragonHeadBlkRspInfo._classname = "FuPan.FSubDragonHeadBlkRspInfo";

FuPan.FSubDragonHeadBlkRspInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FSubDragonHeadBlkRspInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FSubDragonHeadBlkRspInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FSubDragonHeadBlkRspInfo();
    tmp.blk = is.readStruct(0, false, _TAF_MODULE_B_.FuPan.StockInfo);
    tmp.vecStk = is.readList(1, false, TafStream.List(FuPan.FSimpleStockInfo));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FSubDragonHeadBlkRspInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.blk);
    if (this.vecStk != undefined) {
        os.writeList(1, this.vecStk);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FSubDragonHeadBlkRspInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FSubDragonHeadBlkRspInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FSubDragonHeadBlkRspInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.blk = this.blk.toObject();
    tmp.vecStk = this.vecStk.toObject();
    
    return tmp;
}
FuPan.FSubDragonHeadBlkRspInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("blk") || (this.blk.readFromObject(json.blk));
    !json.hasOwnProperty("vecStk") || (this.vecStk.readFromObject(json.vecStk));
}
FuPan.FSubDragonHeadBlkRspInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FSubDragonHeadBlkRspInfo.new = function () {
    return new FuPan.FSubDragonHeadBlkRspInfo();
}
FuPan.FSubDragonHeadBlkRspInfo.create = function (is) {
    return FuPan.FSubDragonHeadBlkRspInfo._readFrom(is);
}
FuPan.FSubDragonHeadStockRsp = function() {
    this.vecSubject = new TafStream.List(FuPan.FSubDragonHeadBlkRspInfo);
    this.lRefreshTime = 0;
    this._classname = "FuPan.FSubDragonHeadStockRsp";
};
FuPan.FSubDragonHeadStockRsp.prototype = new TafStream.JceStruct();
FuPan.FSubDragonHeadStockRsp._classname = "FuPan.FSubDragonHeadStockRsp";

FuPan.FSubDragonHeadStockRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FSubDragonHeadStockRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FSubDragonHeadStockRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FSubDragonHeadStockRsp();
    tmp.vecSubject = is.readList(0, false, TafStream.List(FuPan.FSubDragonHeadBlkRspInfo));
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FSubDragonHeadStockRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecSubject != undefined) {
        os.writeList(0, this.vecSubject);
    }
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FSubDragonHeadStockRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FSubDragonHeadStockRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FSubDragonHeadStockRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecSubject = this.vecSubject.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FSubDragonHeadStockRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecSubject") || (this.vecSubject.readFromObject(json.vecSubject));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FSubDragonHeadStockRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FSubDragonHeadStockRsp.new = function () {
    return new FuPan.FSubDragonHeadStockRsp();
}
FuPan.FSubDragonHeadStockRsp.create = function (is) {
    return FuPan.FSubDragonHeadStockRsp._readFrom(is);
}
FuPan.FZTTrendStockReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.iCount = 1;
    this.lRefreshTime = 0;
    this._classname = "FuPan.FZTTrendStockReq";
};
FuPan.FZTTrendStockReq.prototype = new TafStream.JceStruct();
FuPan.FZTTrendStockReq._classname = "FuPan.FZTTrendStockReq";

FuPan.FZTTrendStockReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZTTrendStockReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZTTrendStockReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZTTrendStockReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.iCount = is.readInt32(1, false, 1);
    tmp.lRefreshTime = is.readInt64(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZTTrendStockReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.iCount != undefined && this.iCount != 1) {
        os.writeInt32(1, this.iCount);
    }
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(2, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZTTrendStockReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZTTrendStockReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZTTrendStockReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.iCount = this.iCount;
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FZTTrendStockReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("iCount") || (this.iCount = json.iCount);
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FZTTrendStockReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZTTrendStockReq.new = function () {
    return new FuPan.FZTTrendStockReq();
}
FuPan.FZTTrendStockReq.create = function (is) {
    return FuPan.FZTTrendStockReq._readFrom(is);
}
FuPan.FSimpleZTStockInfo = function() {
    this.iMarket = 0;
    this.sCode = "";
    this.iContinueBoard = 0;
    this.stBoard = new _TAF_MODULE_B_.FuPan.FBoardPeriod();
    this.eType = _TAF_MODULE_B_.FuPan.E_STOCK_ZT_TYPE.E_STOCK_ZT_UNKNOWN;
    this.iLastZTime = 0;
    this.vecHotBlk = new TafStream.List(_TAF_MODULE_F_.FuPan.FHotBlockInfo);
    this.dChgRatio = 0;
    this.bUnOpenNewStock = true;
    this._classname = "FuPan.FSimpleZTStockInfo";
};
FuPan.FSimpleZTStockInfo.prototype = new TafStream.JceStruct();
FuPan.FSimpleZTStockInfo._classname = "FuPan.FSimpleZTStockInfo";

FuPan.FSimpleZTStockInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FSimpleZTStockInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FSimpleZTStockInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FSimpleZTStockInfo();
    tmp.iMarket = is.readInt32(0, false, 0);
    tmp.sCode = is.readString(1, false, "");
    tmp.iContinueBoard = is.readInt32(2, false, 0);
    tmp.stBoard = is.readStruct(3, false, _TAF_MODULE_B_.FuPan.FBoardPeriod);
    tmp.eType = is.readInt32(4, false, _TAF_MODULE_B_.FuPan.E_STOCK_ZT_TYPE.E_STOCK_ZT_UNKNOWN);
    tmp.iLastZTime = is.readInt32(5, false, 0);
    tmp.vecHotBlk = is.readList(6, false, TafStream.List(_TAF_MODULE_F_.FuPan.FHotBlockInfo));
    tmp.dChgRatio = is.readDouble(7, false, 0);
    tmp.bUnOpenNewStock = is.readBoolean(8, false, true);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FSimpleZTStockInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iMarket != undefined && this.iMarket != 0) {
        os.writeInt32(0, this.iMarket);
    }
    if (this.sCode != undefined && this.sCode != "") {
        os.writeString(1, this.sCode);
    }
    if (this.iContinueBoard != undefined && this.iContinueBoard != 0) {
        os.writeInt32(2, this.iContinueBoard);
    }
    os.writeStruct(3, this.stBoard);
    if (this.eType != undefined) {
        os.writeInt32(4, this.eType);
    }
    if (this.iLastZTime != undefined && this.iLastZTime != 0) {
        os.writeInt32(5, this.iLastZTime);
    }
    if (this.vecHotBlk != undefined) {
        os.writeList(6, this.vecHotBlk);
    }
    if (this.dChgRatio != undefined && this.dChgRatio != 0) {
        os.writeDouble(7, this.dChgRatio);
    }
    if (this.bUnOpenNewStock != undefined && this.bUnOpenNewStock != true) {
        os.writeBoolean(8, this.bUnOpenNewStock);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FSimpleZTStockInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FSimpleZTStockInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FSimpleZTStockInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.iMarket = this.iMarket;
    tmp.sCode = this.sCode;
    tmp.iContinueBoard = this.iContinueBoard;
    tmp.stBoard = this.stBoard.toObject();
    tmp.eType = this.eType;
    tmp.iLastZTime = this.iLastZTime;
    tmp.vecHotBlk = this.vecHotBlk.toObject();
    tmp.dChgRatio = this.dChgRatio;
    tmp.bUnOpenNewStock = this.bUnOpenNewStock;
    
    return tmp;
}
FuPan.FSimpleZTStockInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iMarket") || (this.iMarket = json.iMarket);
    !json.hasOwnProperty("sCode") || (this.sCode = json.sCode);
    !json.hasOwnProperty("iContinueBoard") || (this.iContinueBoard = json.iContinueBoard);
    !json.hasOwnProperty("stBoard") || (this.stBoard.readFromObject(json.stBoard));
    !json.hasOwnProperty("eType") || (this.eType = json.eType);
    !json.hasOwnProperty("iLastZTime") || (this.iLastZTime = json.iLastZTime);
    !json.hasOwnProperty("vecHotBlk") || (this.vecHotBlk.readFromObject(json.vecHotBlk));
    !json.hasOwnProperty("dChgRatio") || (this.dChgRatio = json.dChgRatio);
    !json.hasOwnProperty("bUnOpenNewStock") || (this.bUnOpenNewStock = json.bUnOpenNewStock);
}
FuPan.FSimpleZTStockInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FSimpleZTStockInfo.new = function () {
    return new FuPan.FSimpleZTStockInfo();
}
FuPan.FSimpleZTStockInfo.create = function (is) {
    return FuPan.FSimpleZTStockInfo._readFrom(is);
}
FuPan.FZTTrendStockRsp = function() {
    this.vecStock = new TafStream.List(FuPan.FSimpleZTStockInfo);
    this.lRefreshTime = 0;
    this._classname = "FuPan.FZTTrendStockRsp";
};
FuPan.FZTTrendStockRsp.prototype = new TafStream.JceStruct();
FuPan.FZTTrendStockRsp._classname = "FuPan.FZTTrendStockRsp";

FuPan.FZTTrendStockRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZTTrendStockRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZTTrendStockRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZTTrendStockRsp();
    tmp.vecStock = is.readList(0, false, TafStream.List(FuPan.FSimpleZTStockInfo));
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZTTrendStockRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecStock != undefined) {
        os.writeList(0, this.vecStock);
    }
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZTTrendStockRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZTTrendStockRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZTTrendStockRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecStock = this.vecStock.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FZTTrendStockRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecStock") || (this.vecStock.readFromObject(json.vecStock));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FZTTrendStockRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZTTrendStockRsp.new = function () {
    return new FuPan.FZTTrendStockRsp();
}
FuPan.FZTTrendStockRsp.create = function (is) {
    return FuPan.FZTTrendStockRsp._readFrom(is);
}
FuPan.FZTModelStockReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.iCount = 3;
    this.lRefreshTime = 0;
    this._classname = "FuPan.FZTModelStockReq";
};
FuPan.FZTModelStockReq.prototype = new TafStream.JceStruct();
FuPan.FZTModelStockReq._classname = "FuPan.FZTModelStockReq";

FuPan.FZTModelStockReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZTModelStockReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZTModelStockReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZTModelStockReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.iCount = is.readInt32(1, false, 3);
    tmp.lRefreshTime = is.readInt64(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZTModelStockReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.iCount != undefined && this.iCount != 3) {
        os.writeInt32(1, this.iCount);
    }
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(2, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZTModelStockReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZTModelStockReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZTModelStockReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.iCount = this.iCount;
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FZTModelStockReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("iCount") || (this.iCount = json.iCount);
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FZTModelStockReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZTModelStockReq.new = function () {
    return new FuPan.FZTModelStockReq();
}
FuPan.FZTModelStockReq.create = function (is) {
    return FuPan.FZTModelStockReq._readFrom(is);
}
FuPan.FZTModelBlkInfo = function() {
    this.blk = new _TAF_MODULE_B_.FuPan.StockInfo();
    this.vecStock = new TafStream.List(FuPan.FSimpleZTStockInfo);
    this.iHot = 0;
    this._classname = "FuPan.FZTModelBlkInfo";
};
FuPan.FZTModelBlkInfo.prototype = new TafStream.JceStruct();
FuPan.FZTModelBlkInfo._classname = "FuPan.FZTModelBlkInfo";

FuPan.FZTModelBlkInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZTModelBlkInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZTModelBlkInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZTModelBlkInfo();
    tmp.blk = is.readStruct(0, false, _TAF_MODULE_B_.FuPan.StockInfo);
    tmp.vecStock = is.readList(1, false, TafStream.List(FuPan.FSimpleZTStockInfo));
    tmp.iHot = is.readInt32(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZTModelBlkInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.blk);
    if (this.vecStock != undefined) {
        os.writeList(1, this.vecStock);
    }
    if (this.iHot != undefined && this.iHot != 0) {
        os.writeInt32(2, this.iHot);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZTModelBlkInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZTModelBlkInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZTModelBlkInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.blk = this.blk.toObject();
    tmp.vecStock = this.vecStock.toObject();
    tmp.iHot = this.iHot;
    
    return tmp;
}
FuPan.FZTModelBlkInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("blk") || (this.blk.readFromObject(json.blk));
    !json.hasOwnProperty("vecStock") || (this.vecStock.readFromObject(json.vecStock));
    !json.hasOwnProperty("iHot") || (this.iHot = json.iHot);
}
FuPan.FZTModelBlkInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZTModelBlkInfo.new = function () {
    return new FuPan.FZTModelBlkInfo();
}
FuPan.FZTModelBlkInfo.create = function (is) {
    return FuPan.FZTModelBlkInfo._readFrom(is);
}
FuPan.FZTModelInfo = function() {
    this.stkInfo = new FuPan.FSimpleZTStockInfo();
    this.modelInfo = new FuPan.FZTModelBlkInfo();
    this._classname = "FuPan.FZTModelInfo";
};
FuPan.FZTModelInfo.prototype = new TafStream.JceStruct();
FuPan.FZTModelInfo._classname = "FuPan.FZTModelInfo";

FuPan.FZTModelInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZTModelInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZTModelInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZTModelInfo();
    tmp.stkInfo = is.readStruct(0, false, FuPan.FSimpleZTStockInfo);
    tmp.modelInfo = is.readStruct(1, false, FuPan.FZTModelBlkInfo);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZTModelInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stkInfo);
    os.writeStruct(1, this.modelInfo);
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZTModelInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZTModelInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZTModelInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.stkInfo = this.stkInfo.toObject();
    tmp.modelInfo = this.modelInfo.toObject();
    
    return tmp;
}
FuPan.FZTModelInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stkInfo") || (this.stkInfo.readFromObject(json.stkInfo));
    !json.hasOwnProperty("modelInfo") || (this.modelInfo.readFromObject(json.modelInfo));
}
FuPan.FZTModelInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZTModelInfo.new = function () {
    return new FuPan.FZTModelInfo();
}
FuPan.FZTModelInfo.create = function (is) {
    return FuPan.FZTModelInfo._readFrom(is);
}
FuPan.FZTModelStockRsp = function() {
    this.vecModelInfo = new TafStream.List(FuPan.FZTModelInfo);
    this.lRefreshTime = 0;
    this._classname = "FuPan.FZTModelStockRsp";
};
FuPan.FZTModelStockRsp.prototype = new TafStream.JceStruct();
FuPan.FZTModelStockRsp._classname = "FuPan.FZTModelStockRsp";

FuPan.FZTModelStockRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZTModelStockRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZTModelStockRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZTModelStockRsp();
    tmp.vecModelInfo = is.readList(0, false, TafStream.List(FuPan.FZTModelInfo));
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZTModelStockRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecModelInfo != undefined) {
        os.writeList(0, this.vecModelInfo);
    }
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZTModelStockRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZTModelStockRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZTModelStockRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecModelInfo = this.vecModelInfo.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FZTModelStockRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecModelInfo") || (this.vecModelInfo.readFromObject(json.vecModelInfo));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FZTModelStockRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZTModelStockRsp.new = function () {
    return new FuPan.FZTModelStockRsp();
}
FuPan.FZTModelStockRsp.create = function (is) {
    return FuPan.FZTModelStockRsp._readFrom(is);
}
FuPan.FSubNewStockReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.lRefreshTime = 0;
    this._classname = "FuPan.FSubNewStockReq";
};
FuPan.FSubNewStockReq.prototype = new TafStream.JceStruct();
FuPan.FSubNewStockReq._classname = "FuPan.FSubNewStockReq";

FuPan.FSubNewStockReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FSubNewStockReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FSubNewStockReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FSubNewStockReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.lRefreshTime = is.readInt64(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FSubNewStockReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(2, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FSubNewStockReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FSubNewStockReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FSubNewStockReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FSubNewStockReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FSubNewStockReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FSubNewStockReq.new = function () {
    return new FuPan.FSubNewStockReq();
}
FuPan.FSubNewStockReq.create = function (is) {
    return FuPan.FSubNewStockReq._readFrom(is);
}
FuPan.FSubNewStockInfo = function() {
    this.stkInfo = new _TAF_MODULE_F_.FuPan.FMDaySubNewStockInfo();
    this.vecBlk = new TafStream.List(_TAF_MODULE_B_.FuPan.FBlockSimpleInfo);
    this._classname = "FuPan.FSubNewStockInfo";
};
FuPan.FSubNewStockInfo.prototype = new TafStream.JceStruct();
FuPan.FSubNewStockInfo._classname = "FuPan.FSubNewStockInfo";

FuPan.FSubNewStockInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FSubNewStockInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FSubNewStockInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FSubNewStockInfo();
    tmp.stkInfo = is.readStruct(0, false, _TAF_MODULE_F_.FuPan.FMDaySubNewStockInfo);
    tmp.vecBlk = is.readList(1, false, TafStream.List(_TAF_MODULE_B_.FuPan.FBlockSimpleInfo));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FSubNewStockInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stkInfo);
    if (this.vecBlk != undefined) {
        os.writeList(1, this.vecBlk);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FSubNewStockInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FSubNewStockInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FSubNewStockInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.stkInfo = this.stkInfo.toObject();
    tmp.vecBlk = this.vecBlk.toObject();
    
    return tmp;
}
FuPan.FSubNewStockInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stkInfo") || (this.stkInfo.readFromObject(json.stkInfo));
    !json.hasOwnProperty("vecBlk") || (this.vecBlk.readFromObject(json.vecBlk));
}
FuPan.FSubNewStockInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FSubNewStockInfo.new = function () {
    return new FuPan.FSubNewStockInfo();
}
FuPan.FSubNewStockInfo.create = function (is) {
    return FuPan.FSubNewStockInfo._readFrom(is);
}
FuPan.FSubNewStockRsp = function() {
    this.vecStk = new TafStream.List(FuPan.FSubNewStockInfo);
    this.lRefreshTime = 0;
    this._classname = "FuPan.FSubNewStockRsp";
};
FuPan.FSubNewStockRsp.prototype = new TafStream.JceStruct();
FuPan.FSubNewStockRsp._classname = "FuPan.FSubNewStockRsp";

FuPan.FSubNewStockRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FSubNewStockRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FSubNewStockRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FSubNewStockRsp();
    tmp.vecStk = is.readList(0, false, TafStream.List(FuPan.FSubNewStockInfo));
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FSubNewStockRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecStk != undefined) {
        os.writeList(0, this.vecStk);
    }
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FSubNewStockRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FSubNewStockRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FSubNewStockRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecStk = this.vecStk.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FSubNewStockRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecStk") || (this.vecStk.readFromObject(json.vecStk));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FSubNewStockRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FSubNewStockRsp.new = function () {
    return new FuPan.FSubNewStockRsp();
}
FuPan.FSubNewStockRsp.create = function (is) {
    return FuPan.FSubNewStockRsp._readFrom(is);
}
FuPan.FBlkUnuActReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.lRefreshTime = 0;
    this._classname = "FuPan.FBlkUnuActReq";
};
FuPan.FBlkUnuActReq.prototype = new TafStream.JceStruct();
FuPan.FBlkUnuActReq._classname = "FuPan.FBlkUnuActReq";

FuPan.FBlkUnuActReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkUnuActReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkUnuActReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkUnuActReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkUnuActReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkUnuActReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkUnuActReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkUnuActReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FBlkUnuActReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FBlkUnuActReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkUnuActReq.new = function () {
    return new FuPan.FBlkUnuActReq();
}
FuPan.FBlkUnuActReq.create = function (is) {
    return FuPan.FBlkUnuActReq._readFrom(is);
}
FuPan.FBlkUnuActDetailInfo = function() {
    this.blkUnuAct = new _TAF_MODULE_F_.FuPan.FBlkUnuActInfo();
    this.iNDaysUnuActTime = 0;
    this._classname = "FuPan.FBlkUnuActDetailInfo";
};
FuPan.FBlkUnuActDetailInfo.prototype = new TafStream.JceStruct();
FuPan.FBlkUnuActDetailInfo._classname = "FuPan.FBlkUnuActDetailInfo";

FuPan.FBlkUnuActDetailInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkUnuActDetailInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkUnuActDetailInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkUnuActDetailInfo();
    tmp.blkUnuAct = is.readStruct(0, false, _TAF_MODULE_F_.FuPan.FBlkUnuActInfo);
    tmp.iNDaysUnuActTime = is.readInt32(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkUnuActDetailInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.blkUnuAct);
    if (this.iNDaysUnuActTime != undefined && this.iNDaysUnuActTime != 0) {
        os.writeInt32(1, this.iNDaysUnuActTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkUnuActDetailInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkUnuActDetailInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkUnuActDetailInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.blkUnuAct = this.blkUnuAct.toObject();
    tmp.iNDaysUnuActTime = this.iNDaysUnuActTime;
    
    return tmp;
}
FuPan.FBlkUnuActDetailInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("blkUnuAct") || (this.blkUnuAct.readFromObject(json.blkUnuAct));
    !json.hasOwnProperty("iNDaysUnuActTime") || (this.iNDaysUnuActTime = json.iNDaysUnuActTime);
}
FuPan.FBlkUnuActDetailInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkUnuActDetailInfo.new = function () {
    return new FuPan.FBlkUnuActDetailInfo();
}
FuPan.FBlkUnuActDetailInfo.create = function (is) {
    return FuPan.FBlkUnuActDetailInfo._readFrom(is);
}
FuPan.FBlkUnuActRsp = function() {
    this.vecBlkUnuActDetail = new TafStream.List(FuPan.FBlkUnuActDetailInfo);
    this.lRefreshTime = 0;
    this._classname = "FuPan.FBlkUnuActRsp";
};
FuPan.FBlkUnuActRsp.prototype = new TafStream.JceStruct();
FuPan.FBlkUnuActRsp._classname = "FuPan.FBlkUnuActRsp";

FuPan.FBlkUnuActRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkUnuActRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkUnuActRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkUnuActRsp();
    tmp.vecBlkUnuActDetail = is.readList(0, false, TafStream.List(FuPan.FBlkUnuActDetailInfo));
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkUnuActRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecBlkUnuActDetail != undefined) {
        os.writeList(0, this.vecBlkUnuActDetail);
    }
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkUnuActRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkUnuActRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkUnuActRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecBlkUnuActDetail = this.vecBlkUnuActDetail.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FBlkUnuActRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecBlkUnuActDetail") || (this.vecBlkUnuActDetail.readFromObject(json.vecBlkUnuActDetail));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FBlkUnuActRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkUnuActRsp.new = function () {
    return new FuPan.FBlkUnuActRsp();
}
FuPan.FBlkUnuActRsp.create = function (is) {
    return FuPan.FBlkUnuActRsp._readFrom(is);
}
FuPan.FBlkUnuActFlagReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.lRefreshTime = 0;
    this._classname = "FuPan.FBlkUnuActFlagReq";
};
FuPan.FBlkUnuActFlagReq.prototype = new TafStream.JceStruct();
FuPan.FBlkUnuActFlagReq._classname = "FuPan.FBlkUnuActFlagReq";

FuPan.FBlkUnuActFlagReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkUnuActFlagReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkUnuActFlagReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkUnuActFlagReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkUnuActFlagReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkUnuActFlagReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkUnuActFlagReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkUnuActFlagReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FBlkUnuActFlagReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FBlkUnuActFlagReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkUnuActFlagReq.new = function () {
    return new FuPan.FBlkUnuActFlagReq();
}
FuPan.FBlkUnuActFlagReq.create = function (is) {
    return FuPan.FBlkUnuActFlagReq._readFrom(is);
}
FuPan.FBlkUnuActFlagRsp = function() {
    this.vecBlkUnuActTag = new TafStream.List(_TAF_MODULE_F_.FuPan.FBlkUnuActTagInfo);
    this.lRefreshTime = 0;
    this._classname = "FuPan.FBlkUnuActFlagRsp";
};
FuPan.FBlkUnuActFlagRsp.prototype = new TafStream.JceStruct();
FuPan.FBlkUnuActFlagRsp._classname = "FuPan.FBlkUnuActFlagRsp";

FuPan.FBlkUnuActFlagRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkUnuActFlagRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkUnuActFlagRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkUnuActFlagRsp();
    tmp.vecBlkUnuActTag = is.readList(0, false, TafStream.List(_TAF_MODULE_F_.FuPan.FBlkUnuActTagInfo));
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkUnuActFlagRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecBlkUnuActTag != undefined) {
        os.writeList(0, this.vecBlkUnuActTag);
    }
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkUnuActFlagRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkUnuActFlagRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkUnuActFlagRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecBlkUnuActTag = this.vecBlkUnuActTag.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FBlkUnuActFlagRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecBlkUnuActTag") || (this.vecBlkUnuActTag.readFromObject(json.vecBlkUnuActTag));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FBlkUnuActFlagRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkUnuActFlagRsp.new = function () {
    return new FuPan.FBlkUnuActFlagRsp();
}
FuPan.FBlkUnuActFlagRsp.create = function (is) {
    return FuPan.FBlkUnuActFlagRsp._readFrom(is);
}
FuPan.FHotPointBlkStkReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.lRefreshTime = 0;
    this._classname = "FuPan.FHotPointBlkStkReq";
};
FuPan.FHotPointBlkStkReq.prototype = new TafStream.JceStruct();
FuPan.FHotPointBlkStkReq._classname = "FuPan.FHotPointBlkStkReq";

FuPan.FHotPointBlkStkReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FHotPointBlkStkReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FHotPointBlkStkReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FHotPointBlkStkReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FHotPointBlkStkReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FHotPointBlkStkReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FHotPointBlkStkReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FHotPointBlkStkReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FHotPointBlkStkReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FHotPointBlkStkReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FHotPointBlkStkReq.new = function () {
    return new FuPan.FHotPointBlkStkReq();
}
FuPan.FHotPointBlkStkReq.create = function (is) {
    return FuPan.FHotPointBlkStkReq._readFrom(is);
}
FuPan.FHotPointBlkStockInfo = function() {
    this.stkInfo = new FuPan.FSimpleZTStockInfo();
    this.iDragonHeadIdx = 0;
    this._classname = "FuPan.FHotPointBlkStockInfo";
};
FuPan.FHotPointBlkStockInfo.prototype = new TafStream.JceStruct();
FuPan.FHotPointBlkStockInfo._classname = "FuPan.FHotPointBlkStockInfo";

FuPan.FHotPointBlkStockInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FHotPointBlkStockInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FHotPointBlkStockInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FHotPointBlkStockInfo();
    tmp.stkInfo = is.readStruct(0, false, FuPan.FSimpleZTStockInfo);
    tmp.iDragonHeadIdx = is.readInt32(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FHotPointBlkStockInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stkInfo);
    if (this.iDragonHeadIdx != undefined && this.iDragonHeadIdx != 0) {
        os.writeInt32(1, this.iDragonHeadIdx);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FHotPointBlkStockInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FHotPointBlkStockInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FHotPointBlkStockInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.stkInfo = this.stkInfo.toObject();
    tmp.iDragonHeadIdx = this.iDragonHeadIdx;
    
    return tmp;
}
FuPan.FHotPointBlkStockInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stkInfo") || (this.stkInfo.readFromObject(json.stkInfo));
    !json.hasOwnProperty("iDragonHeadIdx") || (this.iDragonHeadIdx = json.iDragonHeadIdx);
}
FuPan.FHotPointBlkStockInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FHotPointBlkStockInfo.new = function () {
    return new FuPan.FHotPointBlkStockInfo();
}
FuPan.FHotPointBlkStockInfo.create = function (is) {
    return FuPan.FHotPointBlkStockInfo._readFrom(is);
}
FuPan.FHotPointBlkRspInfo = function() {
    this.blk = new _TAF_MODULE_B_.FuPan.StockInfo();
    this.vecStk = new TafStream.List(FuPan.FHotPointBlkStockInfo);
    this.iHot = 0;
    this._classname = "FuPan.FHotPointBlkRspInfo";
};
FuPan.FHotPointBlkRspInfo.prototype = new TafStream.JceStruct();
FuPan.FHotPointBlkRspInfo._classname = "FuPan.FHotPointBlkRspInfo";

FuPan.FHotPointBlkRspInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FHotPointBlkRspInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FHotPointBlkRspInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FHotPointBlkRspInfo();
    tmp.blk = is.readStruct(0, false, _TAF_MODULE_B_.FuPan.StockInfo);
    tmp.vecStk = is.readList(1, false, TafStream.List(FuPan.FHotPointBlkStockInfo));
    tmp.iHot = is.readInt32(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FHotPointBlkRspInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.blk);
    if (this.vecStk != undefined) {
        os.writeList(1, this.vecStk);
    }
    if (this.iHot != undefined && this.iHot != 0) {
        os.writeInt32(2, this.iHot);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FHotPointBlkRspInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FHotPointBlkRspInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FHotPointBlkRspInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.blk = this.blk.toObject();
    tmp.vecStk = this.vecStk.toObject();
    tmp.iHot = this.iHot;
    
    return tmp;
}
FuPan.FHotPointBlkRspInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("blk") || (this.blk.readFromObject(json.blk));
    !json.hasOwnProperty("vecStk") || (this.vecStk.readFromObject(json.vecStk));
    !json.hasOwnProperty("iHot") || (this.iHot = json.iHot);
}
FuPan.FHotPointBlkRspInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FHotPointBlkRspInfo.new = function () {
    return new FuPan.FHotPointBlkRspInfo();
}
FuPan.FHotPointBlkRspInfo.create = function (is) {
    return FuPan.FHotPointBlkRspInfo._readFrom(is);
}
FuPan.FHotPointBlkStkRsp = function() {
    this.vecHotPointBlkStk = new TafStream.List(FuPan.FHotPointBlkRspInfo);
    this.lRefreshTime = 0;
    this._classname = "FuPan.FHotPointBlkStkRsp";
};
FuPan.FHotPointBlkStkRsp.prototype = new TafStream.JceStruct();
FuPan.FHotPointBlkStkRsp._classname = "FuPan.FHotPointBlkStkRsp";

FuPan.FHotPointBlkStkRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FHotPointBlkStkRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FHotPointBlkStkRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FHotPointBlkStkRsp();
    tmp.vecHotPointBlkStk = is.readList(0, false, TafStream.List(FuPan.FHotPointBlkRspInfo));
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FHotPointBlkStkRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecHotPointBlkStk != undefined) {
        os.writeList(0, this.vecHotPointBlkStk);
    }
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FHotPointBlkStkRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FHotPointBlkStkRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FHotPointBlkStkRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecHotPointBlkStk = this.vecHotPointBlkStk.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FHotPointBlkStkRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecHotPointBlkStk") || (this.vecHotPointBlkStk.readFromObject(json.vecHotPointBlkStk));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FHotPointBlkStkRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FHotPointBlkStkRsp.new = function () {
    return new FuPan.FHotPointBlkStkRsp();
}
FuPan.FHotPointBlkStkRsp.create = function (is) {
    return FuPan.FHotPointBlkStkRsp._readFrom(is);
}
FuPan.FUltraShortTermStkReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.lRefreshTime = 0;
    this._classname = "FuPan.FUltraShortTermStkReq";
};
FuPan.FUltraShortTermStkReq.prototype = new TafStream.JceStruct();
FuPan.FUltraShortTermStkReq._classname = "FuPan.FUltraShortTermStkReq";

FuPan.FUltraShortTermStkReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FUltraShortTermStkReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FUltraShortTermStkReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FUltraShortTermStkReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FUltraShortTermStkReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FUltraShortTermStkReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FUltraShortTermStkReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FUltraShortTermStkReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FUltraShortTermStkReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FUltraShortTermStkReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FUltraShortTermStkReq.new = function () {
    return new FuPan.FUltraShortTermStkReq();
}
FuPan.FUltraShortTermStkReq.create = function (is) {
    return FuPan.FUltraShortTermStkReq._readFrom(is);
}
FuPan.FUltraShortTermStkRsp = function() {
    this.stUltraStkPool = new _TAF_MODULE_F_.FuPan.FUltraShorttermStkPool();
    this.lRefreshTime = 0;
    this._classname = "FuPan.FUltraShortTermStkRsp";
};
FuPan.FUltraShortTermStkRsp.prototype = new TafStream.JceStruct();
FuPan.FUltraShortTermStkRsp._classname = "FuPan.FUltraShortTermStkRsp";

FuPan.FUltraShortTermStkRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FUltraShortTermStkRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FUltraShortTermStkRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FUltraShortTermStkRsp();
    tmp.stUltraStkPool = is.readStruct(0, false, _TAF_MODULE_F_.FuPan.FUltraShorttermStkPool);
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FUltraShortTermStkRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stUltraStkPool);
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FUltraShortTermStkRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FUltraShortTermStkRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FUltraShortTermStkRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.stUltraStkPool = this.stUltraStkPool.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FUltraShortTermStkRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stUltraStkPool") || (this.stUltraStkPool.readFromObject(json.stUltraStkPool));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FUltraShortTermStkRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FUltraShortTermStkRsp.new = function () {
    return new FuPan.FUltraShortTermStkRsp();
}
FuPan.FUltraShortTermStkRsp.create = function (is) {
    return FuPan.FUltraShortTermStkRsp._readFrom(is);
}
FuPan.FCatchBullStkReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.lRefreshTime = 0;
    this._classname = "FuPan.FCatchBullStkReq";
};
FuPan.FCatchBullStkReq.prototype = new TafStream.JceStruct();
FuPan.FCatchBullStkReq._classname = "FuPan.FCatchBullStkReq";

FuPan.FCatchBullStkReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FCatchBullStkReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FCatchBullStkReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FCatchBullStkReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FCatchBullStkReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FCatchBullStkReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FCatchBullStkReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FCatchBullStkReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FCatchBullStkReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FCatchBullStkReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FCatchBullStkReq.new = function () {
    return new FuPan.FCatchBullStkReq();
}
FuPan.FCatchBullStkReq.create = function (is) {
    return FuPan.FCatchBullStkReq._readFrom(is);
}
FuPan.FCatchBullStkRsp = function() {
    this.vecZtStk = new TafStream.List(FuPan.FSimpleZTStockInfo);
    this.vecFbStk = new TafStream.List(FuPan.FSimpleZTStockInfo);
    this.vecSnStk = new TafStream.List(FuPan.FSimpleZTStockInfo);
    this.lRefreshTime = 0;
    this._classname = "FuPan.FCatchBullStkRsp";
};
FuPan.FCatchBullStkRsp.prototype = new TafStream.JceStruct();
FuPan.FCatchBullStkRsp._classname = "FuPan.FCatchBullStkRsp";

FuPan.FCatchBullStkRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FCatchBullStkRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FCatchBullStkRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FCatchBullStkRsp();
    tmp.vecZtStk = is.readList(0, false, TafStream.List(FuPan.FSimpleZTStockInfo));
    tmp.vecFbStk = is.readList(1, false, TafStream.List(FuPan.FSimpleZTStockInfo));
    tmp.vecSnStk = is.readList(2, false, TafStream.List(FuPan.FSimpleZTStockInfo));
    tmp.lRefreshTime = is.readInt64(3, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FCatchBullStkRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecZtStk != undefined) {
        os.writeList(0, this.vecZtStk);
    }
    if (this.vecFbStk != undefined) {
        os.writeList(1, this.vecFbStk);
    }
    if (this.vecSnStk != undefined) {
        os.writeList(2, this.vecSnStk);
    }
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(3, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FCatchBullStkRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FCatchBullStkRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FCatchBullStkRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecZtStk = this.vecZtStk.toObject();
    tmp.vecFbStk = this.vecFbStk.toObject();
    tmp.vecSnStk = this.vecSnStk.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FCatchBullStkRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecZtStk") || (this.vecZtStk.readFromObject(json.vecZtStk));
    !json.hasOwnProperty("vecFbStk") || (this.vecFbStk.readFromObject(json.vecFbStk));
    !json.hasOwnProperty("vecSnStk") || (this.vecSnStk.readFromObject(json.vecSnStk));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FCatchBullStkRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FCatchBullStkRsp.new = function () {
    return new FuPan.FCatchBullStkRsp();
}
FuPan.FCatchBullStkRsp.create = function (is) {
    return FuPan.FCatchBullStkRsp._readFrom(is);
}
FuPan.FUltraShtLastZtStkReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.lRefreshTime = 0;
    this._classname = "FuPan.FUltraShtLastZtStkReq";
};
FuPan.FUltraShtLastZtStkReq.prototype = new TafStream.JceStruct();
FuPan.FUltraShtLastZtStkReq._classname = "FuPan.FUltraShtLastZtStkReq";

FuPan.FUltraShtLastZtStkReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FUltraShtLastZtStkReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FUltraShtLastZtStkReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FUltraShtLastZtStkReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FUltraShtLastZtStkReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FUltraShtLastZtStkReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FUltraShtLastZtStkReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FUltraShtLastZtStkReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FUltraShtLastZtStkReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FUltraShtLastZtStkReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FUltraShtLastZtStkReq.new = function () {
    return new FuPan.FUltraShtLastZtStkReq();
}
FuPan.FUltraShtLastZtStkReq.create = function (is) {
    return FuPan.FUltraShtLastZtStkReq._readFrom(is);
}
FuPan.FUltraShtLastZtStkRspInfo = function() {
    this.stkInfo = new FuPan.FSimpleZTStockInfo();
    this.eOriPool = _TAF_MODULE_F_.FuPan.E_UNITED_STK_POOL_TYPE.E_UNI_ZT_POOL;
    this.iLastZTTimeRank = 0;
    this._classname = "FuPan.FUltraShtLastZtStkRspInfo";
};
FuPan.FUltraShtLastZtStkRspInfo.prototype = new TafStream.JceStruct();
FuPan.FUltraShtLastZtStkRspInfo._classname = "FuPan.FUltraShtLastZtStkRspInfo";

FuPan.FUltraShtLastZtStkRspInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FUltraShtLastZtStkRspInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FUltraShtLastZtStkRspInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FUltraShtLastZtStkRspInfo();
    tmp.stkInfo = is.readStruct(0, false, FuPan.FSimpleZTStockInfo);
    tmp.eOriPool = is.readInt32(1, false, _TAF_MODULE_F_.FuPan.E_UNITED_STK_POOL_TYPE.E_UNI_ZT_POOL);
    tmp.iLastZTTimeRank = is.readInt32(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FUltraShtLastZtStkRspInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stkInfo);
    if (this.eOriPool != undefined) {
        os.writeInt32(1, this.eOriPool);
    }
    if (this.iLastZTTimeRank != undefined && this.iLastZTTimeRank != 0) {
        os.writeInt32(2, this.iLastZTTimeRank);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FUltraShtLastZtStkRspInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FUltraShtLastZtStkRspInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FUltraShtLastZtStkRspInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.stkInfo = this.stkInfo.toObject();
    tmp.eOriPool = this.eOriPool;
    tmp.iLastZTTimeRank = this.iLastZTTimeRank;
    
    return tmp;
}
FuPan.FUltraShtLastZtStkRspInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stkInfo") || (this.stkInfo.readFromObject(json.stkInfo));
    !json.hasOwnProperty("eOriPool") || (this.eOriPool = json.eOriPool);
    !json.hasOwnProperty("iLastZTTimeRank") || (this.iLastZTTimeRank = json.iLastZTTimeRank);
}
FuPan.FUltraShtLastZtStkRspInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FUltraShtLastZtStkRspInfo.new = function () {
    return new FuPan.FUltraShtLastZtStkRspInfo();
}
FuPan.FUltraShtLastZtStkRspInfo.create = function (is) {
    return FuPan.FUltraShtLastZtStkRspInfo._readFrom(is);
}
FuPan.FUltraShtLastZtStkRsp = function() {
    this.vecStk = new TafStream.List(FuPan.FUltraShtLastZtStkRspInfo);
    this.lRefreshTime = 0;
    this._classname = "FuPan.FUltraShtLastZtStkRsp";
};
FuPan.FUltraShtLastZtStkRsp.prototype = new TafStream.JceStruct();
FuPan.FUltraShtLastZtStkRsp._classname = "FuPan.FUltraShtLastZtStkRsp";

FuPan.FUltraShtLastZtStkRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FUltraShtLastZtStkRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FUltraShtLastZtStkRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FUltraShtLastZtStkRsp();
    tmp.vecStk = is.readList(0, false, TafStream.List(FuPan.FUltraShtLastZtStkRspInfo));
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FUltraShtLastZtStkRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecStk != undefined) {
        os.writeList(0, this.vecStk);
    }
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FUltraShtLastZtStkRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FUltraShtLastZtStkRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FUltraShtLastZtStkRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecStk = this.vecStk.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FUltraShtLastZtStkRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecStk") || (this.vecStk.readFromObject(json.vecStk));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FUltraShtLastZtStkRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FUltraShtLastZtStkRsp.new = function () {
    return new FuPan.FUltraShtLastZtStkRsp();
}
FuPan.FUltraShtLastZtStkRsp.create = function (is) {
    return FuPan.FUltraShtLastZtStkRsp._readFrom(is);
}
FuPan.FBlkBasicDataReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.vecBlk = new TafStream.List(_TAF_MODULE_B_.FuPan.StockInfo);
    this.eBasicDataType = _TAF_MODULE_G_.FuPan.E_BLK_BASIC_DATA_TYPE.E_BLK_BASIC_DATA_TYPE_ALL;
    this.iEndDate = 0;
    this.iPreDayNum = 1;
    this.iCmd = 0;
    this._classname = "FuPan.FBlkBasicDataReq";
};
FuPan.FBlkBasicDataReq.prototype = new TafStream.JceStruct();
FuPan.FBlkBasicDataReq._classname = "FuPan.FBlkBasicDataReq";

FuPan.FBlkBasicDataReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkBasicDataReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkBasicDataReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkBasicDataReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.vecBlk = is.readList(1, false, TafStream.List(_TAF_MODULE_B_.FuPan.StockInfo));
    tmp.eBasicDataType = is.readInt32(2, false, _TAF_MODULE_G_.FuPan.E_BLK_BASIC_DATA_TYPE.E_BLK_BASIC_DATA_TYPE_ALL);
    tmp.iEndDate = is.readInt32(3, false, 0);
    tmp.iPreDayNum = is.readInt32(4, false, 1);
    tmp.iCmd = is.readInt32(5, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkBasicDataReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.vecBlk != undefined) {
        os.writeList(1, this.vecBlk);
    }
    if (this.eBasicDataType != undefined) {
        os.writeInt32(2, this.eBasicDataType);
    }
    if (this.iEndDate != undefined && this.iEndDate != 0) {
        os.writeInt32(3, this.iEndDate);
    }
    if (this.iPreDayNum != undefined && this.iPreDayNum != 1) {
        os.writeInt32(4, this.iPreDayNum);
    }
    if (this.iCmd != undefined && this.iCmd != 0) {
        os.writeInt32(5, this.iCmd);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkBasicDataReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkBasicDataReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkBasicDataReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.vecBlk = this.vecBlk.toObject();
    tmp.eBasicDataType = this.eBasicDataType;
    tmp.iEndDate = this.iEndDate;
    tmp.iPreDayNum = this.iPreDayNum;
    tmp.iCmd = this.iCmd;
    
    return tmp;
}
FuPan.FBlkBasicDataReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("vecBlk") || (this.vecBlk.readFromObject(json.vecBlk));
    !json.hasOwnProperty("eBasicDataType") || (this.eBasicDataType = json.eBasicDataType);
    !json.hasOwnProperty("iEndDate") || (this.iEndDate = json.iEndDate);
    !json.hasOwnProperty("iPreDayNum") || (this.iPreDayNum = json.iPreDayNum);
    !json.hasOwnProperty("iCmd") || (this.iCmd = json.iCmd);
}
FuPan.FBlkBasicDataReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkBasicDataReq.new = function () {
    return new FuPan.FBlkBasicDataReq();
}
FuPan.FBlkBasicDataReq.create = function (is) {
    return FuPan.FBlkBasicDataReq._readFrom(is);
}
FuPan.FDateBlkBasicData = function() {
    this.iDate = 0;
    this.vecData = new TafStream.List(_TAF_MODULE_G_.FuPan.FBlockBasicData);
    this._classname = "FuPan.FDateBlkBasicData";
};
FuPan.FDateBlkBasicData.prototype = new TafStream.JceStruct();
FuPan.FDateBlkBasicData._classname = "FuPan.FDateBlkBasicData";

FuPan.FDateBlkBasicData._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FDateBlkBasicData._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FDateBlkBasicData._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FDateBlkBasicData();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.vecData = is.readList(1, false, TafStream.List(_TAF_MODULE_G_.FuPan.FBlockBasicData));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FDateBlkBasicData.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    if (this.vecData != undefined) {
        os.writeList(1, this.vecData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FDateBlkBasicData.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FDateBlkBasicData.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FDateBlkBasicData.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.vecData = this.vecData.toObject();
    
    return tmp;
}
FuPan.FDateBlkBasicData.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("vecData") || (this.vecData.readFromObject(json.vecData));
}
FuPan.FDateBlkBasicData.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FDateBlkBasicData.new = function () {
    return new FuPan.FDateBlkBasicData();
}
FuPan.FDateBlkBasicData.create = function (is) {
    return FuPan.FDateBlkBasicData._readFrom(is);
}
FuPan.FBlkBasicDataRsp = function() {
    this.eBasicDataType = _TAF_MODULE_G_.FuPan.E_BLK_BASIC_DATA_TYPE.E_BLK_BASIC_DATA_TYPE_BASIC;
    this.vecDateData = new TafStream.List(FuPan.FDateBlkBasicData);
    this._classname = "FuPan.FBlkBasicDataRsp";
};
FuPan.FBlkBasicDataRsp.prototype = new TafStream.JceStruct();
FuPan.FBlkBasicDataRsp._classname = "FuPan.FBlkBasicDataRsp";

FuPan.FBlkBasicDataRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkBasicDataRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkBasicDataRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkBasicDataRsp();
    tmp.eBasicDataType = is.readInt32(0, false, _TAF_MODULE_G_.FuPan.E_BLK_BASIC_DATA_TYPE.E_BLK_BASIC_DATA_TYPE_BASIC);
    tmp.vecDateData = is.readList(1, false, TafStream.List(FuPan.FDateBlkBasicData));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkBasicDataRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.eBasicDataType != undefined) {
        os.writeInt32(0, this.eBasicDataType);
    }
    if (this.vecDateData != undefined) {
        os.writeList(1, this.vecDateData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkBasicDataRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkBasicDataRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkBasicDataRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.eBasicDataType = this.eBasicDataType;
    tmp.vecDateData = this.vecDateData.toObject();
    
    return tmp;
}
FuPan.FBlkBasicDataRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("eBasicDataType") || (this.eBasicDataType = json.eBasicDataType);
    !json.hasOwnProperty("vecDateData") || (this.vecDateData.readFromObject(json.vecDateData));
}
FuPan.FBlkBasicDataRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkBasicDataRsp.new = function () {
    return new FuPan.FBlkBasicDataRsp();
}
FuPan.FBlkBasicDataRsp.create = function (is) {
    return FuPan.FBlkBasicDataRsp._readFrom(is);
}
FuPan.FBlkStkDataReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.vecBlk = new TafStream.List(_TAF_MODULE_B_.FuPan.StockInfo);
    this.iStkType = 0;
    this.iEndDate = 0;
    this.iPreDayNum = 1;
    this._classname = "FuPan.FBlkStkDataReq";
};
FuPan.FBlkStkDataReq.prototype = new TafStream.JceStruct();
FuPan.FBlkStkDataReq._classname = "FuPan.FBlkStkDataReq";

FuPan.FBlkStkDataReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkStkDataReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkStkDataReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkStkDataReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.vecBlk = is.readList(1, false, TafStream.List(_TAF_MODULE_B_.FuPan.StockInfo));
    tmp.iStkType = is.readInt32(2, false, 0);
    tmp.iEndDate = is.readInt32(3, false, 0);
    tmp.iPreDayNum = is.readInt32(4, false, 1);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkStkDataReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.vecBlk != undefined) {
        os.writeList(1, this.vecBlk);
    }
    if (this.iStkType != undefined && this.iStkType != 0) {
        os.writeInt32(2, this.iStkType);
    }
    if (this.iEndDate != undefined && this.iEndDate != 0) {
        os.writeInt32(3, this.iEndDate);
    }
    if (this.iPreDayNum != undefined && this.iPreDayNum != 1) {
        os.writeInt32(4, this.iPreDayNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkStkDataReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkStkDataReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkStkDataReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.vecBlk = this.vecBlk.toObject();
    tmp.iStkType = this.iStkType;
    tmp.iEndDate = this.iEndDate;
    tmp.iPreDayNum = this.iPreDayNum;
    
    return tmp;
}
FuPan.FBlkStkDataReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("vecBlk") || (this.vecBlk.readFromObject(json.vecBlk));
    !json.hasOwnProperty("iStkType") || (this.iStkType = json.iStkType);
    !json.hasOwnProperty("iEndDate") || (this.iEndDate = json.iEndDate);
    !json.hasOwnProperty("iPreDayNum") || (this.iPreDayNum = json.iPreDayNum);
}
FuPan.FBlkStkDataReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkStkDataReq.new = function () {
    return new FuPan.FBlkStkDataReq();
}
FuPan.FBlkStkDataReq.create = function (is) {
    return FuPan.FBlkStkDataReq._readFrom(is);
}
FuPan.FDateBlkStkData = function() {
    this.iDate = 0;
    this.vecBlkStk = new TafStream.List(_TAF_MODULE_G_.FuPan.FBlockStkCompData);
    this._classname = "FuPan.FDateBlkStkData";
};
FuPan.FDateBlkStkData.prototype = new TafStream.JceStruct();
FuPan.FDateBlkStkData._classname = "FuPan.FDateBlkStkData";

FuPan.FDateBlkStkData._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FDateBlkStkData._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FDateBlkStkData._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FDateBlkStkData();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.vecBlkStk = is.readList(1, false, TafStream.List(_TAF_MODULE_G_.FuPan.FBlockStkCompData));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FDateBlkStkData.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    if (this.vecBlkStk != undefined) {
        os.writeList(1, this.vecBlkStk);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FDateBlkStkData.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FDateBlkStkData.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FDateBlkStkData.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.vecBlkStk = this.vecBlkStk.toObject();
    
    return tmp;
}
FuPan.FDateBlkStkData.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("vecBlkStk") || (this.vecBlkStk.readFromObject(json.vecBlkStk));
}
FuPan.FDateBlkStkData.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FDateBlkStkData.new = function () {
    return new FuPan.FDateBlkStkData();
}
FuPan.FDateBlkStkData.create = function (is) {
    return FuPan.FDateBlkStkData._readFrom(is);
}
FuPan.FBlkStkDataRsp = function() {
    this.iStkType = 0;
    this.vecDateBlkStk = new TafStream.List(FuPan.FDateBlkStkData);
    this._classname = "FuPan.FBlkStkDataRsp";
};
FuPan.FBlkStkDataRsp.prototype = new TafStream.JceStruct();
FuPan.FBlkStkDataRsp._classname = "FuPan.FBlkStkDataRsp";

FuPan.FBlkStkDataRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkStkDataRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkStkDataRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkStkDataRsp();
    tmp.iStkType = is.readInt32(0, false, 0);
    tmp.vecDateBlkStk = is.readList(1, false, TafStream.List(FuPan.FDateBlkStkData));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkStkDataRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iStkType != undefined && this.iStkType != 0) {
        os.writeInt32(0, this.iStkType);
    }
    if (this.vecDateBlkStk != undefined) {
        os.writeList(1, this.vecDateBlkStk);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkStkDataRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkStkDataRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkStkDataRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iStkType = this.iStkType;
    tmp.vecDateBlkStk = this.vecDateBlkStk.toObject();
    
    return tmp;
}
FuPan.FBlkStkDataRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iStkType") || (this.iStkType = json.iStkType);
    !json.hasOwnProperty("vecDateBlkStk") || (this.vecDateBlkStk.readFromObject(json.vecDateBlkStk));
}
FuPan.FBlkStkDataRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkStkDataRsp.new = function () {
    return new FuPan.FBlkStkDataRsp();
}
FuPan.FBlkStkDataRsp.create = function (is) {
    return FuPan.FBlkStkDataRsp._readFrom(is);
}
FuPan.FBatchStkDataReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.vecStk = new TafStream.List(_TAF_MODULE_B_.FuPan.StockInfo);
    this.iDate = 0;
    this._classname = "FuPan.FBatchStkDataReq";
};
FuPan.FBatchStkDataReq.prototype = new TafStream.JceStruct();
FuPan.FBatchStkDataReq._classname = "FuPan.FBatchStkDataReq";

FuPan.FBatchStkDataReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBatchStkDataReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBatchStkDataReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBatchStkDataReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.vecStk = is.readList(1, false, TafStream.List(_TAF_MODULE_B_.FuPan.StockInfo));
    tmp.iDate = is.readInt32(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBatchStkDataReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.vecStk != undefined) {
        os.writeList(1, this.vecStk);
    }
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(2, this.iDate);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBatchStkDataReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBatchStkDataReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBatchStkDataReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.vecStk = this.vecStk.toObject();
    tmp.iDate = this.iDate;
    
    return tmp;
}
FuPan.FBatchStkDataReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("vecStk") || (this.vecStk.readFromObject(json.vecStk));
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
}
FuPan.FBatchStkDataReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBatchStkDataReq.new = function () {
    return new FuPan.FBatchStkDataReq();
}
FuPan.FBatchStkDataReq.create = function (is) {
    return FuPan.FBatchStkDataReq._readFrom(is);
}
FuPan.FBatchStkDataRsp = function() {
    this.iDate = 0;
    this.vecStk = new TafStream.List(_TAF_MODULE_G_.FuPan.FBlockStockInfo);
    this._classname = "FuPan.FBatchStkDataRsp";
};
FuPan.FBatchStkDataRsp.prototype = new TafStream.JceStruct();
FuPan.FBatchStkDataRsp._classname = "FuPan.FBatchStkDataRsp";

FuPan.FBatchStkDataRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBatchStkDataRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBatchStkDataRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBatchStkDataRsp();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.vecStk = is.readList(1, false, TafStream.List(_TAF_MODULE_G_.FuPan.FBlockStockInfo));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBatchStkDataRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    if (this.vecStk != undefined) {
        os.writeList(1, this.vecStk);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBatchStkDataRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBatchStkDataRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBatchStkDataRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.vecStk = this.vecStk.toObject();
    
    return tmp;
}
FuPan.FBatchStkDataRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("vecStk") || (this.vecStk.readFromObject(json.vecStk));
}
FuPan.FBatchStkDataRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBatchStkDataRsp.new = function () {
    return new FuPan.FBatchStkDataRsp();
}
FuPan.FBatchStkDataRsp.create = function (is) {
    return FuPan.FBatchStkDataRsp._readFrom(is);
}
FuPan.FBlkExtDataReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.eBlkDataType = _TAF_MODULE_G_.FuPan.E_BLOCK_DATA_TYPE.E_BLOCK_DATA_TYPE_END;
    this.iStartDate = 0;
    this.iEndDate = 0;
    this.iPreDayNum = 1;
    this.iSubCmd = 0;
    this._classname = "FuPan.FBlkExtDataReq";
};
FuPan.FBlkExtDataReq.prototype = new TafStream.JceStruct();
FuPan.FBlkExtDataReq._classname = "FuPan.FBlkExtDataReq";

FuPan.FBlkExtDataReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkExtDataReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkExtDataReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkExtDataReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.eBlkDataType = is.readInt32(1, false, _TAF_MODULE_G_.FuPan.E_BLOCK_DATA_TYPE.E_BLOCK_DATA_TYPE_END);
    tmp.iStartDate = is.readInt32(2, false, 0);
    tmp.iEndDate = is.readInt32(3, false, 0);
    tmp.iPreDayNum = is.readInt32(4, false, 1);
    tmp.iSubCmd = is.readInt32(5, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkExtDataReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.eBlkDataType != undefined) {
        os.writeInt32(1, this.eBlkDataType);
    }
    if (this.iStartDate != undefined && this.iStartDate != 0) {
        os.writeInt32(2, this.iStartDate);
    }
    if (this.iEndDate != undefined && this.iEndDate != 0) {
        os.writeInt32(3, this.iEndDate);
    }
    if (this.iPreDayNum != undefined && this.iPreDayNum != 1) {
        os.writeInt32(4, this.iPreDayNum);
    }
    if (this.iSubCmd != undefined && this.iSubCmd != 0) {
        os.writeInt32(5, this.iSubCmd);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkExtDataReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkExtDataReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkExtDataReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.eBlkDataType = this.eBlkDataType;
    tmp.iStartDate = this.iStartDate;
    tmp.iEndDate = this.iEndDate;
    tmp.iPreDayNum = this.iPreDayNum;
    tmp.iSubCmd = this.iSubCmd;
    
    return tmp;
}
FuPan.FBlkExtDataReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("eBlkDataType") || (this.eBlkDataType = json.eBlkDataType);
    !json.hasOwnProperty("iStartDate") || (this.iStartDate = json.iStartDate);
    !json.hasOwnProperty("iEndDate") || (this.iEndDate = json.iEndDate);
    !json.hasOwnProperty("iPreDayNum") || (this.iPreDayNum = json.iPreDayNum);
    !json.hasOwnProperty("iSubCmd") || (this.iSubCmd = json.iSubCmd);
}
FuPan.FBlkExtDataReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkExtDataReq.new = function () {
    return new FuPan.FBlkExtDataReq();
}
FuPan.FBlkExtDataReq.create = function (is) {
    return FuPan.FBlkExtDataReq._readFrom(is);
}
FuPan.FBlkExtDataRsp = function() {
    this.eBlkDataType = _TAF_MODULE_G_.FuPan.E_BLOCK_DATA_TYPE.E_BLOCK_BASIC_DATA;
    this.vecExtData = new TafStream.List(_TAF_MODULE_G_.FuPan.FBlockExternData);
    this._classname = "FuPan.FBlkExtDataRsp";
};
FuPan.FBlkExtDataRsp.prototype = new TafStream.JceStruct();
FuPan.FBlkExtDataRsp._classname = "FuPan.FBlkExtDataRsp";

FuPan.FBlkExtDataRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkExtDataRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkExtDataRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkExtDataRsp();
    tmp.eBlkDataType = is.readInt32(0, false, _TAF_MODULE_G_.FuPan.E_BLOCK_DATA_TYPE.E_BLOCK_BASIC_DATA);
    tmp.vecExtData = is.readList(1, false, TafStream.List(_TAF_MODULE_G_.FuPan.FBlockExternData));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkExtDataRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.eBlkDataType != undefined) {
        os.writeInt32(0, this.eBlkDataType);
    }
    if (this.vecExtData != undefined) {
        os.writeList(1, this.vecExtData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkExtDataRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkExtDataRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkExtDataRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.eBlkDataType = this.eBlkDataType;
    tmp.vecExtData = this.vecExtData.toObject();
    
    return tmp;
}
FuPan.FBlkExtDataRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("eBlkDataType") || (this.eBlkDataType = json.eBlkDataType);
    !json.hasOwnProperty("vecExtData") || (this.vecExtData.readFromObject(json.vecExtData));
}
FuPan.FBlkExtDataRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkExtDataRsp.new = function () {
    return new FuPan.FBlkExtDataRsp();
}
FuPan.FBlkExtDataRsp.create = function (is) {
    return FuPan.FBlkExtDataRsp._readFrom(is);
}
FuPan.FBlkStormEyeIdxReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.eIdxType = FuPan.STORM_EYE_IDX_TYPE.STORM_EYE_IDX_TYPE_NUM;
    this.iStartDate = 0;
    this.iEndDate = 0;
    this.vecBlk = new TafStream.List(_TAF_MODULE_B_.FuPan.StockInfo);
    this._classname = "FuPan.FBlkStormEyeIdxReq";
};
FuPan.FBlkStormEyeIdxReq.prototype = new TafStream.JceStruct();
FuPan.FBlkStormEyeIdxReq._classname = "FuPan.FBlkStormEyeIdxReq";

FuPan.FBlkStormEyeIdxReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkStormEyeIdxReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkStormEyeIdxReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkStormEyeIdxReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.eIdxType = is.readInt32(1, false, FuPan.STORM_EYE_IDX_TYPE.STORM_EYE_IDX_TYPE_NUM);
    tmp.iStartDate = is.readInt32(2, false, 0);
    tmp.iEndDate = is.readInt32(3, false, 0);
    tmp.vecBlk = is.readList(4, false, TafStream.List(_TAF_MODULE_B_.FuPan.StockInfo));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkStormEyeIdxReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.eIdxType != undefined) {
        os.writeInt32(1, this.eIdxType);
    }
    if (this.iStartDate != undefined && this.iStartDate != 0) {
        os.writeInt32(2, this.iStartDate);
    }
    if (this.iEndDate != undefined && this.iEndDate != 0) {
        os.writeInt32(3, this.iEndDate);
    }
    if (this.vecBlk != undefined) {
        os.writeList(4, this.vecBlk);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkStormEyeIdxReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkStormEyeIdxReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkStormEyeIdxReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.eIdxType = this.eIdxType;
    tmp.iStartDate = this.iStartDate;
    tmp.iEndDate = this.iEndDate;
    tmp.vecBlk = this.vecBlk.toObject();
    
    return tmp;
}
FuPan.FBlkStormEyeIdxReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("eIdxType") || (this.eIdxType = json.eIdxType);
    !json.hasOwnProperty("iStartDate") || (this.iStartDate = json.iStartDate);
    !json.hasOwnProperty("iEndDate") || (this.iEndDate = json.iEndDate);
    !json.hasOwnProperty("vecBlk") || (this.vecBlk.readFromObject(json.vecBlk));
}
FuPan.FBlkStormEyeIdxReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkStormEyeIdxReq.new = function () {
    return new FuPan.FBlkStormEyeIdxReq();
}
FuPan.FBlkStormEyeIdxReq.create = function (is) {
    return FuPan.FBlkStormEyeIdxReq._readFrom(is);
}
FuPan.FStromEyeNumIdx = function() {
    this.iDate = 0;
    this.stStormNum = new _TAF_MODULE_G_.FuPan.FBlockStormNum();
    this._classname = "FuPan.FStromEyeNumIdx";
};
FuPan.FStromEyeNumIdx.prototype = new TafStream.JceStruct();
FuPan.FStromEyeNumIdx._classname = "FuPan.FStromEyeNumIdx";

FuPan.FStromEyeNumIdx._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FStromEyeNumIdx._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FStromEyeNumIdx._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FStromEyeNumIdx();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.stStormNum = is.readStruct(1, false, _TAF_MODULE_G_.FuPan.FBlockStormNum);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FStromEyeNumIdx.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    os.writeStruct(1, this.stStormNum);
    os.resumePrecision && os.resumePrecision();
};
FuPan.FStromEyeNumIdx.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FStromEyeNumIdx.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FStromEyeNumIdx.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.stStormNum = this.stStormNum.toObject();
    
    return tmp;
}
FuPan.FStromEyeNumIdx.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("stStormNum") || (this.stStormNum.readFromObject(json.stStormNum));
}
FuPan.FStromEyeNumIdx.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FStromEyeNumIdx.new = function () {
    return new FuPan.FStromEyeNumIdx();
}
FuPan.FStromEyeNumIdx.create = function (is) {
    return FuPan.FStromEyeNumIdx._readFrom(is);
}
FuPan.FStormEyeLv = function() {
    this.iDate = 0;
    this.iZTStkNum = 0;
    this.iAccZTStkNum = 0;
    this._classname = "FuPan.FStormEyeLv";
};
FuPan.FStormEyeLv.prototype = new TafStream.JceStruct();
FuPan.FStormEyeLv._classname = "FuPan.FStormEyeLv";

FuPan.FStormEyeLv._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FStormEyeLv._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FStormEyeLv._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FStormEyeLv();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.iZTStkNum = is.readInt32(1, false, 0);
    tmp.iAccZTStkNum = is.readInt32(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FStormEyeLv.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    if (this.iZTStkNum != undefined && this.iZTStkNum != 0) {
        os.writeInt32(1, this.iZTStkNum);
    }
    if (this.iAccZTStkNum != undefined && this.iAccZTStkNum != 0) {
        os.writeInt32(2, this.iAccZTStkNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FStormEyeLv.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FStormEyeLv.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FStormEyeLv.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.iZTStkNum = this.iZTStkNum;
    tmp.iAccZTStkNum = this.iAccZTStkNum;
    
    return tmp;
}
FuPan.FStormEyeLv.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("iZTStkNum") || (this.iZTStkNum = json.iZTStkNum);
    !json.hasOwnProperty("iAccZTStkNum") || (this.iAccZTStkNum = json.iAccZTStkNum);
}
FuPan.FStormEyeLv.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FStormEyeLv.new = function () {
    return new FuPan.FStormEyeLv();
}
FuPan.FStormEyeLv.create = function (is) {
    return FuPan.FStormEyeLv._readFrom(is);
}
FuPan.FBlkStormEyeLvIdx = function() {
    this.blk = new _TAF_MODULE_B_.FuPan.FBlockSimpleInfo();
    this.vecLv = new TafStream.List(FuPan.FStormEyeLv);
    this._classname = "FuPan.FBlkStormEyeLvIdx";
};
FuPan.FBlkStormEyeLvIdx.prototype = new TafStream.JceStruct();
FuPan.FBlkStormEyeLvIdx._classname = "FuPan.FBlkStormEyeLvIdx";

FuPan.FBlkStormEyeLvIdx._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkStormEyeLvIdx._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkStormEyeLvIdx._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkStormEyeLvIdx();
    tmp.blk = is.readStruct(0, false, _TAF_MODULE_B_.FuPan.FBlockSimpleInfo);
    tmp.vecLv = is.readList(1, false, TafStream.List(FuPan.FStormEyeLv));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkStormEyeLvIdx.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.blk);
    if (this.vecLv != undefined) {
        os.writeList(1, this.vecLv);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkStormEyeLvIdx.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkStormEyeLvIdx.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkStormEyeLvIdx.prototype.toObject = function() { 
    var tmp = {};

    tmp.blk = this.blk.toObject();
    tmp.vecLv = this.vecLv.toObject();
    
    return tmp;
}
FuPan.FBlkStormEyeLvIdx.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("blk") || (this.blk.readFromObject(json.blk));
    !json.hasOwnProperty("vecLv") || (this.vecLv.readFromObject(json.vecLv));
}
FuPan.FBlkStormEyeLvIdx.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkStormEyeLvIdx.new = function () {
    return new FuPan.FBlkStormEyeLvIdx();
}
FuPan.FBlkStormEyeLvIdx.create = function (is) {
    return FuPan.FBlkStormEyeLvIdx._readFrom(is);
}
FuPan.FBlkStormEyeIdxRsp = function() {
    this.vecStormNum = new TafStream.List(FuPan.FStromEyeNumIdx);
    this.vecStormLv = new TafStream.List(FuPan.FBlkStormEyeLvIdx);
    this._classname = "FuPan.FBlkStormEyeIdxRsp";
};
FuPan.FBlkStormEyeIdxRsp.prototype = new TafStream.JceStruct();
FuPan.FBlkStormEyeIdxRsp._classname = "FuPan.FBlkStormEyeIdxRsp";

FuPan.FBlkStormEyeIdxRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBlkStormEyeIdxRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBlkStormEyeIdxRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBlkStormEyeIdxRsp();
    tmp.vecStormNum = is.readList(0, false, TafStream.List(FuPan.FStromEyeNumIdx));
    tmp.vecStormLv = is.readList(1, false, TafStream.List(FuPan.FBlkStormEyeLvIdx));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBlkStormEyeIdxRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecStormNum != undefined) {
        os.writeList(0, this.vecStormNum);
    }
    if (this.vecStormLv != undefined) {
        os.writeList(1, this.vecStormLv);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBlkStormEyeIdxRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBlkStormEyeIdxRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBlkStormEyeIdxRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecStormNum = this.vecStormNum.toObject();
    tmp.vecStormLv = this.vecStormLv.toObject();
    
    return tmp;
}
FuPan.FBlkStormEyeIdxRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecStormNum") || (this.vecStormNum.readFromObject(json.vecStormNum));
    !json.hasOwnProperty("vecStormLv") || (this.vecStormLv.readFromObject(json.vecStormLv));
}
FuPan.FBlkStormEyeIdxRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBlkStormEyeIdxRsp.new = function () {
    return new FuPan.FBlkStormEyeIdxRsp();
}
FuPan.FBlkStormEyeIdxRsp.create = function (is) {
    return FuPan.FBlkStormEyeIdxRsp._readFrom(is);
}
FuPan.FBatchStkCaUnuActReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.vecStk = new TafStream.List(_TAF_MODULE_B_.FuPan.StockInfo);
    this._classname = "FuPan.FBatchStkCaUnuActReq";
};
FuPan.FBatchStkCaUnuActReq.prototype = new TafStream.JceStruct();
FuPan.FBatchStkCaUnuActReq._classname = "FuPan.FBatchStkCaUnuActReq";

FuPan.FBatchStkCaUnuActReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBatchStkCaUnuActReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBatchStkCaUnuActReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBatchStkCaUnuActReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.vecStk = is.readList(1, false, TafStream.List(_TAF_MODULE_B_.FuPan.StockInfo));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBatchStkCaUnuActReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.vecStk != undefined) {
        os.writeList(1, this.vecStk);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBatchStkCaUnuActReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBatchStkCaUnuActReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBatchStkCaUnuActReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.vecStk = this.vecStk.toObject();
    
    return tmp;
}
FuPan.FBatchStkCaUnuActReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("vecStk") || (this.vecStk.readFromObject(json.vecStk));
}
FuPan.FBatchStkCaUnuActReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBatchStkCaUnuActReq.new = function () {
    return new FuPan.FBatchStkCaUnuActReq();
}
FuPan.FBatchStkCaUnuActReq.create = function (is) {
    return FuPan.FBatchStkCaUnuActReq._readFrom(is);
}
FuPan.FBatchStkCaUnuActRsp = function() {
    this.vecStkCaUnuAct = new TafStream.List(_TAF_MODULE_H_.FuPan.FStkAllCaUnuAct);
    this._classname = "FuPan.FBatchStkCaUnuActRsp";
};
FuPan.FBatchStkCaUnuActRsp.prototype = new TafStream.JceStruct();
FuPan.FBatchStkCaUnuActRsp._classname = "FuPan.FBatchStkCaUnuActRsp";

FuPan.FBatchStkCaUnuActRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBatchStkCaUnuActRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBatchStkCaUnuActRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBatchStkCaUnuActRsp();
    tmp.vecStkCaUnuAct = is.readList(0, false, TafStream.List(_TAF_MODULE_H_.FuPan.FStkAllCaUnuAct));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBatchStkCaUnuActRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecStkCaUnuAct != undefined) {
        os.writeList(0, this.vecStkCaUnuAct);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBatchStkCaUnuActRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBatchStkCaUnuActRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBatchStkCaUnuActRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecStkCaUnuAct = this.vecStkCaUnuAct.toObject();
    
    return tmp;
}
FuPan.FBatchStkCaUnuActRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecStkCaUnuAct") || (this.vecStkCaUnuAct.readFromObject(json.vecStkCaUnuAct));
}
FuPan.FBatchStkCaUnuActRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBatchStkCaUnuActRsp.new = function () {
    return new FuPan.FBatchStkCaUnuActRsp();
}
FuPan.FBatchStkCaUnuActRsp.create = function (is) {
    return FuPan.FBatchStkCaUnuActRsp._readFrom(is);
}
FuPan.FMultiCaUnuActTypeDataReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.vecType = new TafStream.List(_TAF_MODULE_H_.FuPan.E_CALL_AUCTION_DATA_TYPE);
    this.iStartDate = 0;
    this.iEndDate = 0;
    this.iPreDayNum = 1;
    this._classname = "FuPan.FMultiCaUnuActTypeDataReq";
};
FuPan.FMultiCaUnuActTypeDataReq.prototype = new TafStream.JceStruct();
FuPan.FMultiCaUnuActTypeDataReq._classname = "FuPan.FMultiCaUnuActTypeDataReq";

FuPan.FMultiCaUnuActTypeDataReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FMultiCaUnuActTypeDataReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FMultiCaUnuActTypeDataReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FMultiCaUnuActTypeDataReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.vecType = is.readList(1, false, TafStream.List(_TAF_MODULE_H_.FuPan.E_CALL_AUCTION_DATA_TYPE));
    tmp.iStartDate = is.readInt32(2, false, 0);
    tmp.iEndDate = is.readInt32(3, false, 0);
    tmp.iPreDayNum = is.readInt32(4, false, 1);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FMultiCaUnuActTypeDataReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.vecType != undefined) {
        os.writeList(1, this.vecType);
    }
    if (this.iStartDate != undefined && this.iStartDate != 0) {
        os.writeInt32(2, this.iStartDate);
    }
    if (this.iEndDate != undefined && this.iEndDate != 0) {
        os.writeInt32(3, this.iEndDate);
    }
    if (this.iPreDayNum != undefined && this.iPreDayNum != 1) {
        os.writeInt32(4, this.iPreDayNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FMultiCaUnuActTypeDataReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FMultiCaUnuActTypeDataReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FMultiCaUnuActTypeDataReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.vecType = this.vecType.toObject();
    tmp.iStartDate = this.iStartDate;
    tmp.iEndDate = this.iEndDate;
    tmp.iPreDayNum = this.iPreDayNum;
    
    return tmp;
}
FuPan.FMultiCaUnuActTypeDataReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("vecType") || (this.vecType.readFromObject(json.vecType));
    !json.hasOwnProperty("iStartDate") || (this.iStartDate = json.iStartDate);
    !json.hasOwnProperty("iEndDate") || (this.iEndDate = json.iEndDate);
    !json.hasOwnProperty("iPreDayNum") || (this.iPreDayNum = json.iPreDayNum);
}
FuPan.FMultiCaUnuActTypeDataReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FMultiCaUnuActTypeDataReq.new = function () {
    return new FuPan.FMultiCaUnuActTypeDataReq();
}
FuPan.FMultiCaUnuActTypeDataReq.create = function (is) {
    return FuPan.FMultiCaUnuActTypeDataReq._readFrom(is);
}
FuPan.FNumOfCaUnuActTypeStkReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.vecType = new TafStream.List(_TAF_MODULE_H_.FuPan.E_CALL_AUCTION_DATA_TYPE);
    this.iStartDate = 0;
    this.iEndDate = 0;
    this.iPreDayNum = 1;
    this.bWantAll = false;
    this._classname = "FuPan.FNumOfCaUnuActTypeStkReq";
};
FuPan.FNumOfCaUnuActTypeStkReq.prototype = new TafStream.JceStruct();
FuPan.FNumOfCaUnuActTypeStkReq._classname = "FuPan.FNumOfCaUnuActTypeStkReq";

FuPan.FNumOfCaUnuActTypeStkReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FNumOfCaUnuActTypeStkReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FNumOfCaUnuActTypeStkReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FNumOfCaUnuActTypeStkReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.vecType = is.readList(1, false, TafStream.List(_TAF_MODULE_H_.FuPan.E_CALL_AUCTION_DATA_TYPE));
    tmp.iStartDate = is.readInt32(2, false, 0);
    tmp.iEndDate = is.readInt32(3, false, 0);
    tmp.iPreDayNum = is.readInt32(4, false, 1);
    tmp.bWantAll = is.readBoolean(5, false, false);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FNumOfCaUnuActTypeStkReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.vecType != undefined) {
        os.writeList(1, this.vecType);
    }
    if (this.iStartDate != undefined && this.iStartDate != 0) {
        os.writeInt32(2, this.iStartDate);
    }
    if (this.iEndDate != undefined && this.iEndDate != 0) {
        os.writeInt32(3, this.iEndDate);
    }
    if (this.iPreDayNum != undefined && this.iPreDayNum != 1) {
        os.writeInt32(4, this.iPreDayNum);
    }
    if (this.bWantAll != undefined && this.bWantAll != false) {
        os.writeBoolean(5, this.bWantAll);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FNumOfCaUnuActTypeStkReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FNumOfCaUnuActTypeStkReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FNumOfCaUnuActTypeStkReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.vecType = this.vecType.toObject();
    tmp.iStartDate = this.iStartDate;
    tmp.iEndDate = this.iEndDate;
    tmp.iPreDayNum = this.iPreDayNum;
    tmp.bWantAll = this.bWantAll;
    
    return tmp;
}
FuPan.FNumOfCaUnuActTypeStkReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("vecType") || (this.vecType.readFromObject(json.vecType));
    !json.hasOwnProperty("iStartDate") || (this.iStartDate = json.iStartDate);
    !json.hasOwnProperty("iEndDate") || (this.iEndDate = json.iEndDate);
    !json.hasOwnProperty("iPreDayNum") || (this.iPreDayNum = json.iPreDayNum);
    !json.hasOwnProperty("bWantAll") || (this.bWantAll = json.bWantAll);
}
FuPan.FNumOfCaUnuActTypeStkReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FNumOfCaUnuActTypeStkReq.new = function () {
    return new FuPan.FNumOfCaUnuActTypeStkReq();
}
FuPan.FNumOfCaUnuActTypeStkReq.create = function (is) {
    return FuPan.FNumOfCaUnuActTypeStkReq._readFrom(is);
}
FuPan.FCaUnuActTypeDataReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.eType = _TAF_MODULE_H_.FuPan.E_CALL_AUCTION_DATA_TYPE.E_CA_DATA_TYPE_TS;
    this.iStartDate = 0;
    this.iEndDate = 0;
    this.iPreDayNum = 1;
    this.iSubCmd = 0;
    this._classname = "FuPan.FCaUnuActTypeDataReq";
};
FuPan.FCaUnuActTypeDataReq.prototype = new TafStream.JceStruct();
FuPan.FCaUnuActTypeDataReq._classname = "FuPan.FCaUnuActTypeDataReq";

FuPan.FCaUnuActTypeDataReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FCaUnuActTypeDataReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FCaUnuActTypeDataReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FCaUnuActTypeDataReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.eType = is.readInt32(1, false, _TAF_MODULE_H_.FuPan.E_CALL_AUCTION_DATA_TYPE.E_CA_DATA_TYPE_TS);
    tmp.iStartDate = is.readInt32(2, false, 0);
    tmp.iEndDate = is.readInt32(3, false, 0);
    tmp.iPreDayNum = is.readInt32(4, false, 1);
    tmp.iSubCmd = is.readInt32(5, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FCaUnuActTypeDataReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.eType != undefined) {
        os.writeInt32(1, this.eType);
    }
    if (this.iStartDate != undefined && this.iStartDate != 0) {
        os.writeInt32(2, this.iStartDate);
    }
    if (this.iEndDate != undefined && this.iEndDate != 0) {
        os.writeInt32(3, this.iEndDate);
    }
    if (this.iPreDayNum != undefined && this.iPreDayNum != 1) {
        os.writeInt32(4, this.iPreDayNum);
    }
    if (this.iSubCmd != undefined && this.iSubCmd != 0) {
        os.writeInt32(5, this.iSubCmd);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FCaUnuActTypeDataReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FCaUnuActTypeDataReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FCaUnuActTypeDataReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.eType = this.eType;
    tmp.iStartDate = this.iStartDate;
    tmp.iEndDate = this.iEndDate;
    tmp.iPreDayNum = this.iPreDayNum;
    tmp.iSubCmd = this.iSubCmd;
    
    return tmp;
}
FuPan.FCaUnuActTypeDataReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("eType") || (this.eType = json.eType);
    !json.hasOwnProperty("iStartDate") || (this.iStartDate = json.iStartDate);
    !json.hasOwnProperty("iEndDate") || (this.iEndDate = json.iEndDate);
    !json.hasOwnProperty("iPreDayNum") || (this.iPreDayNum = json.iPreDayNum);
    !json.hasOwnProperty("iSubCmd") || (this.iSubCmd = json.iSubCmd);
}
FuPan.FCaUnuActTypeDataReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FCaUnuActTypeDataReq.new = function () {
    return new FuPan.FCaUnuActTypeDataReq();
}
FuPan.FCaUnuActTypeDataReq.create = function (is) {
    return FuPan.FCaUnuActTypeDataReq._readFrom(is);
}
FuPan.FCaUnuActTypeDataRsq = function() {
    this.eType = _TAF_MODULE_H_.FuPan.E_CALL_AUCTION_DATA_TYPE.E_CA_DATA_TYPE_TS;
    this.vecCaUnuAct = new TafStream.List(_TAF_MODULE_H_.FuPan.FCaUnuActData);
    this._classname = "FuPan.FCaUnuActTypeDataRsq";
};
FuPan.FCaUnuActTypeDataRsq.prototype = new TafStream.JceStruct();
FuPan.FCaUnuActTypeDataRsq._classname = "FuPan.FCaUnuActTypeDataRsq";

FuPan.FCaUnuActTypeDataRsq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FCaUnuActTypeDataRsq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FCaUnuActTypeDataRsq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FCaUnuActTypeDataRsq();
    tmp.eType = is.readInt32(0, false, _TAF_MODULE_H_.FuPan.E_CALL_AUCTION_DATA_TYPE.E_CA_DATA_TYPE_TS);
    tmp.vecCaUnuAct = is.readList(1, false, TafStream.List(_TAF_MODULE_H_.FuPan.FCaUnuActData));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FCaUnuActTypeDataRsq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.eType != undefined) {
        os.writeInt32(0, this.eType);
    }
    if (this.vecCaUnuAct != undefined) {
        os.writeList(1, this.vecCaUnuAct);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FCaUnuActTypeDataRsq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FCaUnuActTypeDataRsq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FCaUnuActTypeDataRsq.prototype.toObject = function() { 
    var tmp = {};

    tmp.eType = this.eType;
    tmp.vecCaUnuAct = this.vecCaUnuAct.toObject();
    
    return tmp;
}
FuPan.FCaUnuActTypeDataRsq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("eType") || (this.eType = json.eType);
    !json.hasOwnProperty("vecCaUnuAct") || (this.vecCaUnuAct.readFromObject(json.vecCaUnuAct));
}
FuPan.FCaUnuActTypeDataRsq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FCaUnuActTypeDataRsq.new = function () {
    return new FuPan.FCaUnuActTypeDataRsq();
}
FuPan.FCaUnuActTypeDataRsq.create = function (is) {
    return FuPan.FCaUnuActTypeDataRsq._readFrom(is);
}
FuPan.FCaUnuActLevelStkReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.eLevel = _TAF_MODULE_H_.FuPan.E_CA_UNU_ACT_LEVEL.E_CA_UNU_ACT_LEVEL_BULLISH;
    this.iStartDate = 0;
    this.iEndDate = 0;
    this.iPreDayNum = 1;
    this._classname = "FuPan.FCaUnuActLevelStkReq";
};
FuPan.FCaUnuActLevelStkReq.prototype = new TafStream.JceStruct();
FuPan.FCaUnuActLevelStkReq._classname = "FuPan.FCaUnuActLevelStkReq";

FuPan.FCaUnuActLevelStkReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FCaUnuActLevelStkReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FCaUnuActLevelStkReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FCaUnuActLevelStkReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.eLevel = is.readInt32(1, false, _TAF_MODULE_H_.FuPan.E_CA_UNU_ACT_LEVEL.E_CA_UNU_ACT_LEVEL_BULLISH);
    tmp.iStartDate = is.readInt32(2, false, 0);
    tmp.iEndDate = is.readInt32(3, false, 0);
    tmp.iPreDayNum = is.readInt32(4, false, 1);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FCaUnuActLevelStkReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.eLevel != undefined) {
        os.writeInt32(1, this.eLevel);
    }
    if (this.iStartDate != undefined && this.iStartDate != 0) {
        os.writeInt32(2, this.iStartDate);
    }
    if (this.iEndDate != undefined && this.iEndDate != 0) {
        os.writeInt32(3, this.iEndDate);
    }
    if (this.iPreDayNum != undefined && this.iPreDayNum != 1) {
        os.writeInt32(4, this.iPreDayNum);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FCaUnuActLevelStkReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FCaUnuActLevelStkReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FCaUnuActLevelStkReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.eLevel = this.eLevel;
    tmp.iStartDate = this.iStartDate;
    tmp.iEndDate = this.iEndDate;
    tmp.iPreDayNum = this.iPreDayNum;
    
    return tmp;
}
FuPan.FCaUnuActLevelStkReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("eLevel") || (this.eLevel = json.eLevel);
    !json.hasOwnProperty("iStartDate") || (this.iStartDate = json.iStartDate);
    !json.hasOwnProperty("iEndDate") || (this.iEndDate = json.iEndDate);
    !json.hasOwnProperty("iPreDayNum") || (this.iPreDayNum = json.iPreDayNum);
}
FuPan.FCaUnuActLevelStkReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FCaUnuActLevelStkReq.new = function () {
    return new FuPan.FCaUnuActLevelStkReq();
}
FuPan.FCaUnuActLevelStkReq.create = function (is) {
    return FuPan.FCaUnuActLevelStkReq._readFrom(is);
}
FuPan.FDateCaUnuActLevelStk = function() {
    this.iDate = 0;
    this.vecCaUnuActStk = new TafStream.List(_TAF_MODULE_H_.FuPan.FStkLastCaUnuAct);
    this._classname = "FuPan.FDateCaUnuActLevelStk";
};
FuPan.FDateCaUnuActLevelStk.prototype = new TafStream.JceStruct();
FuPan.FDateCaUnuActLevelStk._classname = "FuPan.FDateCaUnuActLevelStk";

FuPan.FDateCaUnuActLevelStk._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FDateCaUnuActLevelStk._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FDateCaUnuActLevelStk._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FDateCaUnuActLevelStk();
    tmp.iDate = is.readInt32(0, false, 0);
    tmp.vecCaUnuActStk = is.readList(1, false, TafStream.List(_TAF_MODULE_H_.FuPan.FStkLastCaUnuAct));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FDateCaUnuActLevelStk.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(0, this.iDate);
    }
    if (this.vecCaUnuActStk != undefined) {
        os.writeList(1, this.vecCaUnuActStk);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FDateCaUnuActLevelStk.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FDateCaUnuActLevelStk.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FDateCaUnuActLevelStk.prototype.toObject = function() { 
    var tmp = {};

    tmp.iDate = this.iDate;
    tmp.vecCaUnuActStk = this.vecCaUnuActStk.toObject();
    
    return tmp;
}
FuPan.FDateCaUnuActLevelStk.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
    !json.hasOwnProperty("vecCaUnuActStk") || (this.vecCaUnuActStk.readFromObject(json.vecCaUnuActStk));
}
FuPan.FDateCaUnuActLevelStk.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FDateCaUnuActLevelStk.new = function () {
    return new FuPan.FDateCaUnuActLevelStk();
}
FuPan.FDateCaUnuActLevelStk.create = function (is) {
    return FuPan.FDateCaUnuActLevelStk._readFrom(is);
}
FuPan.FCaUnuActLevelStkRsp = function() {
    this.eLevel = _TAF_MODULE_H_.FuPan.E_CA_UNU_ACT_LEVEL.E_CA_UNU_ACT_LEVEL_BULLISH;
    this.vecCaLevel = new TafStream.List(FuPan.FDateCaUnuActLevelStk);
    this._classname = "FuPan.FCaUnuActLevelStkRsp";
};
FuPan.FCaUnuActLevelStkRsp.prototype = new TafStream.JceStruct();
FuPan.FCaUnuActLevelStkRsp._classname = "FuPan.FCaUnuActLevelStkRsp";

FuPan.FCaUnuActLevelStkRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FCaUnuActLevelStkRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FCaUnuActLevelStkRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FCaUnuActLevelStkRsp();
    tmp.eLevel = is.readInt32(1, false, _TAF_MODULE_H_.FuPan.E_CA_UNU_ACT_LEVEL.E_CA_UNU_ACT_LEVEL_BULLISH);
    tmp.vecCaLevel = is.readList(2, false, TafStream.List(FuPan.FDateCaUnuActLevelStk));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FCaUnuActLevelStkRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.eLevel != undefined) {
        os.writeInt32(1, this.eLevel);
    }
    if (this.vecCaLevel != undefined) {
        os.writeList(2, this.vecCaLevel);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FCaUnuActLevelStkRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FCaUnuActLevelStkRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FCaUnuActLevelStkRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.eLevel = this.eLevel;
    tmp.vecCaLevel = this.vecCaLevel.toObject();
    
    return tmp;
}
FuPan.FCaUnuActLevelStkRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("eLevel") || (this.eLevel = json.eLevel);
    !json.hasOwnProperty("vecCaLevel") || (this.vecCaLevel.readFromObject(json.vecCaLevel));
}
FuPan.FCaUnuActLevelStkRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FCaUnuActLevelStkRsp.new = function () {
    return new FuPan.FCaUnuActLevelStkRsp();
}
FuPan.FCaUnuActLevelStkRsp.create = function (is) {
    return FuPan.FCaUnuActLevelStkRsp._readFrom(is);
}
FuPan.FAllCallAuctionDataRsp = function() {
    this.vecAllCaUnuAct = new TafStream.List(_TAF_MODULE_H_.FuPan.FCaUnuActTypeData);
    this._classname = "FuPan.FAllCallAuctionDataRsp";
};
FuPan.FAllCallAuctionDataRsp.prototype = new TafStream.JceStruct();
FuPan.FAllCallAuctionDataRsp._classname = "FuPan.FAllCallAuctionDataRsp";

FuPan.FAllCallAuctionDataRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FAllCallAuctionDataRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FAllCallAuctionDataRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FAllCallAuctionDataRsp();
    tmp.vecAllCaUnuAct = is.readList(0, false, TafStream.List(_TAF_MODULE_H_.FuPan.FCaUnuActTypeData));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FAllCallAuctionDataRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecAllCaUnuAct != undefined) {
        os.writeList(0, this.vecAllCaUnuAct);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FAllCallAuctionDataRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FAllCallAuctionDataRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FAllCallAuctionDataRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecAllCaUnuAct = this.vecAllCaUnuAct.toObject();
    
    return tmp;
}
FuPan.FAllCallAuctionDataRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecAllCaUnuAct") || (this.vecAllCaUnuAct.readFromObject(json.vecAllCaUnuAct));
}
FuPan.FAllCallAuctionDataRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FAllCallAuctionDataRsp.new = function () {
    return new FuPan.FAllCallAuctionDataRsp();
}
FuPan.FAllCallAuctionDataRsp.create = function (is) {
    return FuPan.FAllCallAuctionDataRsp._readFrom(is);
}
FuPan.FNumOfCallAuctionStkRsp = function() {
    this.mapNumOfStk = new TafStream.Map(_TAF_MODULE_H_.FuPan.E_CALL_AUCTION_DATA_TYPE, TafStream.Int32);
    this.iNumOfAllStk = 0;
    this._classname = "FuPan.FNumOfCallAuctionStkRsp";
};
FuPan.FNumOfCallAuctionStkRsp.prototype = new TafStream.JceStruct();
FuPan.FNumOfCallAuctionStkRsp._classname = "FuPan.FNumOfCallAuctionStkRsp";

FuPan.FNumOfCallAuctionStkRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FNumOfCallAuctionStkRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FNumOfCallAuctionStkRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FNumOfCallAuctionStkRsp();
    tmp.mapNumOfStk = is.readMap(0, false, TafStream.Map(_TAF_MODULE_H_.FuPan.E_CALL_AUCTION_DATA_TYPE, TafStream.Int32));
    tmp.iNumOfAllStk = is.readInt32(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FNumOfCallAuctionStkRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.mapNumOfStk != undefined) {
        os.writeMap(0, this.mapNumOfStk);
    }
    if (this.iNumOfAllStk != undefined && this.iNumOfAllStk != 0) {
        os.writeInt32(1, this.iNumOfAllStk);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FNumOfCallAuctionStkRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FNumOfCallAuctionStkRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FNumOfCallAuctionStkRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.mapNumOfStk = this.mapNumOfStk.toObject();
    tmp.iNumOfAllStk = this.iNumOfAllStk;
    
    return tmp;
}
FuPan.FNumOfCallAuctionStkRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("mapNumOfStk") || (this.mapNumOfStk.readFromObject(json.mapNumOfStk));
    !json.hasOwnProperty("iNumOfAllStk") || (this.iNumOfAllStk = json.iNumOfAllStk);
}
FuPan.FNumOfCallAuctionStkRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FNumOfCallAuctionStkRsp.new = function () {
    return new FuPan.FNumOfCallAuctionStkRsp();
}
FuPan.FNumOfCallAuctionStkRsp.create = function (is) {
    return FuPan.FNumOfCallAuctionStkRsp._readFrom(is);
}
FuPan.FZDPanKouInfoReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.vecStk = new TafStream.List(_TAF_MODULE_B_.FuPan.StockInfo);
    this._classname = "FuPan.FZDPanKouInfoReq";
};
FuPan.FZDPanKouInfoReq.prototype = new TafStream.JceStruct();
FuPan.FZDPanKouInfoReq._classname = "FuPan.FZDPanKouInfoReq";

FuPan.FZDPanKouInfoReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZDPanKouInfoReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZDPanKouInfoReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZDPanKouInfoReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.vecStk = is.readList(1, false, TafStream.List(_TAF_MODULE_B_.FuPan.StockInfo));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZDPanKouInfoReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.vecStk != undefined) {
        os.writeList(1, this.vecStk);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZDPanKouInfoReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZDPanKouInfoReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZDPanKouInfoReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.vecStk = this.vecStk.toObject();
    
    return tmp;
}
FuPan.FZDPanKouInfoReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("vecStk") || (this.vecStk.readFromObject(json.vecStk));
}
FuPan.FZDPanKouInfoReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZDPanKouInfoReq.new = function () {
    return new FuPan.FZDPanKouInfoReq();
}
FuPan.FZDPanKouInfoReq.create = function (is) {
    return FuPan.FZDPanKouInfoReq._readFrom(is);
}
FuPan.FZDPanKouInfo = function() {
    this.iMarket = 0;
    this.strCode = "";
    this.strStockZTReason = "";
    this.dCurFDAmount = 0;
    this.dFDRatio = 0;
    this.dHighFDAmout = 0;
    this.dZTTradeAmout = 0;
    this._classname = "FuPan.FZDPanKouInfo";
};
FuPan.FZDPanKouInfo.prototype = new TafStream.JceStruct();
FuPan.FZDPanKouInfo._classname = "FuPan.FZDPanKouInfo";

FuPan.FZDPanKouInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZDPanKouInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZDPanKouInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZDPanKouInfo();
    tmp.iMarket = is.readInt32(0, false, 0);
    tmp.strCode = is.readString(1, false, "");
    tmp.strStockZTReason = is.readString(2, false, "");
    tmp.dCurFDAmount = is.readDouble(3, false, 0);
    tmp.dFDRatio = is.readDouble(4, false, 0);
    tmp.dHighFDAmout = is.readDouble(5, false, 0);
    tmp.dZTTradeAmout = is.readDouble(6, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZDPanKouInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iMarket != undefined && this.iMarket != 0) {
        os.writeInt32(0, this.iMarket);
    }
    if (this.strCode != undefined && this.strCode != "") {
        os.writeString(1, this.strCode);
    }
    if (this.strStockZTReason != undefined && this.strStockZTReason != "") {
        os.writeString(2, this.strStockZTReason);
    }
    if (this.dCurFDAmount != undefined && this.dCurFDAmount != 0) {
        os.writeDouble(3, this.dCurFDAmount);
    }
    if (this.dFDRatio != undefined && this.dFDRatio != 0) {
        os.writeDouble(4, this.dFDRatio);
    }
    if (this.dHighFDAmout != undefined && this.dHighFDAmout != 0) {
        os.writeDouble(5, this.dHighFDAmout);
    }
    if (this.dZTTradeAmout != undefined && this.dZTTradeAmout != 0) {
        os.writeDouble(6, this.dZTTradeAmout);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZDPanKouInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZDPanKouInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZDPanKouInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.iMarket = this.iMarket;
    tmp.strCode = this.strCode;
    tmp.strStockZTReason = this.strStockZTReason;
    tmp.dCurFDAmount = this.dCurFDAmount;
    tmp.dFDRatio = this.dFDRatio;
    tmp.dHighFDAmout = this.dHighFDAmout;
    tmp.dZTTradeAmout = this.dZTTradeAmout;
    
    return tmp;
}
FuPan.FZDPanKouInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iMarket") || (this.iMarket = json.iMarket);
    !json.hasOwnProperty("strCode") || (this.strCode = json.strCode);
    !json.hasOwnProperty("strStockZTReason") || (this.strStockZTReason = json.strStockZTReason);
    !json.hasOwnProperty("dCurFDAmount") || (this.dCurFDAmount = json.dCurFDAmount);
    !json.hasOwnProperty("dFDRatio") || (this.dFDRatio = json.dFDRatio);
    !json.hasOwnProperty("dHighFDAmout") || (this.dHighFDAmout = json.dHighFDAmout);
    !json.hasOwnProperty("dZTTradeAmout") || (this.dZTTradeAmout = json.dZTTradeAmout);
}
FuPan.FZDPanKouInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZDPanKouInfo.new = function () {
    return new FuPan.FZDPanKouInfo();
}
FuPan.FZDPanKouInfo.create = function (is) {
    return FuPan.FZDPanKouInfo._readFrom(is);
}
FuPan.FZDPanKouInfoRsq = function() {
    this.vecFZDPanKouInfo = new TafStream.List(FuPan.FZDPanKouInfo);
    this._classname = "FuPan.FZDPanKouInfoRsq";
};
FuPan.FZDPanKouInfoRsq.prototype = new TafStream.JceStruct();
FuPan.FZDPanKouInfoRsq._classname = "FuPan.FZDPanKouInfoRsq";

FuPan.FZDPanKouInfoRsq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZDPanKouInfoRsq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZDPanKouInfoRsq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZDPanKouInfoRsq();
    tmp.vecFZDPanKouInfo = is.readList(0, false, TafStream.List(FuPan.FZDPanKouInfo));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZDPanKouInfoRsq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecFZDPanKouInfo != undefined) {
        os.writeList(0, this.vecFZDPanKouInfo);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZDPanKouInfoRsq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZDPanKouInfoRsq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZDPanKouInfoRsq.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecFZDPanKouInfo = this.vecFZDPanKouInfo.toObject();
    
    return tmp;
}
FuPan.FZDPanKouInfoRsq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecFZDPanKouInfo") || (this.vecFZDPanKouInfo.readFromObject(json.vecFZDPanKouInfo));
}
FuPan.FZDPanKouInfoRsq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZDPanKouInfoRsq.new = function () {
    return new FuPan.FZDPanKouInfoRsq();
}
FuPan.FZDPanKouInfoRsq.create = function (is) {
    return FuPan.FZDPanKouInfoRsq._readFrom(is);
}
FuPan.FBatchUnitedStockPoolReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.vecType = new TafStream.List(_TAF_MODULE_F_.FuPan.E_UNITED_STK_POOL_TYPE);
    this.lRefreshTime = 0;
    this.iDate = 0;
    this._classname = "FuPan.FBatchUnitedStockPoolReq";
};
FuPan.FBatchUnitedStockPoolReq.prototype = new TafStream.JceStruct();
FuPan.FBatchUnitedStockPoolReq._classname = "FuPan.FBatchUnitedStockPoolReq";

FuPan.FBatchUnitedStockPoolReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBatchUnitedStockPoolReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBatchUnitedStockPoolReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBatchUnitedStockPoolReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.vecType = is.readList(1, false, TafStream.List(_TAF_MODULE_F_.FuPan.E_UNITED_STK_POOL_TYPE));
    tmp.lRefreshTime = is.readInt64(2, false, 0);
    tmp.iDate = is.readInt32(3, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBatchUnitedStockPoolReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.vecType != undefined) {
        os.writeList(1, this.vecType);
    }
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(2, this.lRefreshTime);
    }
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(3, this.iDate);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBatchUnitedStockPoolReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBatchUnitedStockPoolReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBatchUnitedStockPoolReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.vecType = this.vecType.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    tmp.iDate = this.iDate;
    
    return tmp;
}
FuPan.FBatchUnitedStockPoolReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("vecType") || (this.vecType.readFromObject(json.vecType));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
}
FuPan.FBatchUnitedStockPoolReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBatchUnitedStockPoolReq.new = function () {
    return new FuPan.FBatchUnitedStockPoolReq();
}
FuPan.FBatchUnitedStockPoolReq.create = function (is) {
    return FuPan.FBatchUnitedStockPoolReq._readFrom(is);
}
FuPan.FUnitedPoolStock = function() {
    this.eType = _TAF_MODULE_F_.FuPan.E_UNITED_STK_POOL_TYPE.E_UNI_ZT_POOL;
    this.vecStk = new TafStream.List(_TAF_MODULE_B_.FuPan.StockInfo);
    this._classname = "FuPan.FUnitedPoolStock";
};
FuPan.FUnitedPoolStock.prototype = new TafStream.JceStruct();
FuPan.FUnitedPoolStock._classname = "FuPan.FUnitedPoolStock";

FuPan.FUnitedPoolStock._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FUnitedPoolStock._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FUnitedPoolStock._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FUnitedPoolStock();
    tmp.eType = is.readInt32(0, false, _TAF_MODULE_F_.FuPan.E_UNITED_STK_POOL_TYPE.E_UNI_ZT_POOL);
    tmp.vecStk = is.readList(1, false, TafStream.List(_TAF_MODULE_B_.FuPan.StockInfo));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FUnitedPoolStock.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.eType != undefined) {
        os.writeInt32(0, this.eType);
    }
    if (this.vecStk != undefined) {
        os.writeList(1, this.vecStk);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FUnitedPoolStock.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FUnitedPoolStock.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FUnitedPoolStock.prototype.toObject = function() { 
    var tmp = {};

    tmp.eType = this.eType;
    tmp.vecStk = this.vecStk.toObject();
    
    return tmp;
}
FuPan.FUnitedPoolStock.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("eType") || (this.eType = json.eType);
    !json.hasOwnProperty("vecStk") || (this.vecStk.readFromObject(json.vecStk));
}
FuPan.FUnitedPoolStock.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FUnitedPoolStock.new = function () {
    return new FuPan.FUnitedPoolStock();
}
FuPan.FUnitedPoolStock.create = function (is) {
    return FuPan.FUnitedPoolStock._readFrom(is);
}
FuPan.FBatchUnitedStockPoolRsq = function() {
    this.vecStkPool = new TafStream.List(FuPan.FUnitedPoolStock);
    this.lRefreshTime = 0;
    this.iDate = 0;
    this._classname = "FuPan.FBatchUnitedStockPoolRsq";
};
FuPan.FBatchUnitedStockPoolRsq.prototype = new TafStream.JceStruct();
FuPan.FBatchUnitedStockPoolRsq._classname = "FuPan.FBatchUnitedStockPoolRsq";

FuPan.FBatchUnitedStockPoolRsq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FBatchUnitedStockPoolRsq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FBatchUnitedStockPoolRsq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FBatchUnitedStockPoolRsq();
    tmp.vecStkPool = is.readList(0, false, TafStream.List(FuPan.FUnitedPoolStock));
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp.iDate = is.readInt32(2, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FBatchUnitedStockPoolRsq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecStkPool != undefined) {
        os.writeList(0, this.vecStkPool);
    }
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    if (this.iDate != undefined && this.iDate != 0) {
        os.writeInt32(2, this.iDate);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FBatchUnitedStockPoolRsq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FBatchUnitedStockPoolRsq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FBatchUnitedStockPoolRsq.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecStkPool = this.vecStkPool.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    tmp.iDate = this.iDate;
    
    return tmp;
}
FuPan.FBatchUnitedStockPoolRsq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecStkPool") || (this.vecStkPool.readFromObject(json.vecStkPool));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
    !json.hasOwnProperty("iDate") || (this.iDate = json.iDate);
}
FuPan.FBatchUnitedStockPoolRsq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FBatchUnitedStockPoolRsq.new = function () {
    return new FuPan.FBatchUnitedStockPoolRsq();
}
FuPan.FBatchUnitedStockPoolRsq.create = function (is) {
    return FuPan.FBatchUnitedStockPoolRsq._readFrom(is);
}
FuPan.FZTTagReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.vecTagType = new TafStream.List(_TAF_MODULE_F_.FuPan.E_ZT_TAG_TYPE);
    this.eDataType = _TAF_MODULE_F_.FuPan.E_TAG_DATA_TYPE.E_TAG_DATA_PANMIAN_LIGHT;
    this.nStartDate = 0;
    this.nEndDate = 0;
    this._classname = "FuPan.FZTTagReq";
};
FuPan.FZTTagReq.prototype = new TafStream.JceStruct();
FuPan.FZTTagReq._classname = "FuPan.FZTTagReq";

FuPan.FZTTagReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZTTagReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZTTagReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZTTagReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.vecTagType = is.readList(1, false, TafStream.List(_TAF_MODULE_F_.FuPan.E_ZT_TAG_TYPE));
    tmp.eDataType = is.readInt32(2, false, _TAF_MODULE_F_.FuPan.E_TAG_DATA_TYPE.E_TAG_DATA_PANMIAN_LIGHT);
    tmp.nStartDate = is.readInt32(3, false, 0);
    tmp.nEndDate = is.readInt32(4, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZTTagReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.vecTagType != undefined) {
        os.writeList(1, this.vecTagType);
    }
    if (this.eDataType != undefined) {
        os.writeInt32(2, this.eDataType);
    }
    if (this.nStartDate != undefined && this.nStartDate != 0) {
        os.writeInt32(3, this.nStartDate);
    }
    if (this.nEndDate != undefined && this.nEndDate != 0) {
        os.writeInt32(4, this.nEndDate);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZTTagReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZTTagReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZTTagReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.vecTagType = this.vecTagType.toObject();
    tmp.eDataType = this.eDataType;
    tmp.nStartDate = this.nStartDate;
    tmp.nEndDate = this.nEndDate;
    
    return tmp;
}
FuPan.FZTTagReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("vecTagType") || (this.vecTagType.readFromObject(json.vecTagType));
    !json.hasOwnProperty("eDataType") || (this.eDataType = json.eDataType);
    !json.hasOwnProperty("nStartDate") || (this.nStartDate = json.nStartDate);
    !json.hasOwnProperty("nEndDate") || (this.nEndDate = json.nEndDate);
}
FuPan.FZTTagReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZTTagReq.new = function () {
    return new FuPan.FZTTagReq();
}
FuPan.FZTTagReq.create = function (is) {
    return FuPan.FZTTagReq._readFrom(is);
}
FuPan.FZTTagRsp = function() {
    this.vecTagData = new TafStream.List(_TAF_MODULE_F_.FuPan.FStockZTTag);
    this._classname = "FuPan.FZTTagRsp";
};
FuPan.FZTTagRsp.prototype = new TafStream.JceStruct();
FuPan.FZTTagRsp._classname = "FuPan.FZTTagRsp";

FuPan.FZTTagRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZTTagRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZTTagRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZTTagRsp();
    tmp.vecTagData = is.readList(0, false, TafStream.List(_TAF_MODULE_F_.FuPan.FStockZTTag));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZTTagRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecTagData != undefined) {
        os.writeList(0, this.vecTagData);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZTTagRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZTTagRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZTTagRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecTagData = this.vecTagData.toObject();
    
    return tmp;
}
FuPan.FZTTagRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecTagData") || (this.vecTagData.readFromObject(json.vecTagData));
}
FuPan.FZTTagRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZTTagRsp.new = function () {
    return new FuPan.FZTTagRsp();
}
FuPan.FZTTagRsp.create = function (is) {
    return FuPan.FZTTagRsp._readFrom(is);
}
FuPan.FZTAllTagTypeReq = function() {
    this.stHeader = new _TAF_MODULE_I_.HQSys.HeaderInfo();
    this.lRefreshTime = 0;
    this.eTagType = _TAF_MODULE_F_.FuPan.E_TAG_DATA_TYPE.E_TAG_DATA_PANMIAN_LIGHT;
    this._classname = "FuPan.FZTAllTagTypeReq";
};
FuPan.FZTAllTagTypeReq.prototype = new TafStream.JceStruct();
FuPan.FZTAllTagTypeReq._classname = "FuPan.FZTAllTagTypeReq";

FuPan.FZTAllTagTypeReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZTAllTagTypeReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZTAllTagTypeReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZTAllTagTypeReq();
    tmp.stHeader = is.readStruct(0, false, _TAF_MODULE_I_.HQSys.HeaderInfo);
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp.eTagType = is.readInt32(2, false, _TAF_MODULE_F_.FuPan.E_TAG_DATA_TYPE.E_TAG_DATA_PANMIAN_LIGHT);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZTAllTagTypeReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeStruct(0, this.stHeader);
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    if (this.eTagType != undefined) {
        os.writeInt32(2, this.eTagType);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZTAllTagTypeReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZTAllTagTypeReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZTAllTagTypeReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stHeader = this.stHeader.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    tmp.eTagType = this.eTagType;
    
    return tmp;
}
FuPan.FZTAllTagTypeReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stHeader") || (this.stHeader.readFromObject(json.stHeader));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
    !json.hasOwnProperty("eTagType") || (this.eTagType = json.eTagType);
}
FuPan.FZTAllTagTypeReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZTAllTagTypeReq.new = function () {
    return new FuPan.FZTAllTagTypeReq();
}
FuPan.FZTAllTagTypeReq.create = function (is) {
    return FuPan.FZTAllTagTypeReq._readFrom(is);
}
FuPan.FTagTypeInfo = function() {
    this.eType = _TAF_MODULE_F_.FuPan.E_ZT_TAG_TYPE.E_ZT_TAG_ALL;
    this.strTypeName = "";
    this._classname = "FuPan.FTagTypeInfo";
};
FuPan.FTagTypeInfo.prototype = new TafStream.JceStruct();
FuPan.FTagTypeInfo._classname = "FuPan.FTagTypeInfo";

FuPan.FTagTypeInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FTagTypeInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FTagTypeInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FTagTypeInfo();
    tmp.eType = is.readInt32(0, false, _TAF_MODULE_F_.FuPan.E_ZT_TAG_TYPE.E_ZT_TAG_ALL);
    tmp.strTypeName = is.readString(1, false, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FTagTypeInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.eType != undefined) {
        os.writeInt32(0, this.eType);
    }
    if (this.strTypeName != undefined && this.strTypeName != "") {
        os.writeString(1, this.strTypeName);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FTagTypeInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FTagTypeInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FTagTypeInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.eType = this.eType;
    tmp.strTypeName = this.strTypeName;
    
    return tmp;
}
FuPan.FTagTypeInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("eType") || (this.eType = json.eType);
    !json.hasOwnProperty("strTypeName") || (this.strTypeName = json.strTypeName);
}
FuPan.FTagTypeInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FTagTypeInfo.new = function () {
    return new FuPan.FTagTypeInfo();
}
FuPan.FTagTypeInfo.create = function (is) {
    return FuPan.FTagTypeInfo._readFrom(is);
}
FuPan.FZTAllTagTypeRsp = function() {
    this.vecType = new TafStream.List(FuPan.FTagTypeInfo);
    this.lRefreshTime = 0;
    this._classname = "FuPan.FZTAllTagTypeRsp";
};
FuPan.FZTAllTagTypeRsp.prototype = new TafStream.JceStruct();
FuPan.FZTAllTagTypeRsp._classname = "FuPan.FZTAllTagTypeRsp";

FuPan.FZTAllTagTypeRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
FuPan.FZTAllTagTypeRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
FuPan.FZTAllTagTypeRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new FuPan.FZTAllTagTypeRsp();
    tmp.vecType = is.readList(0, false, TafStream.List(FuPan.FTagTypeInfo));
    tmp.lRefreshTime = is.readInt64(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
FuPan.FZTAllTagTypeRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.vecType != undefined) {
        os.writeList(0, this.vecType);
    }
    if (this.lRefreshTime != undefined && this.lRefreshTime != 0) {
        os.writeInt64(1, this.lRefreshTime);
    }
    os.resumePrecision && os.resumePrecision();
};
FuPan.FZTAllTagTypeRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
FuPan.FZTAllTagTypeRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
FuPan.FZTAllTagTypeRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecType = this.vecType.toObject();
    tmp.lRefreshTime = this.lRefreshTime;
    
    return tmp;
}
FuPan.FZTAllTagTypeRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecType") || (this.vecType.readFromObject(json.vecType));
    !json.hasOwnProperty("lRefreshTime") || (this.lRefreshTime = json.lRefreshTime);
}
FuPan.FZTAllTagTypeRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
FuPan.FZTAllTagTypeRsp.new = function () {
    return new FuPan.FZTAllTagTypeRsp();
}
FuPan.FZTAllTagTypeRsp.create = function (is) {
    return FuPan.FZTAllTagTypeRsp._readFrom(is);
}

FuPan.ZTQueryProxy.prototype.batchBlkStormEyeIdx = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FBlkStormEyeIdxRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('batchBlkStormEyeIdx', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.batchStkCaUnuAct = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FBatchStkCaUnuActRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('batchStkCaUnuAct', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.batchStockData = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FBatchStkDataRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('batchStockData', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.batchStockPool = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FBatchStockPoolRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('batchStockPool', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.batchSubDragonHeadStock = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FSubDragonHeadStockRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('batchSubDragonHeadStock', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.batchUnitedStockPool = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FBatchUnitedStockPoolRsq);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('batchUnitedStockPool', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.blkCurUnZT = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FBlkCurUnZTRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('blkCurUnZT', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.blkCurZT = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FBlkCurZTRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('blkCurZT', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.blkCurrent = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FBlkCurrentRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('blkCurrent', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.blkHisTurn = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FBlkHisTurnRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('blkHisTurn', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.blkLastHis = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FBlkLastHisRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('blkLastHis', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.blkStockHis = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FBlkStockHisRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('blkStockHis', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.blkTimeHis = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FBlkTimeHisRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('blkTimeHis', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.boardDetail = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FBoardDetailRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('boardDetail', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getAllCallAuctionData = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FCaUnuActTypeDataRsq);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getAllCallAuctionData', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getAllTagType = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FZTAllTagTypeRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getAllTagType', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getBlkChanges = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FBlkChangesRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getBlkChanges', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getBlkUnusualAction = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FBlkUnuActRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getBlkUnusualAction', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getBlkUnusualActionTag = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FBlkUnuActFlagRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getBlkUnusualActionTag', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getBlockBasicData = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FBlkBasicDataRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getBlockBasicData', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getBlockExternData = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FBlkExtDataRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getBlockExternData', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getBlockStockData = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FBlkStkDataRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getBlockStockData', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getCaUnuActLevelStk = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FCaUnuActLevelStkRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getCaUnuActLevelStk', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getCaUnuActTypeData = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FCaUnuActTypeDataRsq);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getCaUnuActTypeData', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getCatchBullStock = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FCatchBullStkRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getCatchBullStock', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getHisFactorData = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FHisFactorRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getHisFactorData', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getHotPointBlkStock = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FHotPointBlkStkRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getHotPointBlkStock', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getLeadBlkByDate = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FLeadBlkRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getLeadBlkByDate', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getNumOfCallAuctionStk = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FNumOfCallAuctionStkRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getNumOfCallAuctionStk', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getStockPoolFBoardPeriod = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FStockPoolFBoardPeriodRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getStockPoolFBoardPeriod', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getSubNewStock = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FSubNewStockRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getSubNewStock', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getTagTypeData = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FZTTagRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getTagTypeData', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getUltraShortLastZTStock = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FUltraShtLastZtStkRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getUltraShortLastZTStock', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getUltraShortTermStock = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FUltraShortTermStkRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getUltraShortTermStock', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getZTModelStock = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FZTModelStockRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getZTModelStock', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getZTPanKouInfo = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FZDPanKouInfoRsq);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getZTPanKouInfo', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.getZTTrendStock = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FZTTrendStockRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getZTTrendStock', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.marketTrend = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FMarketTrendRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('marketTrend', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.marketTrendVec = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FMarketTrendVecRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('marketTrendVec', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.pushBlockChangeDataNew = function (sPushBlockChangeDataNew) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, sPushBlockChangeDataNew);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('pushBlockChangeDataNew', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.pushLeadBlkInfo = function (sPushLeadBlkInfo) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, sPushLeadBlkInfo);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('pushLeadBlkInfo', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.pushNewTradeDate = function (iNewDate) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeInt32(1, iNewDate);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('pushNewTradeDate', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

FuPan.ZTQueryProxy.prototype.stockPool = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, FuPan.FStockPoolRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('stockPool', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}



